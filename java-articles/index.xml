<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java-articles on Simple Solution</title>
    <link>https://simplesolution.dev/java-articles/</link>
    <description>Recent content in Java-articles on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 28 Feb 2020 00:37:35 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/java-articles/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring Boot Web Application Upload File</title>
      <link>https://simplesolution.dev/spring-boot-web-application-upload-file/</link>
      <pubDate>Fri, 28 Feb 2020 00:37:35 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-web-application-upload-file/</guid>
      <description>In this tutorial we’re going to learn how to implement file uploading function in a Spring Boot web application.
Creating Spring Boot Project with Spring Tool Suite on Eclipse Open Spring Tool Suite and go to menu File -&amp;gt; New -&amp;gt; Spring Starter Project.
On the New Spring Starter Project window, input your project information as below screenshot and click Next button.
On the New Spring Starter Project Dependencies, choose Thymeleaf and Spring Web then click Finish.</description>
    </item>
    
    <item>
      <title>Generate Thumbnail Images in Java with Thumbnailator library</title>
      <link>https://simplesolution.dev/generate-thumbnail-images-in-java-with-thumbnailator-library/</link>
      <pubDate>Thu, 27 Feb 2020 00:52:08 +0700</pubDate>
      
      <guid>https://simplesolution.dev/generate-thumbnail-images-in-java-with-thumbnailator-library/</guid>
      <description>As a daily job of a web developer you usually have the scenario that you need to generate the thumbnail image from a large original image. This take can easily be done by the Thumbnailator library, an easy to use thumbnail generation library for Java. In this Java tutorial we are going to learn how to use the Thumbnailator library.
Thumbnailator home page: github.com/coobird/thumbnailator
Project Dependencies:
Adding below dependencies to build.</description>
    </item>
    
    <item>
      <title>Top 3 Libraries for Writing and Reading CSV File in Java</title>
      <link>https://simplesolution.dev/top-3-libraries-for-writing-and-reading-csv-file-in-java/</link>
      <pubDate>Wed, 26 Feb 2020 01:15:38 +0700</pubDate>
      
      <guid>https://simplesolution.dev/top-3-libraries-for-writing-and-reading-csv-file-in-java/</guid>
      <description>In this tutorial we’re going to learn how to use open source Java libraries to quickly write and read Comma Separated Values or CSV file format. We will explore 3 useful libraries and implement Java programs to write and read CSV files using each library.
Apache Commons CSV Home page: commons.apache.org/proper/commons-csv/
Project Dependencies:
Adding below dependencies to build.gradle file if you are using Gradle build tool. compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-csv&amp;#39;, version: &amp;#39;1.</description>
    </item>
    
    <item>
      <title>Apache POI Hide and Unhide Excel Row using Row.setZeroHeight()</title>
      <link>https://simplesolution.dev/apache-poi-hide-and-unhide-excel-row-using-row.setzeroheight/</link>
      <pubDate>Thu, 09 Jan 2020 07:56:46 +0700</pubDate>
      
      <guid>https://simplesolution.dev/apache-poi-hide-and-unhide-excel-row-using-row.setzeroheight/</guid>
      <description>Introduction In Excel there is an option to hide / unhide a row by select the row then righ click on it and choose Hide / Unhide option. In this tutorial we will learn how to use Apache POI library in Java to create an Excel file and hide its row. Then we try to unhide it by another Java application example.
Apache POI Overview Apache POI is a open source library to work with Microsoft Office documents in Java.</description>
    </item>
    
    <item>
      <title>Apache POI Creating Multiple Fonts Excel Cell using RichTextString</title>
      <link>https://simplesolution.dev/apache-poi-creating-multiple-fonts-excel-cell-using-richtextstring/</link>
      <pubDate>Tue, 07 Jan 2020 00:42:52 +0700</pubDate>
      
      <guid>https://simplesolution.dev/apache-poi-creating-multiple-fonts-excel-cell-using-richtextstring/</guid>
      <description>Introduction In this tutorial we will learn how to create an Excel cell with multiple font styles using Apache POI library.
We will implement different examples to create .xls and xlsx Excel file format using HSSFRichTextString and XSSFRichTextString class in Apache POI.
Apache POI Overview Apache POI is a open source library to work with Microsoft Office documents in Java.
You can get more information about the project at poi.</description>
    </item>
    
    <item>
      <title>Creating PDF Document Page Labels in Java with Apache PDFBox</title>
      <link>https://simplesolution.dev/creating-pdf-document-page-labels-in-java-with-apache-pdfbox/</link>
      <pubDate>Thu, 02 Jan 2020 21:58:44 +0700</pubDate>
      
      <guid>https://simplesolution.dev/creating-pdf-document-page-labels-in-java-with-apache-pdfbox/</guid>
      <description>Introduction In PDF document format the page label to identify each document page visually for example showing text label on thumbnail panel on PDF reader application. In this Java tutorial we will learn how to create page labels for PDF document by Java application using Apache PDFBox library.
Apache PDFBox Library Overview The Apache PDFBox is an open source Java library for working with PDF documents. You can get more information about the project at pdfbox.</description>
    </item>
    
    <item>
      <title>Creating Bookmarks for PDF Document in Java with Apache PDFBox</title>
      <link>https://simplesolution.dev/creating-bookmarks-for-pdf-document-in-java-with-apache-pdfbox/</link>
      <pubDate>Wed, 01 Jan 2020 21:37:14 +0700</pubDate>
      
      <guid>https://simplesolution.dev/creating-bookmarks-for-pdf-document-in-java-with-apache-pdfbox/</guid>
      <description>Introduction In this tutorial we will learn how to add bookmark items to a PDF document in Java using Apache PDFBox library. The post also show how to add bookmarks for new PDF document and existing PDF file.
Apache PDFBox Library Overview The Apache PDFBox is an open source Java library for working with PDF documents. You can get more information about the project at pdfbox.apache.org
Adding Apache PDFBox Dependencies Adding below dependencies to build.</description>
    </item>
    
    <item>
      <title>Apache PDFBox Adding Metadata to PDF Document in Java</title>
      <link>https://simplesolution.dev/apache-pdfbox-adding-metadata-to-pdf-document-in-java/</link>
      <pubDate>Wed, 01 Jan 2020 15:34:11 +0700</pubDate>
      
      <guid>https://simplesolution.dev/apache-pdfbox-adding-metadata-to-pdf-document-in-java/</guid>
      <description>Introduction This toturial will show you how to adding metadata information such as title, creation date, modification date, author, creator tool, producer keywords etc. and custom properties to a new PDF document or the existing PDF file in Java using Apache PDFBox library.
Apache PDFBox Overview The Apache PDFBox is an open source library for working with PDF documents in Java. You can get more information about the project at pdfbox.</description>
    </item>
    
    <item>
      <title>Insert Image to PDF Document in Java using Apache PDFBox</title>
      <link>https://simplesolution.dev/insert-image-to-pdf-document-in-java-using-apache-pdfbox/</link>
      <pubDate>Mon, 30 Dec 2019 01:19:11 +0700</pubDate>
      
      <guid>https://simplesolution.dev/insert-image-to-pdf-document-in-java-using-apache-pdfbox/</guid>
      <description>Introduction In this tutorial we will learn how to create a PDF document using Apache PDFBox libary in Java and then insert an image to a PDF document page.
Apache PDFBox Overview The Apache PDFBox is an open source library for working with PDF documents in Java. You can get more information about the project at pdfbox.apache.org
Adding Apache PDFBox Dependencies Adding below dependencies to build.gradle file if you are using Gradle build tool.</description>
    </item>
    
    <item>
      <title>Creating PDF Document File in Java using Apache PDFBox</title>
      <link>https://simplesolution.dev/creating-pdf-document-file-in-java-using-apache-pdfbox/</link>
      <pubDate>Sun, 29 Dec 2019 10:26:47 +0700</pubDate>
      
      <guid>https://simplesolution.dev/creating-pdf-document-file-in-java-using-apache-pdfbox/</guid>
      <description>Introduction In this tutorial we will learn how to create a PDF document file in Java application using Apache PDFBox library.
Apache PDFBox Overview The Apache PDFBox is an open source library for working with PDF documents in Java. You can get more information about the project at pdfbox.apache.org
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Apache PDFBox Dependencies Adding below dependencies to build.gradle file if you are using Gradle build tool.</description>
    </item>
    
  </channel>
</rss>