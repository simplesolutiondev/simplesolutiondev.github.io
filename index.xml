<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simple Solution</title>
    <link>https://simplesolution.dev/</link>
    <description>Recent content on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Apr 2019 14:00:00 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to use Java ArrayList with Examples</title>
      <link>https://simplesolution.dev/how-to-use-java-arraylist-with-examples/</link>
      <pubDate>Sun, 07 Apr 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/how-to-use-java-arraylist-with-examples/</guid>
      <description>In this tutorial we will go through a list of examples to show you how use java.util.ArrayList in Java program. You will learn how to adding, updating, getting, sorting and other operations on elements of an ArrayList. ArrayList is an implementation of List interface with class diagram as below:
How to add one element to an ArrayList There are two approaches to add an element to ArrayList which is append it to the end of the list or you can insert it to specified index position List&amp;lt;String&amp;gt; list = new ArrayList&amp;lt;&amp;gt;();list.</description>
    </item>
    
    <item>
      <title>How to use Java ArrayDeque with Examples</title>
      <link>https://simplesolution.dev/how-to-use-java-arraydeque-with-examples/</link>
      <pubDate>Thu, 04 Apr 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/how-to-use-java-arraydeque-with-examples/</guid>
      <description>In this tutorial we will learn how to use the java.util.ArrayDeque class, a member class of Java Collections Framework. We will go through different examples to see how this class suppport methods that allow you to insert and retrieves element in both front and end of the element list. ArrayDeque is an implementation of Deque interface with class diagram as below:
How to use ArrayDeque as a stack We can push an element onto the stack and pop it from stack using ArrayDeque as below Deque&amp;lt;Integer&amp;gt; deque = new ArrayDeque&amp;lt;&amp;gt;();deque.</description>
    </item>
    
    <item>
      <title>Gradle Configuration to generate Java classes from WSDL with JAXB</title>
      <link>https://simplesolution.dev/gradle-configuration-to-generate-java-classes-from-wsdl-with-jaxb/</link>
      <pubDate>Wed, 03 Apr 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/gradle-configuration-to-generate-java-classes-from-wsdl-with-jaxb/</guid>
      <description>In this blog post we will learn the step by step guide to configure gradle build file in order to generate Java classes from a WSDL file. This configure will be useful when you are working on project related to SOAP web service.
Let start with an empty Java project with build.gradle file as below group &amp;#39;simplesolution.dev&amp;#39;version &amp;#39;1.0.0&amp;#39;apply plugin: &amp;#39;java&amp;#39;sourceCompatibility = 1.8repositories {mavenCentral()}dependencies {}</description>
    </item>
    
    <item>
      <title>How to use BigDecimal in Java by Examples</title>
      <link>https://simplesolution.dev/how-to-use-bigdecimal-in-java-by-examples/</link>
      <pubDate>Sat, 30 Mar 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/how-to-use-bigdecimal-in-java-by-examples/</guid>
      <description>As a Java developer if you are working with financial systems or developing systems that need granularity in your calculation then you should thinking about BigDecimal. BigDecimal is an immutable class, provides in java.math package. It consists of operations for arithmetic, scale manipulation, rounding, comparison, hashing, and format conversion. In this blog post we will learn how to use BigDecimal through a list of examples.
How to initialize BigDecimal object We can initialize BigDecimal object by using constructor or static factory methods: BigDecimal bigDecimal1 = new BigDecimal(123456.</description>
    </item>
    
    <item>
      <title>Top 5 Libraries for Serialization and Deserialization JSON in Java</title>
      <link>https://simplesolution.dev/top-5-libraries-for-serialization-and-deserialization-json-in-java/</link>
      <pubDate>Sat, 30 Mar 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/top-5-libraries-for-serialization-and-deserialization-json-in-java/</guid>
      <description>In this blog post we will go through 5 useful open source libraries to serialization and deserialize JSON data in Java application. For each library we will write a simple code sample to show you how to use the library to convert Java object to a JSON string and vice-versa.
Gson Github repository: github.com/google/gson
Adding Gson dependency into your project Using Gradle compile group: &amp;#39;com.google.code.gson&amp;#39;, name: &amp;#39;gson&amp;#39;, version: &amp;#39;2.8.5&amp;#39;</description>
    </item>
    
    <item>
      <title>Writing Excel File Using Apache POI Library in Java</title>
      <link>https://simplesolution.dev/writing-excel-file-using-apache-poi-library-in-java/</link>
      <pubDate>Tue, 26 Mar 2019 20:34:25 +0700</pubDate>
      
      <guid>https://simplesolution.dev/writing-excel-file-using-apache-poi-library-in-java/</guid>
      <description>Apache POI is and open source Java library allow you to read and write Microsoft Documents such as Excel workbook, Word document, Powerpoint presentation.
In this blog post I will show you how to use Apache POI library to writing an Excel file. Throughout this blog post we will implement an Java application to generate the Excel file as the figure below:
Overview Apache POI Library At the time of writing this blog post, the latest stable release is Apache POI 4.</description>
    </item>
    
  </channel>
</rss>