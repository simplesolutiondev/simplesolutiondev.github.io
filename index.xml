<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Simple Solution</title>
    <link>https://simplesolution.dev/</link>
    <description>Recent content on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Jan 2021 01:18:48 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java Enum with Values Getter methods and Constructor</title>
      <link>https://simplesolution.dev/java-enum-with-values-getter-methods-and-constructor/</link>
      <pubDate>Mon, 25 Jan 2021 01:18:48 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-enum-with-values-getter-methods-and-constructor/</guid>
      <description>In this Java core tutorial, we learn how to define a new enum in Java with constructor and getter methods.
   (adsbygoogle = window.adsbygoogle || []).push({});  Define new enum with constructor and getter methods. ResultCode.java public enum ResultCode { SUCCESS(200, &amp;#34;Success&amp;#34;), FAILED(500, &amp;#34;Server Error&amp;#34;), VALIDATE_FAILED(404,&amp;#34;Validated Failed&amp;#34;), UNAUTHORIZED(401,&amp;#34;Un Authorized&amp;#34;), FORBIDDEN(403,&amp;#34;Forbidden&amp;#34;); private int code; private String message; private ResultCode(int code, String message) { this.code = code; this.message = message; } public int getCode() { return code; } public String getMessage() { return message; } }</description>
    </item>
    
    <item>
      <title>Connect to MongoDB Database in Java using MongoDB Driver Sync</title>
      <link>https://simplesolution.dev/java-mongodb-driver-sync-connect-to-mongodb-database/</link>
      <pubDate>Mon, 25 Jan 2021 00:20:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-mongodb-driver-sync-connect-to-mongodb-database/</guid>
      <description>In this Java MongoDB tutorial, we learn how to use MongoDB Drive Sync library to connect to a MongoDB database.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add MongoDB Synchronous Driver to your Java project To use the MongoDB Synchronous Driver Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;org.mongodb&amp;#39;, name: &amp;#39;mongodb-driver-sync&amp;#39;, version: &amp;#39;4.2.0&amp;#39; To use the MongoDB Synchronous Driver Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Joda Time Interval by Examples in Java</title>
      <link>https://simplesolution.dev/java-joda-time-interval-by-examples/</link>
      <pubDate>Fri, 22 Jan 2021 20:44:28 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-interval-by-examples/</guid>
      <description>In this Java Joda-Time tutorial, we learn how to use the org.joda.time.Interval class of Joda-Time library by different example Java programs.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.10.9&amp;#39; To use Joda Time Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Get User Home Directory in Java</title>
      <link>https://simplesolution.dev/java-get-user-home-directory/</link>
      <pubDate>Fri, 22 Jan 2021 01:01:39 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-user-home-directory/</guid>
      <description>In this Java core tutorial, we learn how to get the user home directory in the Java program.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to use System.getProperty() static method to get user home directory GetUserHome.java public class GetUserHome { public static void main(String[] args) { String userHomeDirectory = System.getProperty(&amp;#34;user.home&amp;#34;); System.out.println(&amp;#34;User Home Directory: &amp;#34; + userHomeDirectory); } } The output is: User Home Directory: C:\Users\SimpleS
Related Articles Get Operating System Name in Java</description>
    </item>
    
    <item>
      <title>Get Java Version</title>
      <link>https://simplesolution.dev/java-get-version/</link>
      <pubDate>Fri, 22 Jan 2021 00:42:51 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-version/</guid>
      <description>In this Java core tutorial, we learn how to get the Java version in a Java program.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to use System.getProperty() static method to get Java version GetJavaVersion.java public class GetJavaVersion { public static void main(String[] args) { String jdkVersion = System.getProperty(&amp;#34;java.version&amp;#34;); System.out.println(&amp;#34;Java version: &amp;#34; + jdkVersion); } } The output is: Java version: 14.0.1
Happy Coding ðŸ˜Š
Related Articles Get Operating System Name in Java</description>
    </item>
    
    <item>
      <title>Joda Time Period by Examples in Java</title>
      <link>https://simplesolution.dev/java-joda-time-period-by-examples/</link>
      <pubDate>Thu, 21 Jan 2021 21:35:28 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-period-by-examples/</guid>
      <description>In this Java tutorial, we learn how to use the org.joda.time.Period class of Joda-Time library by different example Java programs.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.10.9&amp;#39; To use Joda Time Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Joda-Time Gets Default Time Zone Names in Java</title>
      <link>https://simplesolution.dev/java-joda-time-get-default-time-zone-names/</link>
      <pubDate>Thu, 21 Jan 2021 01:24:08 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-get-default-time-zone-names/</guid>
      <description>In this Joda-Time tutorial, we show you how to use Joda-Timeâ€™s DateTimeUtils class to get the list of default time zone names in a Java program.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.10.9&amp;#39; To use Joda Time Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Get Date and Time fields value of Joda-Time DateTime object in Java</title>
      <link>https://simplesolution.dev/java-joda-time-get-date-time-fields-of-datetime/</link>
      <pubDate>Thu, 21 Jan 2021 00:58:41 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-get-date-time-fields-of-datetime/</guid>
      <description>In this Joda-Time tutorial, we learn how to get specified date and time fields of a DateTime object such as year, month day, hour, minute, second, millisecond in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.</description>
    </item>
    
    <item>
      <title>Joda Time Duration by Examples in Java</title>
      <link>https://simplesolution.dev/java-joda-time-duration-by-examples/</link>
      <pubDate>Thu, 21 Jan 2021 00:02:17 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-duration-by-examples/</guid>
      <description>In this Joda-Time tutorial, we learn how to use the org.joda.time.Duration class of Joda-Time library by different example Java programs.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.10.9&amp;#39; To use Joda Time Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Generate Random UUID in Java</title>
      <link>https://simplesolution.dev/java-generate-random-uuid/</link>
      <pubDate>Wed, 20 Jan 2021 00:17:40 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-generate-random-uuid/</guid>
      <description>In this Java core tutorial, we learn how to use java.util.UUID class in Java to generate a random universally unique identifier (UUID).
   (adsbygoogle = window.adsbygoogle || []).push({});  In the following Java program, we show how to use UUID.randomUUID() static method to generate a new random UUID value.
GenerateRandomUUID.java import java.util.UUID; public class GenerateRandomUUID { public static void main(String[] args) { UUID uuid = UUID.randomUUID(); String uuidString = uuid.</description>
    </item>
    
    <item>
      <title>Joda-Time Create DateTime with Time End of the Day in Java</title>
      <link>https://simplesolution.dev/java-joda-time-create-datetime-with-time-end-of-day/</link>
      <pubDate>Tue, 19 Jan 2021 22:17:07 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-create-datetime-with-time-end-of-day/</guid>
      <description>In this Joda-Time tutorial, we learn how to create a new DateTime object or convert an existing DateTime object to a new DateTime object with the time set to end of the day at 23:59:59.999 in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Compare Joda-Time DateTime using DateTimeComparator in Java</title>
      <link>https://simplesolution.dev/java-joda-time-compare-datetime-using-datetimecomparator/</link>
      <pubDate>Tue, 19 Jan 2021 21:10:25 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-compare-datetime-using-datetimecomparator/</guid>
      <description>In this Joda-Time tutorial, we learn how to use Joda-Timeâ€™s DateTimeComparator class to compare DateTime objects. With different built-in comparators we will learn how to compare DateTime objects with different specified fields such as date, time or date and time.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Format Joda-Time DateTime String using ISODateTimeFormat in Java</title>
      <link>https://simplesolution.dev/java-format-joda-time-datetime-string-using-isodatetimeformat/</link>
      <pubDate>Tue, 19 Jan 2021 00:56:38 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-format-joda-time-datetime-string-using-isodatetimeformat/</guid>
      <description>In this Joda-Time tutorial, we learn how to use the ISODateTimeFormat class of Joda-Time library to format the DateTime object into a String. With different built-in formatters of ISODateTimeFormat class we can format date time String in different format.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Convert Joda-Time DateTime into Calendar and Vice Versa in Java</title>
      <link>https://simplesolution.dev/java-joda-time-convert-datetime-into-calendar-and-vice-versa/</link>
      <pubDate>Mon, 18 Jan 2021 22:45:17 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-convert-datetime-into-calendar-and-vice-versa/</guid>
      <description>In this Joda-Time tutorial, we learn how to convert Joda-Timeâ€™s DateTime object into java.util.Calendar object and vice versa from java.util.Calendar object into Joda-Timeâ€™s DateTime object in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.</description>
    </item>
    
    <item>
      <title>Convert Joda-Time DateTime into String and Vice Versa in Java</title>
      <link>https://simplesolution.dev/java-joda-time-convert-datetime-into-string-and-vice-versa/</link>
      <pubDate>Mon, 18 Jan 2021 21:30:50 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-convert-datetime-into-string-and-vice-versa/</guid>
      <description>In this Joda-Time tutorial, we learn how to convert Joda-Timeâ€™s DateTime object into String value and vice versa parse String value into Joda-Timeâ€™s DateTime object in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.</description>
    </item>
    
    <item>
      <title>Convert SQL Timestamp  into Joda-Time DateTime and Vice Versa in Java</title>
      <link>https://simplesolution.dev/java-joda-time-convert-timestamp-into-datetime-and-vice-versa/</link>
      <pubDate>Sun, 17 Jan 2021 18:21:04 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-convert-timestamp-into-datetime-and-vice-versa/</guid>
      <description>In this Joda-Time tutorial, we learn how to convert an SQL Timestamp object into Joda-Timeâ€™ DateTime object and vice versace from Joda-Timeâ€™s DateTime into a Timestamp in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.</description>
    </item>
    
    <item>
      <title>Joda-Time Create DateTime with Time Start Of the Day in Java</title>
      <link>https://simplesolution.dev/java-joda-time-create-datetime-with-time-start-of-day/</link>
      <pubDate>Sun, 17 Jan 2021 17:12:06 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-create-datetime-with-time-start-of-day/</guid>
      <description>In this Joda-Time tutorial, we learn how to create a new DateTime object or convert an existing DateTime object to a new DateTime object with the time set to start of the day at 00:00:00.000 in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Joda-Time Create UTC DateTime in Java</title>
      <link>https://simplesolution.dev/java-joda-time-create-utc-datetime/</link>
      <pubDate>Sun, 17 Jan 2021 16:42:17 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-create-utc-datetime/</guid>
      <description>In this Joda-Time tutorial, we learn how to create a DateTime object to represent date and time in Universal Coordinated Time (UTC) time zone in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.10.9&amp;#39; To use Joda Time Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Convert Joda-Time DateTime into Date in Java</title>
      <link>https://simplesolution.dev/java-convert-joda-time-datetime-into-date/</link>
      <pubDate>Sun, 17 Jan 2021 16:03:12 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-joda-time-datetime-into-date/</guid>
      <description>In this Joda-Time tutorial, we learn how to convert a Joda-Timeâ€™s DateTime object into a java.util.Date object in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.10.9&amp;#39; To use Joda Time Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Joda Time DateTime by Examples in Java</title>
      <link>https://simplesolution.dev/java-joda-time-datetime-by-examples/</link>
      <pubDate>Sun, 17 Jan 2021 13:15:15 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-datetime-by-examples/</guid>
      <description>In this Java tutorial, we learn how to use the org.joda.time.DateTime class of Joda Time library by different example Java programs.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.10.9&amp;#39; To use Joda Time Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Joda Time LocalDateTime by Examples in Java</title>
      <link>https://simplesolution.dev/java-joda-time-localdatetime-by-examples/</link>
      <pubDate>Sat, 16 Jan 2021 18:04:04 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-localdatetime-by-examples/</guid>
      <description>In this Java tutorial, we learn how to use the org.joda.time.LocalDateTime class of Joda Time library by different example Java programs.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.10.9&amp;#39; To use Joda Time Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Joda Time LocalTime by Examples in Java</title>
      <link>https://simplesolution.dev/java-joda-time-localtime-by-examples/</link>
      <pubDate>Sat, 16 Jan 2021 11:51:22 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-localtime-by-examples/</guid>
      <description>In this Java tutorial, we learn how to use the org.joda.time.LocalTime class of Joda Time library by different example Java programs.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.10.9&amp;#39; To use Joda Time Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Joda Time LocalDate by Examples in Java</title>
      <link>https://simplesolution.dev/java-joda-time-localdate-by-examples/</link>
      <pubDate>Fri, 15 Jan 2021 21:54:01 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-localdate-by-examples/</guid>
      <description>In this Java tutorial, we learn how to use the org.joda.time.LocalDate class of Joda Time library by different example Java programs.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.10.9&amp;#39; To use Joda Time Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Joda Time Instant by Examples in Java</title>
      <link>https://simplesolution.dev/java-joda-time-instant-by-examples/</link>
      <pubDate>Thu, 14 Jan 2021 00:45:06 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-joda-time-instant-by-examples/</guid>
      <description>In this Java tutorial, we learn how to use the org.joda.time.Instant class of Joda Time library by different example Java programs.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Joda Time library to your Java project To use Joda Time Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;joda-time&amp;#39;, name: &amp;#39;joda-time&amp;#39;, version: &amp;#39;2.10.9&amp;#39; To use Joda Time Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Get Operating System Name in Java</title>
      <link>https://simplesolution.dev/java-get-os-name/</link>
      <pubDate>Tue, 12 Jan 2021 01:14:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-os-name/</guid>
      <description>In this Java core tutorial, we learn how to get the operating system name in a Java program.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to use System.getProperty() static method to get OS name public class Example { public static void main(String[] args) { String osName = System.getProperty(&amp;#34;os.name&amp;#34;); System.out.println(osName); } } The output is: Windows 10
Happy Coding ðŸ˜Š
Related Articles Get Java Version
Get User Home Directory in Java</description>
    </item>
    
    <item>
      <title>Extract .zip File in Java using Apache Commons Compress</title>
      <link>https://simplesolution.dev/java-extract-zip-file-using-apache-commons-compress/</link>
      <pubDate>Mon, 11 Jan 2021 01:16:12 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-extract-zip-file-using-apache-commons-compress/</guid>
      <description>In this Java tutorial, we learn how to use the Apache Commons Compress library to extract a .zip file into a directory in the Java program.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Apache Commons Compress library to your Java project To use Apache Commons Compress Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-compress&amp;#39;, version: &amp;#39;1.</description>
    </item>
    
    <item>
      <title>Create .zip File in Java using Apache Commons Compress</title>
      <link>https://simplesolution.dev/java-create-zip-file-using-apache-commons-compress/</link>
      <pubDate>Mon, 11 Jan 2021 01:15:48 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-create-zip-file-using-apache-commons-compress/</guid>
      <description>In this Java tutorial, we learn how to use the Apache Commons Compress library to create a .zip file in the Java program.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Apache Commons Compress library to your Java project To use Apache Commons Compress Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-compress&amp;#39;, version: &amp;#39;1.20&amp;#39; To use Apache Commons Compress Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Sort Map by Key in Java</title>
      <link>https://simplesolution.dev/java-sort-map-by-key/</link>
      <pubDate>Sat, 09 Jan 2021 17:22:53 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-sort-map-by-key/</guid>
      <description>In this Java core tutorial, we show you how to implement the Java method to sort elements of a Map object by its entry key in the Java program.
   (adsbygoogle = window.adsbygoogle || []).push({});  Implement method to sort a map by key Firstly, create a new class named MapUtils and implement a method sortMapByKey() which expects a Map as argument and returns a sorted Map.</description>
    </item>
    
    <item>
      <title>Sort Map by Value in Java</title>
      <link>https://simplesolution.dev/java-sort-map-by-value/</link>
      <pubDate>Sat, 09 Jan 2021 16:55:21 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-sort-map-by-value/</guid>
      <description>In this Java core tutorial, we show you how to implement the Java method to sort elements of a Map object by its entry value in the Java program.
   (adsbygoogle = window.adsbygoogle || []).push({});  Implement method to sort a map by value Firstly, create a new class named MapUtils and implement a method sortMapByValue() which expects a Map as argument and returns a sorted Map.</description>
    </item>
    
    <item>
      <title>Validate String Minimum and Maximum Length in Java</title>
      <link>https://simplesolution.dev/java-validate-string-min-max-length/</link>
      <pubDate>Sat, 09 Jan 2021 12:08:15 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-validate-string-min-max-length/</guid>
      <description>In this Java core tutorial, we learn how to implement a method to validate a String with minimum and maximum length.
   (adsbygoogle = window.adsbygoogle || []).push({});  Implement utility class to validate String length First step, we implement a new class named StringUtils with a method isValidLength() to check whether a String value is valid in minimum and maximum length or not.
StringUtils.java public class StringUtils { public static boolean isValidLength(String value, int minLength, int maxLength) { if(value == null) { return false; } int length = value.</description>
    </item>
    
    <item>
      <title>Validate Email Address in Java</title>
      <link>https://simplesolution.dev/java-validate-email-address/</link>
      <pubDate>Sat, 09 Jan 2021 11:14:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-validate-email-address/</guid>
      <description>In this Java core tutorial, we learn how to use the regular expression in Java to check whether an email address is valid or not.
   (adsbygoogle = window.adsbygoogle || []).push({});  Implement EmailUtils class At this step we implement a new class named EmailUtils with a static method isValidEmail() to validate email address String. The method expects an email address String as augment and returns boolean value whether the email address is valid or not.</description>
    </item>
    
    <item>
      <title>Check a String Is a Valid Integer in Java</title>
      <link>https://simplesolution.dev/java-check-string-is-valid-integer/</link>
      <pubDate>Thu, 07 Jan 2021 23:23:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-string-is-valid-integer/</guid>
      <description>In this Java core tutorial, we learn how to check if a String value is a valid integer value or not in Java program.
   (adsbygoogle = window.adsbygoogle || []).push({});  Implement isValidInteger() method In the following Java code, we implement a method to check if a given String is a valid integer or not and return the result in boolean value.
The method uses Javaâ€™s Integer.parseInt() static method to try to parse the String value, in case it is the invalid integer String the Exception throws then our method returns false value.</description>
    </item>
    
    <item>
      <title>Get Current Time in Java</title>
      <link>https://simplesolution.dev/java-current-time/</link>
      <pubDate>Thu, 07 Jan 2021 22:13:31 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-current-time/</guid>
      <description>In this Java core tutorial, we learn how to get current time in milliseconds in a Java program.
   (adsbygoogle = window.adsbygoogle || []).push({});  Using System.currentTimeMillis() static method CurrentTimeExample.java public class CurrentTimeExample { public static void main(String[] args) { long currentTime = System.currentTimeMillis(); System.out.println(currentTime + &amp;#34; Milliseconds&amp;#34;); } } The output is: 1610032553435 Milliseconds
Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Parse String into Integer value in Java</title>
      <link>https://simplesolution.dev/java-parse-string-into-integer/</link>
      <pubDate>Thu, 07 Jan 2021 21:38:31 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-parse-string-into-integer/</guid>
      <description>In this Java core tutorial, we learn how to convert a String value into int value in Java application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Using Integer.parseInt() static method Following Java example using Integer.parseInt() static method to convert a String value into int value.
ParseStringToIntExample1.java public class ParseStringToIntExample1 { public static void main(String[] args) { int result1 = Integer.parseInt(&amp;#34;1234&amp;#34;); int result2 = Integer.parseInt(&amp;#34;+5&amp;#34;); int result3 = Integer.</description>
    </item>
    
    <item>
      <title>org.springframework.core.annotation.Order Java Code Examples</title>
      <link>https://simplesolution.dev/org.springframework.core.annotation.order/</link>
      <pubDate>Thu, 07 Jan 2021 00:29:15 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.springframework.core.annotation.order/</guid>
      <description>How to use @Order annotation org.springframework.core.annotation.Order
   (adsbygoogle = window.adsbygoogle || []).push({});  User @Order annotation to change the run order of beans that implement CommandLineRunner interface FirstRunner.java package dev.simplesolution.console; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.boot.CommandLineRunner; import org.springframework.core.annotation.Order; import org.springframework.stereotype.Component; @Component @Order(2) public class FirstRunner implements CommandLineRunner { private Logger logger = LoggerFactory.getLogger(FirstRunner.class); @Override public void run(String... args) throws Exception { logger.info(&amp;#34;Message from First Runner.&amp;#34;); } }</description>
    </item>
    
    <item>
      <title>org.springframework.boot.CommandLineRunner Java Code Examples</title>
      <link>https://simplesolution.dev/org.springframework.boot.commandlinerunner/</link>
      <pubDate>Thu, 07 Jan 2021 00:17:45 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.springframework.boot.commandlinerunner/</guid>
      <description>How to use org.springframework.boot.CommandLineRunner class in Spring Boot.
   (adsbygoogle = window.adsbygoogle || []).push({});   org.springframework.boot.CommandLineRunner.run()  </description>
    </item>
    
    <item>
      <title>org.springframework.boot.CommandLineRunner.run() Java Code Examples</title>
      <link>https://simplesolution.dev/org.springframework.boot.commandlinerunner.run/</link>
      <pubDate>Thu, 07 Jan 2021 00:16:45 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.springframework.boot.commandlinerunner.run/</guid>
      <description>How to use run() method in org.springframework.boot.CommandLineRunner interface.
More Java code examples for org.springframework.boot.CommandLineRunner Spring Boot.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to use CommandLineRunner interface to run the bean in console application in Spring Boot FirstRunner.java package dev.simplesolution.console; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.boot.CommandLineRunner; import org.springframework.stereotype.Component; @Component public class FirstRunner implements CommandLineRunner { private Logger logger = LoggerFactory.getLogger(FirstRunner.class); @Override public void run(String... args) throws Exception { logger.</description>
    </item>
    
    <item>
      <title>Spring Boot Console Application using CommandLineRunner</title>
      <link>https://simplesolution.dev/spring-boot-console-application-commandlinerunner/</link>
      <pubDate>Wed, 06 Jan 2021 22:57:36 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-console-application-commandlinerunner/</guid>
      <description>In this Spring Boot tutorial, we are going to learn how to create a console application with Spring Boot using CommandLineRunner interface.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot Project Open Spring Tool Suite IDE, select menu File &amp;gt; New &amp;gt; Spring Starter Project.
On the New Spring Starter Project popup input new project information as below and click Next.
 Name: spring-boot-console-application Group: dev.</description>
    </item>
    
    <item>
      <title>Read and Parse CSV File in Java using Apache Commons CSV</title>
      <link>https://simplesolution.dev/java-read-and-parse-csv-file-using-apache-commons-csv/</link>
      <pubDate>Thu, 17 Dec 2020 00:06:32 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-and-parse-csv-file-using-apache-commons-csv/</guid>
      <description>In this tutorial, we learn how to parse CSV files in a Java application using Apache Commons CSV library. Via different Java code examples we learn how to create the CSV parser from File, InputStream, Path or Reader objects.
Add Apache Commons CSV library to your Java project To use Apache Commons CSV Java library in the Gradle build project, add the following dependency into the build.gradle file. compile group: &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Read and Parse CSV Content from an URL in Java using Apache Commons CSV</title>
      <link>https://simplesolution.dev/java-read-and-parse-csv-file-from-url-using-apache-commons-csv/</link>
      <pubDate>Wed, 16 Dec 2020 22:41:39 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-and-parse-csv-file-from-url-using-apache-commons-csv/</guid>
      <description>In this tutorial, we are going to show how to read and parse CSV content from an URL using Apache Commons CSV library.
Add Apache Commons CSV library to your Java project To use Apache Commons CSV Java library in the Gradle build project, add the following dependency into the build.gradle file. compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-csv&amp;#39;, version: &amp;#39;1.8&amp;#39;
To use Apache Commons CSV Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Read and Parse CSV Content from a String in Java using Apache Commons CSV</title>
      <link>https://simplesolution.dev/java-read-and-parse-csv-string-using-apache-commons-csv/</link>
      <pubDate>Wed, 16 Dec 2020 21:01:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-and-parse-csv-string-using-apache-commons-csv/</guid>
      <description>In this tutorial, we are going to learn how to read and parse CSV content from a Java String using Apache Commons CSV library.
Add Apache Commons CSV library to your Java project To use Apache Commons CSV Java library in the Gradle build project, add the following dependency into the build.gradle file. compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-csv&amp;#39;, version: &amp;#39;1.8&amp;#39;
To use Apache Commons CSV Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Write and Read CSV File in Java using Apache Commons CSV</title>
      <link>https://simplesolution.dev/java-write-read-csv-file-using-apache-commons-csv/</link>
      <pubDate>Wed, 16 Dec 2020 00:06:40 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-write-read-csv-file-using-apache-commons-csv/</guid>
      <description>In this tutorial, we are going to learn how to write and read CSV files in Java applications using Apache Commons CSV library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Apache Commons CSV library to your Java project To use Apache Commons CSV Java library in the Gradle build project, add the following dependency into the build.gradle file. compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-csv&amp;#39;, version: &amp;#39;1.8&amp;#39;
To use Apache Commons CSV Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Spring Boot Download Excel File Export from MySQL Database</title>
      <link>https://simplesolution.dev/spring-boot-download-excel-file-export-from-mysql/</link>
      <pubDate>Thu, 10 Dec 2020 00:29:48 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-download-excel-file-export-from-mysql/</guid>
      <description>Introduction In this tutorial, we are going to learn how to implement a download function for a Spring Boot web application to allow users download excel files, which the Excel file content export from a MySQL database table. Via step by step tutorial we learn how to implement the feature using different Java libraries such as Apache POI, Spring Data JPA, Spring Web, etc.
   (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>Create Temporary File in Java</title>
      <link>https://simplesolution.dev/java-create-temporary-file/</link>
      <pubDate>Wed, 02 Dec 2020 23:38:36 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-create-temporary-file/</guid>
      <description>In this tutorial, we are going to learn how to create a new temporary file in a Java program by using core Java API.
   (adsbygoogle = window.adsbygoogle || []).push({});  Using Java NIO Files.createTempFile() method to create temporary file The following Java example program to create a new temporary file in the default temporary directory in your machine. In order to create a new temp file you need to provide file name prefix and file extension (or file suffix), the method creates a new file with a unique name in your temporary directory.</description>
    </item>
    
    <item>
      <title>Convert Array to List in Java</title>
      <link>https://simplesolution.dev/java-convert-array-to-list/</link>
      <pubDate>Tue, 01 Dec 2020 23:15:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-array-to-list/</guid>
      <description>In this tutorial, we are going to show how to convert an array in Java into a List object. We show different example programs that use core Java APIs to convert arrays in different Java versions.
Using Arrays.asList() method In this Java example program, we use the method Arrays.asList() to create an ArrayList object from an array. import java.util.Arrays; import java.util.List; public class ArrayToListExample1 { public static void main(String[] args) { String[] inputArray = {&amp;#34;Simple&amp;#34;, &amp;#34;Solution&amp;#34;, &amp;#34;Java&amp;#34;, &amp;#34;Array&amp;#34;}; List&amp;lt;String&amp;gt; list = Arrays.</description>
    </item>
    
    <item>
      <title>Convert HTML into Plain Text in Java using jsoup</title>
      <link>https://simplesolution.dev/java-convert-html-into-plain-text-using-jsoup/</link>
      <pubDate>Mon, 30 Nov 2020 21:58:08 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-html-into-plain-text-using-jsoup/</guid>
      <description>Introduction In this tutorial, we are going to show how to use jsoup library to convert HTML content into plain text without HTML tag in a Java application.
Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Get File System Information in Java using OSHI library</title>
      <link>https://simplesolution.dev/java-get-file-system-information-oshi-library/</link>
      <pubDate>Thu, 05 Nov 2020 21:43:31 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-file-system-information-oshi-library/</guid>
      <description>Introduction In this tutorial, we learn how to access file system information in Java applications with OSHI library. By different Java examples we show how to get information on file storage of a computer system.
Add OSHI library to the Java project To use OSHI Java library in the Gradle build project, add the following dependency into the build.gradle file. compile group: &amp;#39;com.github.oshi&amp;#39;, name: &amp;#39;oshi-core&amp;#39;, version: &amp;#39;5.3.4&amp;#39;
To use OSHI Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Get Virtual Memory Information in Java using OSHI library</title>
      <link>https://simplesolution.dev/java-virtual-memory-information-oshi-library/</link>
      <pubDate>Wed, 04 Nov 2020 23:32:58 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-virtual-memory-information-oshi-library/</guid>
      <description>Introduction In this tutorial, we show how to get virtual memory information of the computer in Java application with OSHI library.
Add OSHI library to the Java project To use OSHI Java library in the Gradle build project, add the following dependency into the build.gradle file. compile group: &amp;#39;com.github.oshi&amp;#39;, name: &amp;#39;oshi-core&amp;#39;, version: &amp;#39;5.3.4&amp;#39;
To use OSHI Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Get Physical Memory or RAM Information in Java using OSHI library</title>
      <link>https://simplesolution.dev/java-get-physical-memory-ram-information-oshi-library/</link>
      <pubDate>Wed, 04 Nov 2020 22:31:48 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-physical-memory-ram-information-oshi-library/</guid>
      <description>Introduction In this tutorial, we are going to explore how to use the OSHI library to get information about the physical memory (RAM) information of the computer in a Java application. By using the API provided by OSHI Java library we will write programs to show memory of the computer and information of all physical devices located on the computer.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add OSHI library to the Java project To use OSHI Java library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Get CPU Information in Java using OSHI library</title>
      <link>https://simplesolution.dev/java-get-cpu-information-oshi-library/</link>
      <pubDate>Tue, 03 Nov 2020 22:44:31 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-cpu-information-oshi-library/</guid>
      <description>Introduction In this tutorial, we explore how to use the OSHI library in Java program to get CPU details information. Via the OSHI APIs we show how to get all information of a Central Processing Unit (CPU) such as name, number of cores, vendor, model, family, etc.
   (adsbygoogle = window.adsbygoogle || []).push({});  What is OSHI? OSHI is a free JNA-based (native) Operating System and Hardware Information library for Java.</description>
    </item>
    
    <item>
      <title>Get Operating System Information in Java using OSHI library</title>
      <link>https://simplesolution.dev/java-get-operating-system-information-oshi-library/</link>
      <pubDate>Tue, 03 Nov 2020 01:43:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-operating-system-information-oshi-library/</guid>
      <description>Introduction In this tutorial, we show you how to use OSHI library in a Java program to get operating system information. By different example Java programs we learn how to get information of operating system name, version, manufacturer, etc.
   (adsbygoogle = window.adsbygoogle || []).push({});  What is OSHI? OSHI is a free JNA-based (native) Operating System and Hardware Information library for Java. It does not require the installation of any additional native libraries and aims to provide a cross-platform implementation to retrieve system information, such as OS version, processes, memory and CPU usage, disks and partitions, devices, sensors, etc.</description>
    </item>
    
    <item>
      <title>Pretty Print XML String and XML File in Java using jsoup</title>
      <link>https://simplesolution.dev/java-jsoup-pretty-print-xml-string-and-file/</link>
      <pubDate>Sun, 01 Nov 2020 23:28:25 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-pretty-print-xml-string-and-file/</guid>
      <description>In this tutorial, we are going to show how to use the jsoup library in a Java program to pretty sprint a XML String or XML file content. We provide different working Java programs to show different use cases on how to parse XML String or XML File into jsoup Document object in order to format the XML content for pretty printing.
   (adsbygoogle = window.adsbygoogle || []).</description>
    </item>
    
    <item>
      <title>jsoup Get All HTML Elements in Java</title>
      <link>https://simplesolution.dev/java-jsoup-get-all-html-elements/</link>
      <pubDate>Sun, 01 Nov 2020 13:48:35 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-get-all-html-elements/</guid>
      <description>In this post, we are going to learn how to use jsoup Java library to find all HTML elements in a HTML document.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Clean HTML String to get Safe HTML from Untrusted HTML in Java using jsoup</title>
      <link>https://simplesolution.dev/java-jsoup-clean-html-string-get-safe-html-from-untrusted-html/</link>
      <pubDate>Sat, 31 Oct 2020 22:44:54 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-clean-html-string-get-safe-html-from-untrusted-html/</guid>
      <description>Introduction The jsoup library provides static methods Jsoup.clean() to allow cleaning the HTML String from untrusted input. This feature can be used to sanitizer input of your web application in order to prevent XSS attacks. In this tutorial, we show you how to use this feature to get the safe HTML String from an untrusted HTML input.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>jsoup Get HTML Elements by Attribute Value in Java</title>
      <link>https://simplesolution.dev/java-jsoup-get-html-elements-by-attribute-value/</link>
      <pubDate>Sat, 31 Oct 2020 10:22:31 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-get-html-elements-by-attribute-value/</guid>
      <description>In this post, we explore the different methods provided by jsoup Java library that allow finding HTML elements by attribute value.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>jsoup Get HTML Elements by Attribute Name in Java</title>
      <link>https://simplesolution.dev/java-jsoup-get-html-elements-by-attribute-name/</link>
      <pubDate>Sat, 31 Oct 2020 00:16:23 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-get-html-elements-by-attribute-name/</guid>
      <description>In this post, we are going to use the jsoup library to find HTML elements by attribute name in a Java program.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>jsoup Get HTML Elements by Tag Name in Java</title>
      <link>https://simplesolution.dev/java-jsoup-get-html-elements-by-tag-name/</link>
      <pubDate>Fri, 30 Oct 2020 22:54:50 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-get-html-elements-by-tag-name/</guid>
      <description>In this post, we are going to use jsoup Java library to find HTML elements by HTML tag name.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>jsoup Get HTML Element by ID in Java</title>
      <link>https://simplesolution.dev/java-jsoup-get-html-element-by-id/</link>
      <pubDate>Fri, 30 Oct 2020 21:45:50 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-get-html-element-by-id/</guid>
      <description>In this post, we will learn how to find an element in an HTML document by its ID in a Java application using jsoup library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>jsoup Get HTML elements by CSS class name in Java</title>
      <link>https://simplesolution.dev/java-jsoup-get-html-elements-by-css-class-name/</link>
      <pubDate>Thu, 29 Oct 2020 23:51:06 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-get-html-elements-by-css-class-name/</guid>
      <description>In this post, we are going to learn how to use jsoup Java library to get all HTML elements by CSS class name.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Extract All Links of a web page in Java using jsoup</title>
      <link>https://simplesolution.dev/java-jsoup-extract-all-links-of-web-page/</link>
      <pubDate>Thu, 29 Oct 2020 23:06:07 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-extract-all-links-of-web-page/</guid>
      <description>In this post, we show you how to extract all links from a web page using jsoup Java library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Pretty Printing HTML String in Java using jsoup</title>
      <link>https://simplesolution.dev/java-pretty-printing-html-string-jsoup/</link>
      <pubDate>Thu, 29 Oct 2020 21:44:36 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-pretty-printing-html-string-jsoup/</guid>
      <description>In this post, we are going to use jsoup Java library to pretty print a HTML string.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>jsoup extract Website Title in Java</title>
      <link>https://simplesolution.dev/java-jsoup-extract-website-title/</link>
      <pubDate>Wed, 28 Oct 2020 23:30:05 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-extract-website-title/</guid>
      <description>In this post, we show you how to use the jsoup library in a Java application to extract the title of a website.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>jsoup extract custom data attributes of HTML5 Element in Java</title>
      <link>https://simplesolution.dev/java-jsoup-extract-custom-data-attributes-html5-element/</link>
      <pubDate>Wed, 28 Oct 2020 21:21:20 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-extract-custom-data-attributes-html5-element/</guid>
      <description>In this post, we learn how to use jsoup Java library to extract HTML5 custom data attributes.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>jsoup extract Inner and Outer HTML of HTML Element in Java</title>
      <link>https://simplesolution.dev/java-jsoup-extract-inner-outer-html/</link>
      <pubDate>Wed, 28 Oct 2020 20:52:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-extract-inner-outer-html/</guid>
      <description>In this post, we learn how to use jsoup Java library to extract inner or outer HTML of an element in a HTML document.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>jsoup extract JavaScript from HTML script element in Java</title>
      <link>https://simplesolution.dev/java-jsoup-extract-javascript-from-script-element/</link>
      <pubDate>Tue, 27 Oct 2020 23:53:13 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-extract-javascript-from-script-element/</guid>
      <description>Introduction In this post, we are going to explore how to use the jsoup library in a Java application to extract JavaScript content of a script element in the HTML document.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>jsoup extract text and attributes of HTML element in Java</title>
      <link>https://simplesolution.dev/java-jsoup-extract-text-attributes-of-element/</link>
      <pubDate>Tue, 27 Oct 2020 23:43:13 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-extract-text-attributes-of-element/</guid>
      <description>Introduction In this post, we are going to learn how to use the jsoup library in a Java application to extract text and other attributes of an element in the HTML document.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>jsoup extract ID and name of HTML element in Java</title>
      <link>https://simplesolution.dev/java-jsoup-extract-id-name-of-element/</link>
      <pubDate>Tue, 27 Oct 2020 23:27:03 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-extract-id-name-of-element/</guid>
      <description>Introduction In this post, we are going to explore how to use jsoup library in a Java application to extract the ID or name attribute of an element in the HTML document.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>jsoup extract CSS class name of HTML element in Java</title>
      <link>https://simplesolution.dev/java-jsoup-extract-css-class-name-of-element/</link>
      <pubDate>Tue, 27 Oct 2020 23:17:15 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-extract-css-class-name-of-element/</guid>
      <description>Introduction In this post, we are going to explore how to use jsoup library in a Java application to extract css class names of an element in the HTML document.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add jsoup library to your Java project To use jsoup Java library in the Gradle build project, add the following dependency into the build.gradle file. compile &amp;#39;org.jsoup:jsoup:1.13.1&amp;#39;
To use jsoup Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Read QR Code from Image File or Base64 String in Java using ZXing</title>
      <link>https://simplesolution.dev/java-read-qr-code-from-image-file-base64-zxing/</link>
      <pubDate>Mon, 26 Oct 2020 21:46:52 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-qr-code-from-image-file-base64-zxing/</guid>
      <description>Introduction In this tutorial, we are going to learn how to decode the QR code image to read the encoded text in a Java application. We will use ZXing open source library in order to decode the image. Via different Java code examples we show you how to extract text from an image file and from encoded base64 string image.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add ZXing library to the project To use ZXing Java library in the Gradle build project, add the following dependencies into the build.</description>
    </item>
    
    <item>
      <title>Generate QR Code in Java using ZXing</title>
      <link>https://simplesolution.dev/java-generate-qr-code-zxing/</link>
      <pubDate>Mon, 26 Oct 2020 00:29:28 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-generate-qr-code-zxing/</guid>
      <description>Introduction In this tutorial, we are going to learn how to generate QR code (abbreviated from Quick Response code) in a Java application. We will use ZXing (&amp;ldquo;zebra crossing&amp;rdquo;) library which is the most popular library to generate QR code in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add ZXing library to the project To use ZXing Java library in the Gradle build project, add the following dependencies into the build.</description>
    </item>
    
    <item>
      <title>jsoup parse HTML Document from an URL in Java</title>
      <link>https://simplesolution.dev/java-jsoup-uparse-html-document-from-url/</link>
      <pubDate>Sun, 25 Oct 2020 16:05:47 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-uparse-html-document-from-url/</guid>
      <description>Introduction In this tutorial we will explore how to use the jsoup library in Java program to parse HTML from a given URL into a jsoup Document object.
   (adsbygoogle = window.adsbygoogle || []).push({});  What is jsoup? jsoup is a Java library for working with real-world HTML. It provides a very convenient API for fetching URLs and extracting and manipulating data, using the best of HTML5 DOM methods and CSS selectors.</description>
    </item>
    
    <item>
      <title>jsoup parse HTML Document from a File and InputStream in Java</title>
      <link>https://simplesolution.dev/java-jsoup-parse-html-document-from-file-inputstream/</link>
      <pubDate>Sun, 25 Oct 2020 15:58:16 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-parse-html-document-from-file-inputstream/</guid>
      <description>Introduction In this tutorial we will explore how to use the jsoup library in Java program to parse HTML from a local file or input stream into a jsoup Document object.
   (adsbygoogle = window.adsbygoogle || []).push({});  What is jsoup? jsoup is a Java library for working with real-world HTML. It provides a very convenient API for fetching URLs and extracting and manipulating data, using the best of HTML5 DOM methods and CSS selectors.</description>
    </item>
    
    <item>
      <title>jsoup parse HTML Document from a Java String</title>
      <link>https://simplesolution.dev/java-jsoup-parse-html-document-from-string/</link>
      <pubDate>Sun, 25 Oct 2020 15:25:45 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-jsoup-parse-html-document-from-string/</guid>
      <description>Introduction In this tutorial we will explore how to use the jsoup library in Java program to parse HTML from a Java String into jsoup Document object.
   (adsbygoogle = window.adsbygoogle || []).push({});  What is jsoup? jsoup is a Java library for working with real-world HTML. It provides a very convenient API for fetching URLs and extracting and manipulating data, using the best of HTML5 DOM methods and CSS selectors.</description>
    </item>
    
    <item>
      <title>Read Text Files in Java</title>
      <link>https://simplesolution.dev/java-read-text-files/</link>
      <pubDate>Sat, 24 Oct 2020 20:13:34 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-text-files/</guid>
      <description>Introduction In this tutorial we are going to explore how to read text files in a Java program. We provide different solutions to show how to use different Java core classes of Java IO and NIO packages to read files.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java NIO Files.readAllLines() static method In this Java code example we use Files.readAllLines() method to read all lines from a file into a list of String.</description>
    </item>
    
    <item>
      <title>Spring Boot Web Application Export and Download JSON File</title>
      <link>https://simplesolution.dev/spring-boot-export-download-json-file/</link>
      <pubDate>Sat, 24 Oct 2020 12:50:59 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-export-download-json-file/</guid>
      <description>Introduction In this tutorial we are going to learn how to implement a Spring Boot web application to export JSON and allow users to download as a JSON file via web browser. Via step by step guide we show you how to implement an example web application to export a list of customers to a JSON file.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot Web Project From Spring Tool Suite IDE select menu File &amp;gt; New &amp;gt; Spring Starter Project.</description>
    </item>
    
    <item>
      <title>Spring Boot Web Application Export and Download Text File</title>
      <link>https://simplesolution.dev/spring-boot-export-download-text-file/</link>
      <pubDate>Sat, 24 Oct 2020 00:33:28 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-export-download-text-file/</guid>
      <description>Introduction In this tutorial we learn how to create a new text file and provide the user the web interface to download the text file in a Spring Boot web application. We will learn how to download a text file in Spring Boot with 5 different approaches to implement the feature.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot Web Project From Spring Tool Suite IDE select menu File &amp;gt; New &amp;gt; Spring Starter Project.</description>
    </item>
    
    <item>
      <title>Create New Files in Java</title>
      <link>https://simplesolution.dev/java-create-new-files/</link>
      <pubDate>Thu, 22 Oct 2020 23:58:42 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-create-new-files/</guid>
      <description>Introduction In this article we learn how to create a new file in a Java application by using core Java classes of IO and NIO packages.
   (adsbygoogle = window.adsbygoogle || []).push({});  Using Java NIO Files.createFile() static method import java.io.IOException; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; public class FilesCreateFileExample { public static void main(String... args) { try { String fileName = &amp;#34;D:\\Files\\test.txt&amp;#34;; Path filePath = Paths.get(fileName); Path createdFile = Files.</description>
    </item>
    
    <item>
      <title>Check Hidden Files in Java</title>
      <link>https://simplesolution.dev/java-check-hidden-files/</link>
      <pubDate>Thu, 22 Oct 2020 22:15:25 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-hidden-files/</guid>
      <description>Introduction In this post we are going to explore how to use Java IO and Java NIO core classes to check if a file is hidden or not.
For example we have a text file is a hidden file located at D:\Files\file.txt
   (adsbygoogle = window.adsbygoogle || []).push({});  Using Java NIO Files.isHidden() static method import java.io.IOException; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; public class FilesIsHiddenExample { public static void main(String.</description>
    </item>
    
    <item>
      <title>Write Text to a File in Java</title>
      <link>https://simplesolution.dev/java-write-text-file/</link>
      <pubDate>Wed, 21 Oct 2020 22:59:16 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-write-text-file/</guid>
      <description>Introduction In this tutorial we are going to learn how to write text to a text file in a Java application. By different Java example programs we will explore different approaches to write a String into a text file using Java core classes.
   (adsbygoogle = window.adsbygoogle || []).push({});  Using Java NIO Files.write() static method Following program to create a new file named test.txt and write text using Files.</description>
    </item>
    
    <item>
      <title>Get Absolute File Path of a File in Java</title>
      <link>https://simplesolution.dev/java-get-absolute-file-path/</link>
      <pubDate>Wed, 21 Oct 2020 01:26:45 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-absolute-file-path/</guid>
      <description>Introduction In this post we will explore how to get an absolute path of a file in a Java application and return it as a String value.
   (adsbygoogle = window.adsbygoogle || []).push({});  Using Java NIO Path.toAbsolutePath() method import java.nio.file.Path; import java.nio.file.Paths; public class PathToAbsolutePathExample { public static void main(String... args) { String fileName = &amp;#34;simple-solution-logo.png&amp;#34;; Path path = Paths.get(fileName); Path absolutePath = path.toAbsolutePath(); String absoluteFilePath = absolutePath.</description>
    </item>
    
    <item>
      <title>Spring Boot Access MySQL Database with Spring Data JPA</title>
      <link>https://simplesolution.dev/spring-boot-access-mysql-database-spring-data-jpa/</link>
      <pubDate>Tue, 20 Oct 2020 00:38:25 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-access-mysql-database-spring-data-jpa/</guid>
      <description>Introduction In this tutorial we walk you through step by step to create a Spring Boot application to access MySQL database using Spring Data JPA and MySQL Driver. Via step by step example we will create a Spring Boot project to save Customer entity into customer data table in MySQL database.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot Project From Spring Tool Suite IDE select menu File &amp;gt; New &amp;gt; Spring Starter Project.</description>
    </item>
    
    <item>
      <title>java.io.File Java Code Examples</title>
      <link>https://simplesolution.dev/java.io.file/</link>
      <pubDate>Sun, 18 Oct 2020 23:24:16 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java.io.file/</guid>
      <description>How to use Core Java java.io.File class.
   (adsbygoogle = window.adsbygoogle || []).push({});   java.io.File.length()  </description>
    </item>
    
    <item>
      <title>java.io.File.length() Java Code Examples</title>
      <link>https://simplesolution.dev/java.io.file.length/</link>
      <pubDate>Sun, 18 Oct 2020 23:22:28 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java.io.file.length/</guid>
      <description>How to use length() method in java.io.File class.
More Java code examples for java.io.File
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 - Get File Size import java.io.File; public class GetFileSizeExample2 { public static void main(String[] args) { String fileLocation = &amp;#34;D:\\SimpleSolution\\logo.png&amp;#34;; File file = new File(fileLocation); if(file.exists()) { long fileSizeInBytes = file.length();  double fileSizeInKiloBytes = fileSizeInBytes / 1024.0; double fileSizeInMegaBytes = fileSizeInKiloBytes / 1024.</description>
    </item>
    
    <item>
      <title>java.nio.file.Files Java Code Examples</title>
      <link>https://simplesolution.dev/java.nio.file.files/</link>
      <pubDate>Sun, 18 Oct 2020 23:18:43 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java.nio.file.files/</guid>
      <description>How to use Core Java java.nio.file.Files class.
   (adsbygoogle = window.adsbygoogle || []).push({});   java.nio.file.Files.size()  </description>
    </item>
    
    <item>
      <title>java.nio.file.Files.size() Java Code Examples</title>
      <link>https://simplesolution.dev/java.nio.file.files.size/</link>
      <pubDate>Sun, 18 Oct 2020 23:16:39 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java.nio.file.files.size/</guid>
      <description>How to use size() method in java.nio.file.Files class.
More Java code examples for java.nio.file.Files
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 - Get File Size import java.io.IOException; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; public class GetFileSizeExample1 { public static void main(String[] args) { try { String fileLocation = &amp;#34;D:\\SimpleSolution\\logo.png&amp;#34;; Path path = Paths.get(fileLocation); long fileSizeInBytes = Files.size(path);  double fileSizeInKiloBytes = fileSizeInBytes / 1024.</description>
    </item>
    
    <item>
      <title>Get File Size in Java</title>
      <link>https://simplesolution.dev/java-get-file-size/</link>
      <pubDate>Sun, 18 Oct 2020 22:55:19 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-file-size/</guid>
      <description>Introduction In this post we are going to explore how to get file size in bytes, kilobytes, megabytes or gigabytes in different Java versions.
For example we have a file located at D:\SimpleSolution\logo.png as following screenshot.
   (adsbygoogle = window.adsbygoogle || []).push({});  Using NIO Files.size() method with Java version 7 and above import java.io.IOException; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; public class GetFileSizeExample1 { public static void main(String[] args) { try { String fileLocation = &amp;#34;D:\\SimpleSolution\\logo.</description>
    </item>
    
    <item>
      <title>Spring Boot Starter Data Redis for Data Storage on Redis Server</title>
      <link>https://simplesolution.dev/spring-boot-starter-data-redis-jedis-client/</link>
      <pubDate>Sun, 18 Oct 2020 14:35:26 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-starter-data-redis-jedis-client/</guid>
      <description>Introduction In this post, we are going to learn how to use Redis as data persistence for our Spring Boot Application by using Spring Boot Starter Data Redis and Jedis Client.
   (adsbygoogle = window.adsbygoogle || []).push({});  What is Redis? Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker. For more information you can visit Redis home page at redis.</description>
    </item>
    
    <item>
      <title>Spring Boot Implement AOP with Spring Boot Starter AOP</title>
      <link>https://simplesolution.dev/spring-boot-implement-aop-with-spring-boot-starter-aop/</link>
      <pubDate>Sat, 17 Oct 2020 20:10:24 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-implement-aop-with-spring-boot-starter-aop/</guid>
      <description>Introduction In this article, we learn how to implement AOP (Aspect-Oriented Programming) in a Spring Boot Web application. Via step by step to creating the sample Spring Boot web application, we are going to explore how to use Spring Boot Starter AOP library which is the combination of Spring AOP and AspectJ libraries to easily implement AOP in Spring Boot application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot Web project From Spring Tool Suite IDE select menu File &amp;gt; New &amp;gt; Spring Starter Project.</description>
    </item>
    
    <item>
      <title>Spring Boot Web Get Client IP Address</title>
      <link>https://simplesolution.dev/spring-boot-web-get-client-ip-address/</link>
      <pubDate>Wed, 14 Oct 2020 23:08:54 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-web-get-client-ip-address/</guid>
      <description>Introduction In this article we are going to learn how to obtain the clientâ€™s browser IP address when a user visits our Spring Boot web application. The example Java source code also shows how to get the client IP address even when the application deployed behind the proxy server. We also get the IP address of the local network if the client visits the Spring Boot website via local network.</description>
    </item>
    
    <item>
      <title>org.apache.commons.text.WordUtils Java Code Examples</title>
      <link>https://simplesolution.dev/org.apache.commons.text.wordutils/</link>
      <pubDate>Sat, 10 Oct 2020 22:29:08 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.apache.commons.text.wordutils/</guid>
      <description>How to use org.apache.commons.text.WordUtils class in Apache Commons Text library.
   (adsbygoogle = window.adsbygoogle || []).push({});   org.apache.commons.text.WordUtils.capitalize()
 org.apache.commons.text.WordUtils.capitalizeFully()
 org.apache.commons.text.WordUtils.containsAllWords()
 org.apache.commons.text.WordUtils.wrap()
  </description>
    </item>
    
    <item>
      <title>org.apache.commons.text.StringEscapeUtils Java Code Examples</title>
      <link>https://simplesolution.dev/org.apache.commons.text.stringescapeutils/</link>
      <pubDate>Sat, 10 Oct 2020 22:25:32 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.apache.commons.text.stringescapeutils/</guid>
      <description>How to use org.apache.commons.text.StringEscapeUtils class in Apache Commons Text library.
   (adsbygoogle = window.adsbygoogle || []).push({});   org.apache.commons.text.StringEscapeUtils.escapeCsv()
 org.apache.commons.text.StringEscapeUtils.unescapeCsv()
  </description>
    </item>
    
    <item>
      <title>org.apache.commons.text.RandomStringGenerator Java Code Examples</title>
      <link>https://simplesolution.dev/org.apache.commons.text.randomstringgenerator/</link>
      <pubDate>Sat, 10 Oct 2020 22:22:48 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.apache.commons.text.randomstringgenerator/</guid>
      <description>How to use org.apache.commons.text.RandomStringGenerator class in Apache Commons Text library.
   (adsbygoogle = window.adsbygoogle || []).push({});   org.apache.commons.text.RandomStringGenerator.generate()  </description>
    </item>
    
    <item>
      <title>org.apache.commons.text.CaseUtils Java Code Examples</title>
      <link>https://simplesolution.dev/org.apache.commons.text.caseutils/</link>
      <pubDate>Sat, 10 Oct 2020 22:19:05 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.apache.commons.text.caseutils/</guid>
      <description>How to use org.apache.commons.text.CaseUtils class Apache Commons Text library.
   (adsbygoogle = window.adsbygoogle || []).push({});   org.apache.commons.text.CaseUtils.toCamelCase()  </description>
    </item>
    
    <item>
      <title>com.google.common.base.Strings Java Code Examples</title>
      <link>https://simplesolution.dev/com.google.common.base.strings/</link>
      <pubDate>Sat, 10 Oct 2020 21:37:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/com.google.common.base.strings/</guid>
      <description>How to use com.google.common.base.Strings class.
com.google.common.base.Strings Guava Google Core Libraries for Java.
   (adsbygoogle = window.adsbygoogle || []).push({});   com.google.common.base.Strings.commonPrefix()
 com.google.common.base.Strings.commonSuffix()
 com.google.common.base.Strings.emptyToNull()
 com.google.common.base.Strings.isNullOrEmpty()
 com.google.common.base.Strings.lenientFormat()
 com.google.common.base.Strings.nullToEmpty()
 com.google.common.base.Strings.padEnd()
 com.google.common.base.Strings.padStart()
 com.google.common.base.Strings.repeat()
  </description>
    </item>
    
    <item>
      <title>com.google.common.base.Strings.lenientFormat() Java Code Examples</title>
      <link>https://simplesolution.dev/com.google.common.base.strings.lenientformat/</link>
      <pubDate>Sat, 10 Oct 2020 21:37:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/com.google.common.base.strings.lenientformat/</guid>
      <description>How to use lenientFormat() method in com.google.common.base.Strings class .
More Java code examples for com.google.common.base.Strings Guava Google Core Libraries for Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 import com.google.common.base.Strings; public class StringsLenientFormatExample1 { public static void main(String[] args) { String templateString = &amp;#34;%s (%s) must not be negative.&amp;#34;; String outputString = Strings.lenientFormat(templateString, &amp;#34;Ages&amp;#34;, -1);  System.out.println(outputString); } } Output:
Ages (-1) must not be negative.</description>
    </item>
    
    <item>
      <title>com.google.common.base.Strings.commonSuffix() Java Code Examples</title>
      <link>https://simplesolution.dev/com.google.common.base.strings.commonsuffix/</link>
      <pubDate>Sat, 10 Oct 2020 21:23:53 +0700</pubDate>
      
      <guid>https://simplesolution.dev/com.google.common.base.strings.commonsuffix/</guid>
      <description>How to use commonSuffix() method in com.google.common.base.Strings class.
More Java code examples for com.google.common.base.Strings Guava Google Core Libraries for Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 import com.google.common.base.Strings; public class StringsCommonSuffixExample1 { public static void main(String[] args) { String outputString = Strings.commonSuffix(&amp;#34;file1.txt&amp;#34;, &amp;#34;file2.txt&amp;#34;);  System.out.println(outputString); } } Output:
.txt     (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 2 import com.</description>
    </item>
    
    <item>
      <title>com.google.common.base.Strings.commonPrefix() Java Code Examples</title>
      <link>https://simplesolution.dev/com.google.common.base.strings.commonprefix/</link>
      <pubDate>Sat, 10 Oct 2020 21:13:47 +0700</pubDate>
      
      <guid>https://simplesolution.dev/com.google.common.base.strings.commonprefix/</guid>
      <description>How to use commonPrefix() method in com.google.common.base.Strings class.
More Java code examples for com.google.common.base.Strings Guava Google Core Libraries for Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 import com.google.common.base.Strings; public class StringsCommonPrefixExample1 { public static void main(String[] args) { String outputString = Strings.commonPrefix(&amp;#34;Mr. Jackson&amp;#34;, &amp;#34;Mr. Meyer&amp;#34;);  System.out.println(outputString); } } Output:
Mr.     (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 2 import com.</description>
    </item>
    
    <item>
      <title>com.google.common.base.Strings.repeat() Java Code Examples</title>
      <link>https://simplesolution.dev/com.google.common.base.strings.repeat/</link>
      <pubDate>Sat, 10 Oct 2020 20:54:02 +0700</pubDate>
      
      <guid>https://simplesolution.dev/com.google.common.base.strings.repeat/</guid>
      <description>How to use repeat() method in com.google.common.base.Strings class.
More Java code examples for com.google.common.base.Strings Guava Google Core Libraries for Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 returns a string consisting of a specific number of concatenated copies of an input string import com.google.common.base.Strings; public class StringsRepeatExample1 { public static void main(String[] args) { String outputString = Strings.repeat(&amp;#34;hello&amp;#34;, 3);  System.out.println(outputString); } } Output:</description>
    </item>
    
    <item>
      <title>com.google.common.base.Strings.padEnd() Java Code Examples</title>
      <link>https://simplesolution.dev/com.google.common.base.strings.padend/</link>
      <pubDate>Sat, 10 Oct 2020 18:42:30 +0700</pubDate>
      
      <guid>https://simplesolution.dev/com.google.common.base.strings.padend/</guid>
      <description>How to use padEnd() method in com.google.common.base.Strings class.
More Java code examples for com.google.common.base.Strings Guava Google Core Libraries for Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 return a String in given min length and fill with given char if the input String is least than min length import com.google.common.base.Strings; public class StringsPadEndExample1 { public static void main(String[] args) { String inputString = &amp;#34;12.</description>
    </item>
    
    <item>
      <title>com.google.common.base.Strings.padStart() Java Code Examples</title>
      <link>https://simplesolution.dev/com.google.common.base.strings.padstart/</link>
      <pubDate>Sat, 10 Oct 2020 18:29:50 +0700</pubDate>
      
      <guid>https://simplesolution.dev/com.google.common.base.strings.padstart/</guid>
      <description>How to use padStart() method in com.google.common.base.Strings class.
More Java code examples for com.google.common.base.Strings Guava Google Core Libraries for Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 return a String of given length and fill with given char if the input String is shorter than the given length import com.google.common.base.Strings; public class StringsPadStartExample1 { public static void main(String[] args) { String inputString = &amp;#34;7&amp;#34;; int minLength = 3; char padChar = &amp;#39;0&amp;#39;; String outputString = Strings.</description>
    </item>
    
    <item>
      <title>com.google.common.base.Strings.isNullOrEmpty() Java Code Examples</title>
      <link>https://simplesolution.dev/com.google.common.base.strings.isnullorempty/</link>
      <pubDate>Sat, 10 Oct 2020 16:07:24 +0700</pubDate>
      
      <guid>https://simplesolution.dev/com.google.common.base.strings.isnullorempty/</guid>
      <description>How to use isNullOrEmpty() method in com.google.common.base.Strings class.
More Java code examples for com.google.common.base.Strings Guava Google Core Libraries for Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 returns true if the given string is an empty String import com.google.common.base.Strings; public class StringsIsNullOrEmptyExample1 { public static void main(String[] args) { String emptyString = &amp;#34;&amp;#34;; boolean result = Strings.isNullOrEmpty(emptyString);  System.out.println(result); } } Output:
true     (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>com.google.common.base.Strings.emptyToNull() Java Code Examples</title>
      <link>https://simplesolution.dev/com.google.common.base.strings.emptytonull/</link>
      <pubDate>Sat, 10 Oct 2020 15:57:25 +0700</pubDate>
      
      <guid>https://simplesolution.dev/com.google.common.base.strings.emptytonull/</guid>
      <description>How to use emptyToNull() method in com.google.common.base.Strings class.
More Java code examples for com.google.common.base.Strings Guava Google Core Libraries for Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 returns null the input String is empty import com.google.common.base.Strings; public class StringsEmptyToNullExample1 { public static void main(String[] args) { String emptyString = &amp;#34;&amp;#34;; String outputString = Strings.emptyToNull(emptyString);  System.out.println(&amp;#34;Input String: &amp;#34; + emptyString); System.out.println(&amp;#34;Output String: &amp;#34; + outputString); } } Output:</description>
    </item>
    
    <item>
      <title>com.google.common.base.Strings.nullToEmpty() Java Code Examples</title>
      <link>https://simplesolution.dev/com.google.common.base.strings.nulltoempty/</link>
      <pubDate>Sat, 10 Oct 2020 15:50:25 +0700</pubDate>
      
      <guid>https://simplesolution.dev/com.google.common.base.strings.nulltoempty/</guid>
      <description>How to use nullToEmpty() method in com.google.common.base.Strings class.
More Java code examples for com.google.common.base.Strings Guava Google Core Libraries for Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 returns a empty String if input is null import com.google.common.base.Strings; public class StringsNullToEmptyExample1 { public static void main(String[] args) { String nullString = null; String outputString = Strings.nullToEmpty(nullString);  System.out.println(&amp;#34;Input String: &amp;#34; + nullString); System.out.println(&amp;#34;Output String: &amp;#34; + outputString); } } Output:</description>
    </item>
    
    <item>
      <title>org.apache.commons.text.WordUtils.containsAllWords() Java Code Examples</title>
      <link>https://simplesolution.dev/org.apache.commons.text.wordutils.containsallwords/</link>
      <pubDate>Sat, 10 Oct 2020 13:06:04 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.apache.commons.text.wordutils.containsallwords/</guid>
      <description>How to use containsAllWords() method in org.apache.commons.text.WordUtils class.
More Java code examples for org.apache.commons.text.WordUtils Apache Commons Text library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 checks if the String contains all words in the given array import org.apache.commons.text.WordUtils; public class WordUtilsContainsAllWordsExample1 { public static void main(String[] args) { String testString = &amp;#34;simple solution website&amp;#34;; String[] arrayOfWords = new String[] {&amp;#34;simple&amp;#34;, &amp;#34;solution&amp;#34;, &amp;#34;website&amp;#34;}; boolean result = WordUtils.</description>
    </item>
    
    <item>
      <title>org.apache.commons.text.WordUtils.wrap() Java Code Examples</title>
      <link>https://simplesolution.dev/org.apache.commons.text.wordutils.wrap/</link>
      <pubDate>Sat, 10 Oct 2020 12:46:45 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.apache.commons.text.wordutils.wrap/</guid>
      <description>How to use wrap() method in org.apache.commons.text.WordUtils class.
More Java code examples for org.apache.commons.text.WordUtils Apache Commons Text library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 wraps a single line of text to multiple lines import org.apache.commons.text.WordUtils; public class WordUtilsWrapExample1 { public static void main(String[] args) { String inputString = &amp;#34;This is the line of text need to be wrap.&amp;#34;; String wrappedString = WordUtils.wrap(inputString, 20);  System.</description>
    </item>
    
    <item>
      <title>org.apache.commons.text.RandomStringGenerator.generate() Java Code Examples</title>
      <link>https://simplesolution.dev/org.apache.commons.text.randomstringgenerator.generate/</link>
      <pubDate>Sat, 10 Oct 2020 11:44:26 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.apache.commons.text.randomstringgenerator.generate/</guid>
      <description>How to use generate() method in org.apache.commons.text.RandomStringGenerator class.
More Java code examples for org.apache.commons.text.RandomStringGenerator Apache Commons Text library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 generate long file name import org.apache.commons.text.RandomStringGenerator; public class GenerateLongFileName { public static void main(String[] args) { RandomStringGenerator generator = new RandomStringGenerator .Builder() .withinRange(&amp;#39;a&amp;#39;, &amp;#39;z&amp;#39;) .build(); int length = 100; String generatedLongFileName = generator.generate(length) + &amp;#34;.html&amp;#34;;  System.out.println(&amp;#34;Generated Long File Name: &amp;#34; + generatedLongFileName); } } Output:</description>
    </item>
    
    <item>
      <title>org.apache.commons.text.WordUtils.capitalizeFully() Java Code Examples</title>
      <link>https://simplesolution.dev/org.apache.commons.text.wordutils.capitalizefully/</link>
      <pubDate>Sat, 10 Oct 2020 11:18:54 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.apache.commons.text.wordutils.capitalizefully/</guid>
      <description>How to use capitalizeFully() method in org.apache.commons.text.WordUtils class.
More Java code examples for org.apache.commons.text.WordUtils Apache Commons Text library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 converts all the whitespace separated words in a String into capitalized words import org.apache.commons.text.WordUtils; public class WordUtilsCapitalizeFullyExample1 { public static void main(String[] args) { String inputString = &amp;#34;how to CAPITALIZE first letter words&amp;#34;; String outputString = WordUtils.capitalizeFully(inputString);  System.</description>
    </item>
    
    <item>
      <title>org.apache.commons.text.CaseUtils.toCamelCase() Java Code Examples</title>
      <link>https://simplesolution.dev/org.apache.commons.text.caseutils.tocamelcase/</link>
      <pubDate>Sat, 10 Oct 2020 10:49:15 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.apache.commons.text.caseutils.tocamelcase/</guid>
      <description>How to use toCamelCase() method in org.apache.commons.text.CaseUtils class.
More Java code examples for org.apache.commons.text.CaseUtils Apache Commons Text library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 converts all the delimiter separated words in a String into camelCase with lowercase first letter import org.apache.commons.text.CaseUtils; public class CaseUtilsToCamelCaseExample1 { public static void main(String[] args) { String inputString = &amp;#34;Testing String&amp;#34;; boolean isCapitalizeFirstLetter = false; String outputString = CaseUtils.</description>
    </item>
    
    <item>
      <title>org.apache.commons.text.WordUtils.capitalize() Java Code Examples</title>
      <link>https://simplesolution.dev/org.apache.commons.text.wordutils.capitalize/</link>
      <pubDate>Sat, 10 Oct 2020 01:21:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.apache.commons.text.wordutils.capitalize/</guid>
      <description>How to use capitalize() method in org.apache.commons.text.WordUtils class.
More Java code examples for org.apache.commons.text.WordUtils Apache Commons Text library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 capitalizes all the whitespace separated words in a String import org.apache.commons.text.WordUtils; public class WordUtilsCapitalizeExample1 { public static void main(String[] args) { String inputString = &amp;#34;learn java programming with simple solution website&amp;#34;; String outputString = WordUtils.capitalize(inputString);  System.out.println(&amp;#34;Input String: &amp;#34; + inputString); System.</description>
    </item>
    
    <item>
      <title>org.apache.commons.text.StringEscapeUtils.unescapeCsv() Java Code Examples</title>
      <link>https://simplesolution.dev/org.apache.commons.text.stringescapeutils.unescapecsv/</link>
      <pubDate>Sat, 10 Oct 2020 00:43:31 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.apache.commons.text.stringescapeutils.unescapecsv/</guid>
      <description>How to use unescapeCsv() method in org.apache.commons.text.StringEscapeUtils class.
More Java code examples for org.apache.commons.text.StringEscapeUtils Apache Commons Text library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 unescape CSV value import org.apache.commons.text.StringEscapeUtils; public class StringEscapeUtilsUnescapeCsvExample1 { public static void main(String[] args) { String inputString = &amp;#34;\&amp;#34;1,23\&amp;#34;&amp;#34;; String outputString = StringEscapeUtils.unescapeCsv(inputString);  System.out.println(&amp;#34;Input String: &amp;#34; + inputString); System.out.println(&amp;#34;Output String: &amp;#34; + outputString); } } Output:
Input String: &amp;quot;1,23&amp;quot; Output String: 1,23     (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>org.apache.commons.text.StringEscapeUtils.escapeCsv() Java Code Examples</title>
      <link>https://simplesolution.dev/org.apache.commons.text.stringescapeutils.escapecsv/</link>
      <pubDate>Fri, 09 Oct 2020 23:44:55 +0700</pubDate>
      
      <guid>https://simplesolution.dev/org.apache.commons.text.stringescapeutils.escapecsv/</guid>
      <description>How to use escapeCsv() method in org.apache.commons.text.StringEscapeUtils class.
More Java code examples for org.apache.commons.text.StringEscapeUtils Apache Commons Text library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java Code Example 1 escape String for CSV column import org.apache.commons.text.StringEscapeUtils; public class StringEscapeUtilsEscapeCsvExample1 { public static void main(String[] args) { String inputString = &amp;#34;1,23&amp;#34;; String outputString = StringEscapeUtils.escapeCsv(inputString);  System.out.println(&amp;#34;Input String: &amp;#34; + inputString); System.out.println(&amp;#34;Output String: &amp;#34; + outputString); } } Output:</description>
    </item>
    
    <item>
      <title>Escape or Unescape String for CSV column data in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-escape-unescape-string-for-csv-column-data/</link>
      <pubDate>Thu, 08 Oct 2020 23:26:48 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-escape-unescape-string-for-csv-column-data/</guid>
      <description>Introduction In this post we are going to learn how to use StringEscapeUtils class in Apache Commons Text library to escape a String for CSV file format. If the input String value contains a comma, newline or double quote, then the output String value is returned enclosed in double quotes.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Convert words in a String into camelCase in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-convert-words-in-a-string-into-camel-case/</link>
      <pubDate>Thu, 08 Oct 2020 22:31:54 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-words-in-a-string-into-camel-case/</guid>
      <description>Introduction In this article we are going to explore Apache Commons Text library by using CaseUtils utility class to convert a String of separated words into a camelCase String.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-text&amp;#39;, version: &amp;#39;1.9&amp;#39; Or add the following dependency XML tag to pom.</description>
    </item>
    
    <item>
      <title>Substitute a String in Java by replace variables map to Template String using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-substitute-a-string-in-java-by-replace-variables-map-to-template-string/</link>
      <pubDate>Wed, 07 Oct 2020 23:38:07 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-substitute-a-string-in-java-by-replace-variables-map-to-template-string/</guid>
      <description>Introduction In this post we are going to learn how to substitute a String in Java which replaces variables into placeholders in a template String. To do this task we will use the Apache Commons Text library with support of StringSubstitutor class. Via different Java example code we will learn how to apply StringSubstitutor in different scenarios in your Java applications.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Uncapitalize first character of all words in a String in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-uncapitalize-first-character-of-all-words-in-a-string/</link>
      <pubDate>Wed, 07 Oct 2020 20:04:14 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-uncapitalize-first-character-of-all-words-in-a-string/</guid>
      <description>Introduction In this article we will explore the WordUtils.uncapitalize() method of Apache Commons Text library to uncapitalize a String. With Java code example we will learn how to use the WordUtils.uncapitalize() method to convert the first character of all words in a String to lowercase character.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Swap Lowercase and Uppercase of a String in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-swap-lowercase-and-uppercase-of-a-string/</link>
      <pubDate>Tue, 06 Oct 2020 23:56:16 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-swap-lowercase-and-uppercase-of-a-string/</guid>
      <description>Introduction In this article we are going to learn how to swap the case of a String in Java application. We provide a Java code example to show how to use WordUtils.swapCase() method of Apache Commons Text library to swap the case of each character of a given String.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Java extracts initial characters from each word in a String using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-extracts-initial-characters-from-each-word-in-a-string/</link>
      <pubDate>Tue, 06 Oct 2020 23:20:52 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-extracts-initial-characters-from-each-word-in-a-string/</guid>
      <description>Introduction In this post we learn how to use WordUtils class of Apache Commons Text library to extract initial characters from all words of a String in Java. We will show the Java code example that uses WordUtils.initials() method to extract initial letters of people names.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Java Checks if a String contains all words in array using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-checks-if-a-string-contains-all-words-in-array/</link>
      <pubDate>Tue, 06 Oct 2020 22:41:54 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-checks-if-a-string-contains-all-words-in-array/</guid>
      <description>Introduction In this article we show how to check if a String contains all words in an array in Java. By using WordUtils utility class of Apache Commons Text library you can check if the String contains all words in the given array using containsAllWords() method.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Wrap a line of text into multiple lines in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-wrap-a-line-of-text-into-multiple-lines/</link>
      <pubDate>Tue, 06 Oct 2020 20:34:43 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-wrap-a-line-of-text-into-multiple-lines/</guid>
      <description>Introduction In this post we learn how to wrap a String in Java using WordUtils utility class of Apache Commons Text library. By using WordUtils.wrap() method we can break a long line of text into multiple lines with a given input text and the length. The output String will be wrapped words and separated by system line separator character or by your custom provided separator.
   (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>Generate Random String in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-generate-random-string-with-random-string-generator/</link>
      <pubDate>Tue, 06 Oct 2020 00:04:09 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-generate-random-string-with-random-string-generator/</guid>
      <description>Introduction In this article we show how to generate random String values in Java using the RandomStringGenerator class of Apache Commons Text library. We provide multiple Java code examples with different settings to generate different kinds of data that may be useful for your daily programming scenarios.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Capitalize First Letter of each Word of String in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-capitalize-first-letter-of-each-word-of-string/</link>
      <pubDate>Mon, 05 Oct 2020 22:03:37 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-capitalize-first-letter-of-each-word-of-string/</guid>
      <description>Introduction In this article we show how to use WordUtils utility class of Apache Commons Text library to capitalize the first character of each word in a Java String. We will provide Java code examples to show how to use capitalize() and capitalizeFully() methods of the libraryâ€™s WordUtils utility class.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Capitalize First Letter of a String in Java using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-capitalize-first-letter-of-string/</link>
      <pubDate>Mon, 05 Oct 2020 21:09:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-capitalize-first-letter-of-string/</guid>
      <description>Introduction In this article we show how to use StringUtils of Apache Commons Lang library to capitalize the first character of a Java String by using StringUtils.capitalize() utility method.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-lang3&amp;#39;, version: &amp;#39;3.11&amp;#39; Or add the following dependency XML tag to pom.</description>
    </item>
    
    <item>
      <title>Abbreviates a String using ellipses in Java using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-abbreviates-string-using-ellipses/</link>
      <pubDate>Sun, 04 Oct 2020 23:50:42 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-abbreviates-string-using-ellipses/</guid>
      <description>Introduction In this post we show how to use Apache Commons Lang library to abbreviate a String using ellipses. We provide multiple Java code examples on how to use StringUtils.abbreviate() utility method to achieve our goal.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Check if a String is a valid numeric value in Java using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-check-if-string-is-valid-numeric-value/</link>
      <pubDate>Sun, 04 Oct 2020 23:07:43 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-if-string-is-valid-numeric-value/</guid>
      <description>Introduction In this article we show you how to use different utility classes in Apache Commons Lang library to check if a String is a valid number in Java. We provide different working code examples how to use methods such as NumberUtils.isCreatable(), NumberUtils.isDigits() or StringUtils.isNumeric().
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Check if a String contains another String in Java</title>
      <link>https://simplesolution.dev/java-check-if-a-string-contains-a-substring/</link>
      <pubDate>Sun, 04 Oct 2020 15:57:35 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-if-a-string-contains-a-substring/</guid>
      <description>Core Java classes provide different solutions that developers can use to check if a String contains another String inside it. In this article we will show you different Java code examples how to check if a String is inside another String using core Java methods such as String.contains(), String.indexOf(), String.lastIndexOf(), String.matches() and java.util.regex.Pattern class.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java code how to use String.contains() In this code example we use String.</description>
    </item>
    
    <item>
      <title>Replace or Remove All Digits of a String in Java using regular expression</title>
      <link>https://simplesolution.dev/java-replace-or-remove-all-digits-of-a-string-in-using-regular-expression/</link>
      <pubDate>Sun, 04 Oct 2020 13:47:34 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-replace-or-remove-all-digits-of-a-string-in-using-regular-expression/</guid>
      <description>In this article we are going to learn how to use core Java classes to remove all numeric characters from a String or replace numeric characters with other characters. We will show you different Java code examples how to use String.replaceAll() method and java.util.regex.Pattern class.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java code example using regex &amp;ldquo;[0-9]&amp;rdquo; with String.replaceAll() method
public class RemoveReplaceDigitsExample1 { public static void main(String[] args) { String testString = &amp;#34;Your OTP (one time password) is 112233&amp;#34;; // Remove all numeric characters  String removedDigitsString = testString.</description>
    </item>
    
    <item>
      <title>Extract Digits from a String in Java using regular expression</title>
      <link>https://simplesolution.dev/java-extract-digits-from-a-string-using-regular-expression/</link>
      <pubDate>Sat, 03 Oct 2020 22:17:59 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-extract-digits-from-a-string-using-regular-expression/</guid>
      <description>In this post we show you how to use regular expressions to remove all non-digits characters of a String and return the number only String in Java application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Following Java example code use String.replaceAll() method with regex &amp;ldquo;[^0-9]&amp;rdquo; to replace non-digits characters in a String with empty String.
public class ExtractDigitsFromStringExample1 { public static void main(String[] args) { String testString = &amp;#34;Java was released in 1995&amp;#34;; String numberOnlyString = testString.</description>
    </item>
    
    <item>
      <title>Java Find Difference between two Strings using StringUtils Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-find-difference-between-two-strings-using-stringutils-apache-commons-lang/</link>
      <pubDate>Fri, 02 Oct 2020 22:57:11 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-find-difference-between-two-strings-using-stringutils-apache-commons-lang/</guid>
      <description>Introduction In this post we will show you Java example code how to find the difference between two Strings using StringUtils utility class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-lang3&amp;#39;, version: &amp;#39;3.11&amp;#39; Or add the following dependency XML tag to pom.</description>
    </item>
    
    <item>
      <title>Java check String is empty or blank or contains text using StringUtils Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-check-string-is-empty-blank-contains-text-stringutils-apache-commons-lang/</link>
      <pubDate>Fri, 02 Oct 2020 00:32:50 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-string-is-empty-blank-contains-text-stringutils-apache-commons-lang/</guid>
      <description>Introduction In this post we are going to learn how to use StringUtils utility class of Apache Commons Lang library in Java application to check if a string contains text, an empty string or a blank string.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Spring Boot SFTP File Transfer using JSch Java Library</title>
      <link>https://simplesolution.dev/spring-boot-sftp-file-transfer-using-jsch-java-library/</link>
      <pubDate>Mon, 28 Sep 2020 22:37:34 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-sftp-file-transfer-using-jsch-java-library/</guid>
      <description>Overview In this post we will show you how to transfer files from a local host to a remote server and download files from a remote server to local host via SFTP in Spring Boot applications. In order to transfer files via SFTP in Java applications we also explore the JSch library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Creating Spring Boot Project with Spring Tool Suite on Eclipse From Spring Tool Suite IDE select menu File -&amp;gt; New -&amp;gt; Spring Starter Project.</description>
    </item>
    
    <item>
      <title>Spring Boot Web Application Upload File</title>
      <link>https://simplesolution.dev/spring-boot-web-application-upload-file/</link>
      <pubDate>Fri, 28 Feb 2020 00:37:35 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-web-application-upload-file/</guid>
      <description>In this tutorial weâ€™re going to learn how to implement file uploading function in a Spring Boot web application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Creating Spring Boot Project with Spring Tool Suite on Eclipse Open Spring Tool Suite and go to menu File -&amp;gt; New -&amp;gt; Spring Starter Project.
On the New Spring Starter Project window, input your project information as below screenshot and click Next button.</description>
    </item>
    
    <item>
      <title>Generate Thumbnail Images in Java with Thumbnailator library</title>
      <link>https://simplesolution.dev/generate-thumbnail-images-in-java-with-thumbnailator-library/</link>
      <pubDate>Thu, 27 Feb 2020 00:52:08 +0700</pubDate>
      
      <guid>https://simplesolution.dev/generate-thumbnail-images-in-java-with-thumbnailator-library/</guid>
      <description>As a daily job of a web developer you usually have the scenario that you need to generate the thumbnail image from a large original image. This take can easily be done by the Thumbnailator library, an easy to use thumbnail generation library for Java. In this Java tutorial we are going to learn how to use the Thumbnailator library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Thumbnailator home page: github.</description>
    </item>
    
    <item>
      <title>Top 3 Libraries for Writing and Reading CSV File in Java</title>
      <link>https://simplesolution.dev/top-3-libraries-for-writing-and-reading-csv-file-in-java/</link>
      <pubDate>Wed, 26 Feb 2020 01:15:38 +0700</pubDate>
      
      <guid>https://simplesolution.dev/top-3-libraries-for-writing-and-reading-csv-file-in-java/</guid>
      <description>Introduction In this tutorial weâ€™re going to learn how to use open source Java libraries to quickly write and read Comma Separated Values or CSV file format. We will explore 3 useful libraries and implement Java programs to write and read CSV files using each library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Apache Commons CSV Home page: commons.apache.org/proper/commons-csv/
Project Dependencies:
Adding below dependencies to build.gradle file if you are using Gradle build tool.</description>
    </item>
    
    <item>
      <title>Apache POI Hide and Unhide Excel Row using Row.setZeroHeight()</title>
      <link>https://simplesolution.dev/apache-poi-hide-and-unhide-excel-row-using-row.setzeroheight/</link>
      <pubDate>Thu, 09 Jan 2020 07:56:46 +0700</pubDate>
      
      <guid>https://simplesolution.dev/apache-poi-hide-and-unhide-excel-row-using-row.setzeroheight/</guid>
      <description>Introduction In Excel there is an option to hide / unhide a row by select the row then righ click on it and choose Hide / Unhide option. In this tutorial we will learn how to use Apache POI library in Java to create an Excel file and hide its row. Then we try to unhide it by another Java application example.
   (adsbygoogle = window.adsbygoogle || []).</description>
    </item>
    
    <item>
      <title>Apache POI Creating Multiple Fonts Excel Cell using RichTextString</title>
      <link>https://simplesolution.dev/apache-poi-creating-multiple-fonts-excel-cell-using-richtextstring/</link>
      <pubDate>Tue, 07 Jan 2020 00:42:52 +0700</pubDate>
      
      <guid>https://simplesolution.dev/apache-poi-creating-multiple-fonts-excel-cell-using-richtextstring/</guid>
      <description>Introduction In this tutorial we will learn how to create an Excel cell with multiple font styles using Apache POI library.
We will implement different examples to create .xls and xlsx Excel file format using HSSFRichTextString and XSSFRichTextString class in Apache POI.
   (adsbygoogle = window.adsbygoogle || []).push({});  Apache POI Overview Apache POI is a open source library to work with Microsoft Office documents in Java.</description>
    </item>
    
    <item>
      <title>Creating PDF Document Page Labels in Java with Apache PDFBox</title>
      <link>https://simplesolution.dev/creating-pdf-document-page-labels-in-java-with-apache-pdfbox/</link>
      <pubDate>Thu, 02 Jan 2020 21:58:44 +0700</pubDate>
      
      <guid>https://simplesolution.dev/creating-pdf-document-page-labels-in-java-with-apache-pdfbox/</guid>
      <description>Introduction In PDF document format the page label to identify each document page visually for example showing text label on thumbnail panel on PDF reader application. In this Java tutorial we will learn how to create page labels for PDF document by Java application using Apache PDFBox library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Apache PDFBox Library Overview The Apache PDFBox is an open source Java library for working with PDF documents.</description>
    </item>
    
    <item>
      <title>Creating Bookmarks for PDF Document in Java with Apache PDFBox</title>
      <link>https://simplesolution.dev/creating-bookmarks-for-pdf-document-in-java-with-apache-pdfbox/</link>
      <pubDate>Wed, 01 Jan 2020 21:37:14 +0700</pubDate>
      
      <guid>https://simplesolution.dev/creating-bookmarks-for-pdf-document-in-java-with-apache-pdfbox/</guid>
      <description>Introduction In this tutorial we will learn how to add bookmark items to a PDF document in Java using Apache PDFBox library. The post also show how to add bookmarks for new PDF document and existing PDF file.
   (adsbygoogle = window.adsbygoogle || []).push({});  Apache PDFBox Library Overview The Apache PDFBox is an open source Java library for working with PDF documents. You can get more information about the project at pdfbox.</description>
    </item>
    
    <item>
      <title>Apache PDFBox Adding Metadata to PDF Document in Java</title>
      <link>https://simplesolution.dev/apache-pdfbox-adding-metadata-to-pdf-document-in-java/</link>
      <pubDate>Wed, 01 Jan 2020 15:34:11 +0700</pubDate>
      
      <guid>https://simplesolution.dev/apache-pdfbox-adding-metadata-to-pdf-document-in-java/</guid>
      <description>Introduction This toturial will show you how to adding metadata information such as title, creation date, modification date, author, creator tool, producer keywords etc. and custom properties to a new PDF document or the existing PDF file in Java using Apache PDFBox library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Apache PDFBox Overview The Apache PDFBox is an open source library for working with PDF documents in Java.</description>
    </item>
    
    <item>
      <title>Insert Image to PDF Document in Java using Apache PDFBox</title>
      <link>https://simplesolution.dev/insert-image-to-pdf-document-in-java-using-apache-pdfbox/</link>
      <pubDate>Mon, 30 Dec 2019 01:19:11 +0700</pubDate>
      
      <guid>https://simplesolution.dev/insert-image-to-pdf-document-in-java-using-apache-pdfbox/</guid>
      <description>Introduction In this tutorial we will learn how to create a PDF document using Apache PDFBox libary in Java and then insert an image to a PDF document page.
   (adsbygoogle = window.adsbygoogle || []).push({});  Apache PDFBox Overview The Apache PDFBox is an open source library for working with PDF documents in Java. You can get more information about the project at pdfbox.apache.org
Adding Apache PDFBox Dependencies Adding below dependencies to build.</description>
    </item>
    
    <item>
      <title>Creating PDF Document File in Java using Apache PDFBox</title>
      <link>https://simplesolution.dev/creating-pdf-document-file-in-java-using-apache-pdfbox/</link>
      <pubDate>Sun, 29 Dec 2019 10:26:47 +0700</pubDate>
      
      <guid>https://simplesolution.dev/creating-pdf-document-file-in-java-using-apache-pdfbox/</guid>
      <description>Introduction In this tutorial we will learn how to create a PDF document file in Java application using Apache PDFBox library.
Apache PDFBox Overview The Apache PDFBox is an open source library for working with PDF documents in Java. You can get more information about the project at pdfbox.apache.org
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Apache PDFBox Dependencies Adding below dependencies to build.gradle file if you are using Gradle build tool.</description>
    </item>
    
    <item>
      <title>Using Dozer Spring Boot Starter</title>
      <link>https://simplesolution.dev/using-dozer-spring-boot-starter/</link>
      <pubDate>Wed, 18 Dec 2019 00:20:41 +0700</pubDate>
      
      <guid>https://simplesolution.dev/using-dozer-spring-boot-starter/</guid>
      <description>In this Spring Boot tutorial we will go through step by step guide to creating a Spring Boot console application and configure Dozer Spring Boot Starter library to using Dozer mapping in Spring Boot application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Creating Spring Boot Console Application Project Open your Spring Tool Suite IDE and choose menu File -&amp;gt; New -&amp;gt; Spring Starter Project
In New Spring Starter Project window input below informations for your project and click Next.</description>
    </item>
    
    <item>
      <title>Video Spring Boot Web Application Download Excel File</title>
      <link>https://simplesolution.dev/video-spring-boot-web-application-download-excel-file/</link>
      <pubDate>Tue, 17 Dec 2019 23:22:50 +0700</pubDate>
      
      <guid>https://simplesolution.dev/video-spring-boot-web-application-download-excel-file/</guid>
      <description>Step by step video how to implement Spring Boot web application with download Excel file using Apache POI libary.
   (adsbygoogle = window.adsbygoogle || []).push({});    
   (adsbygoogle = window.adsbygoogle || []).push({});  Download Source Code The source code in this article can be found at: github.com/simplesolutiondev/DownloadExcelFile
or download at:
 Download Source Code
Happy Coding ðŸ˜Š
Related Articles Spring Boot Web Application Download Excel File</description>
    </item>
    
    <item>
      <title>Spring Boot Web Application Download Excel File</title>
      <link>https://simplesolution.dev/spring-boot-web-application-download-excel-file/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:29 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-web-application-download-excel-file/</guid>
      <description>In this article we will go through step by step guide to create Spring Boot web application and implement downloading Excel file feature. We will use Spring Tool Suite 4 for creating the application and code editor for demo application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Creating Spring Boot web project using Spring Tool Suite Open Spring Tool Suite on your machine and click on &amp;ldquo;Create a project&amp;hellip;&amp;rdquo; or choose menu File -&amp;gt; New -&amp;gt; Project</description>
    </item>
    
    <item>
      <title>JUnit 5 with Gradle Setup</title>
      <link>https://simplesolution.dev/java-code-examples/junit-5-with-gradle-setup/</link>
      <pubDate>Thu, 30 May 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/junit-5-with-gradle-setup/</guid>
      <description>In this article we will setup a Java project that using JUnit 5 and Gradle build.
   (adsbygoogle = window.adsbygoogle || []).push({});  Set up Gradle build The Gradle version we will use is 5.4.1 which build.gradle as below. plugins {id &amp;#39;java&amp;#39;}repositories {mavenCentral()}dependencies {testImplementation(&amp;#39;org.junit.jupiter:junit-jupiter:5.4.2&amp;#39;)}test {useJUnitPlatform()testLogging {events &amp;#34;passed&amp;#34;, &amp;#34;skipped&amp;#34;, &amp;#34;failed&amp;#34;}}
Adding a simple test class to test add() method of BigInteger class package simplesolution.</description>
    </item>
    
    <item>
      <title>Apache POI Update Excel File Content</title>
      <link>https://simplesolution.dev/java-code-examples/apache-poi-update-excel-file/</link>
      <pubDate>Sun, 26 May 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/apache-poi-update-excel-file/</guid>
      <description>Java Code Examples for:
 org.apache.poi.ss.usermodel.WorkbookFactory.create(InputStream inputStream) method org.apache.poi.ss.usermodel.Workbook.write(OutputStream stream) method  In this article we show you how to update existing Excel file content in Java using Apache POI library.    (adsbygoogle = window.adsbygoogle || []).push({}); 
Apache POI Library Dependencies Define below dependencies in build.gradle if you are using Gradle build. compile group: &amp;#39;org.apache.poi&amp;#39;, name: &amp;#39;poi&amp;#39;, version: &amp;#39;4.0.1&amp;#39;compile group: &amp;#39;org.apache.poi&amp;#39;, name: &amp;#39;poi-ooxml&amp;#39;, version: &amp;#39;4.0.1&amp;#39;</description>
    </item>
    
    <item>
      <title>Apache POI Excel Cell Fonts</title>
      <link>https://simplesolution.dev/java-code-examples/apache-poi-excel-cells-fonts/</link>
      <pubDate>Sun, 19 May 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/apache-poi-excel-cells-fonts/</guid>
      <description>Java Code Examples for:
 org.apache.poi.ss.usermodel.Font class org.apache.poi.ss.usermodel.CellStyle class  In Java code examples below we show you how to use Apache POI library to generate Excel file with custom font style for Excel cells such as bold, italic, underline, strikeout, type offset, font name, font height and color.
   (adsbygoogle = window.adsbygoogle || []).push({});  Apache POI Library Dependencies Define below dependencies in build.gradle if you are using Gradle build.</description>
    </item>
    
    <item>
      <title>Apache POI Merging Excel Cells</title>
      <link>https://simplesolution.dev/java-code-examples/apache-poi-merging-excel-cells/</link>
      <pubDate>Sat, 18 May 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/apache-poi-merging-excel-cells/</guid>
      <description>Java Code Examples for:
 org.apache.poi.ss.util.CellRangeAddress class org.apache.poi.ss.usermodel.Sheet.addMergedRegion() method  In Java example code below we show you how to create Excel file with merged cell.
   (adsbygoogle = window.adsbygoogle || []).push({});  Apache POI Library Dependencies Define below dependencies in build.gradle if you are using Gradle build. compile group: &amp;#39;org.apache.poi&amp;#39;, name: &amp;#39;poi&amp;#39;, version: &amp;#39;4.0.1&amp;#39;
Define this dependencies in pom.xml if you are using Maven build. &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;org.</description>
    </item>
    
    <item>
      <title>Spring Boot Web Application Download CSV File</title>
      <link>https://simplesolution.dev/spring-boot-application-download-csv/</link>
      <pubDate>Tue, 14 May 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-application-download-csv/</guid>
      <description>In this article we show you how to implement dowloading CSV file in Spring Boot Web Application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Overview Project Structure Throughout this article we implement the Spring Boot project as below structure Gradle Build Dependencies Define below dependencies in build.gradle if you are using gradle. implementation &amp;#39;org.springframework.boot:spring-boot-starter-thymeleaf&amp;#39;implementation &amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;
Maven Build Dependencies Define this dependencies in pom.xml if you are using maven.</description>
    </item>
    
    <item>
      <title>Log4j 2 Properties Configuration with Console Appender</title>
      <link>https://simplesolution.dev/java-code-examples/log4j2-properties-configuration-console-appender/</link>
      <pubDate>Tue, 07 May 2019 01:02:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/log4j2-properties-configuration-console-appender/</guid>
      <description>Java Code Examples for using
 org.apache.logging.log4j.LogManager org.apache.logging.log4j.Logger  The Java code example below to show you how to configure Log4j 2 with Properties configuration file to log messages to sytem console using Console appender.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Log2j 2 Dependencies to your project Add dependencies below to your build.gradle if you are using Gradle build. dependencies {compile group: &amp;#39;org.apache.logging.log4j&amp;#39;, name: &amp;#39;log4j-api&amp;#39;, version: &amp;#39;2.</description>
    </item>
    
    <item>
      <title>Log4j 2 YAML Configuration with Console Appender</title>
      <link>https://simplesolution.dev/java-code-examples/log4j2-yaml-configuration-console-appender/</link>
      <pubDate>Tue, 07 May 2019 01:01:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/log4j2-yaml-configuration-console-appender/</guid>
      <description>Java Code Examples for using
 org.apache.logging.log4j.LogManager org.apache.logging.log4j.Logger  The Java code example below to show you how to configure Log4j 2 with YAML configuration file to log messages to sytem console using Console appender.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Log2j 2 Dependencies to your project In order to read YAML configuration file Log4j 2 using Jackson and jackson-dataformat-yaml libraries so that you need to add these dependencies to your project.</description>
    </item>
    
    <item>
      <title>Log4j 2 XML Configuration with Console Appender</title>
      <link>https://simplesolution.dev/java-code-examples/log4j2-xml-configuration-console-appender/</link>
      <pubDate>Tue, 07 May 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/log4j2-xml-configuration-console-appender/</guid>
      <description>Java Code Examples for using
 org.apache.logging.log4j.LogManager org.apache.logging.log4j.Logger  The Java code example below to show you how to configure Log4j 2 with XML configuration file to log messages to sytem console using Console appender.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Log2j 2 Dependencies to your project Add dependencies below to your build.gradle if you are using Gradle build. dependencies {compile group: &amp;#39;org.apache.logging.log4j&amp;#39;, name: &amp;#39;log4j-api&amp;#39;, version: &amp;#39;2.</description>
    </item>
    
    <item>
      <title>Log4j 2 JSON Configuration with Console Appender</title>
      <link>https://simplesolution.dev/java-code-examples/log4j2-json-configuration-console-appender/</link>
      <pubDate>Mon, 06 May 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/log4j2-json-configuration-console-appender/</guid>
      <description>Java Code Examples for using
 org.apache.logging.log4j.LogManager org.apache.logging.log4j.Logger  The Java code example below to show you how to configure Log4j 2 with JSON configuration file to log messages to sytem console using Console appender.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Log2j 2 Dependencies to your project In order to read JSON configuration file Log4j 2 using Jackson library so that you need to add Jackson dependencies to your project.</description>
    </item>
    
    <item>
      <title>Google Guava in Java to join String with Joiner</title>
      <link>https://simplesolution.dev/java-code-examples/guava-java-join-string-with-joiner/</link>
      <pubDate>Fri, 03 May 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/guava-java-join-string-with-joiner/</guid>
      <description>Java Code Examples for using com.google.common.base.Joiner class
   (adsbygoogle = window.adsbygoogle || []).push({});  Example for using Joiner that skip joining null values package simplesolution.dev;import com.google.common.base.Joiner;public class GuavaJoinerExample1 {public static void main(String... args) {final Joiner joiner = Joiner.on(&amp;#34; and &amp;#34;).skipNulls();String result = joiner.join(&amp;#34;Java&amp;#34;, &amp;#34;Python&amp;#34;, null, &amp;#34;Go&amp;#34;);System.out.println(result);}} Output
Java and Python and Go     (adsbygoogle = window.adsbygoogle || []).</description>
    </item>
    
    <item>
      <title>Gradle Creating Executable JAR File</title>
      <link>https://simplesolution.dev/gradle-creating-executable-jar-file/</link>
      <pubDate>Wed, 01 May 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/gradle-creating-executable-jar-file/</guid>
      <description>In this toturial we will show you how to configure Gradle build script to build the JAR file that can be executed by java command. In this article we just build the simple application without dependencies.
   (adsbygoogle = window.adsbygoogle || []).push({});  For example you have created a standard Gradle project as below structure.
With the main class GradleCreatingExecutableJarExample as below.
package simplesolution.dev;public class GradleCreatingExecutableJarExample {public static void main(String.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to get Readable File Size in KB MB GB TB</title>
      <link>https://simplesolution.dev/java-code-examples/apache-commons-io-get-readable-file-size/</link>
      <pubDate>Fri, 26 Apr 2019 01:03:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/apache-commons-io-get-readable-file-size/</guid>
      <description>Java Code Examples for using byteCountToDisplaySize() method of org.apache.commons.io.FileUtils class
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.io.FileUtils;import java.math.BigInteger;public class FileUtilsByteCountToDisplaySizeExample {public static void main(String... args) {String result = FileUtils.byteCountToDisplaySize(new BigInteger(&amp;#34;123456789&amp;#34;));System.out.println(result); // 117MBresult = FileUtils.byteCountToDisplaySize(new BigInteger(&amp;#34;123&amp;#34;));System.out.println(result); // 123 bytesresult = FileUtils.byteCountToDisplaySize(new BigInteger(&amp;#34;123456&amp;#34;));System.out.println(result); //120 KBresult = FileUtils.byteCountToDisplaySize(new BigInteger(&amp;#34;123456789012345&amp;#34;));System.out.println(result); //112 TBresult = FileUtils.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to get User Directory</title>
      <link>https://simplesolution.dev/java-code-examples/apache-commons-io-get-user-directory/</link>
      <pubDate>Fri, 26 Apr 2019 01:03:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/apache-commons-io-get-user-directory/</guid>
      <description>Java Code Examples for using getUserDirectoryPath() and getUserDirectory() methods of org.apache.commons.io.FileUtils class
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.io.FileUtils;import java.io.File;public class FileUtilsUserDirectoryExample {public static void main(String... args) {String userDirectoryPath = FileUtils.getUserDirectoryPath();System.out.println(userDirectoryPath);File userDirectory = FileUtils.getUserDirectory();System.out.println(userDirectory.getAbsolutePath());}} Happy Coding ðŸ˜Š
Related Articles Apache Commons IO to get Readable File Size in KB MB GB TB
Apache Commons IO to get Temporary Directory</description>
    </item>
    
    <item>
      <title>Apache Commons IO to get Temporary Directory</title>
      <link>https://simplesolution.dev/java-code-examples/apache-commons-io-get-temporary-directory/</link>
      <pubDate>Fri, 26 Apr 2019 01:02:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/apache-commons-io-get-temporary-directory/</guid>
      <description>Java Code Examples for using getTempDirectoryPath() and getTempDirectory() methods of org.apache.commons.io.FileUtils class
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.io.FileUtils;import java.io.File;public class FileUtilsTempDirectoryExample {public static void main(String... args) {String tempDirectoryPath = FileUtils.getTempDirectoryPath();System.out.println(tempDirectoryPath);File tempDirectory = FileUtils.getTempDirectory();System.out.println(tempDirectory.getAbsolutePath());}} Happy Coding ðŸ˜Š
Related Articles Apache Commons IO to get Readable File Size in KB MB GB TB
Apache Commons IO to get User Directory</description>
    </item>
    
    <item>
      <title>Apache Commons IO to construct File from Directory and Name Elements using FileUtils</title>
      <link>https://simplesolution.dev/java-code-examples/apache-commons-io-construct-file-from-directory-name-elements/</link>
      <pubDate>Fri, 26 Apr 2019 01:01:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/apache-commons-io-construct-file-from-directory-name-elements/</guid>
      <description>Java Code Examples for using getFile() method of org.apache.commons.io.FileUtils class
   (adsbygoogle = window.adsbygoogle || []).push({});  Example 1 package simplesolution.dev;import org.apache.commons.io.FileUtils;import java.io.File;public class FileUtilsGetFileExample1 {public static void main(String... args) {// construct File from name elements File file = FileUtils.getFile(&amp;#34;D:&amp;#34;, &amp;#34;Data&amp;#34;, &amp;#34;file1.txt&amp;#34;);System.out.println(&amp;#34;Absolute file path: &amp;#34; + file.getAbsolutePath());System.out.println(&amp;#34;File exist: &amp;#34; + file.exists());}}    (adsbygoogle = window.adsbygoogle || []).</description>
    </item>
    
    <item>
      <title>Apache Commons IO to delete directory using FileUtils</title>
      <link>https://simplesolution.dev/java-code-examples/apache-commons-io-delete-directory-fileutils/</link>
      <pubDate>Fri, 26 Apr 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/apache-commons-io-delete-directory-fileutils/</guid>
      <description>Java Code Examples for using deleteDirectory() method of org.apache.commons.io.FileUtils class
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.io.FileUtils;import java.io.File;import java.io.IOException;public class FileUtilsDeleteDirectoryExample {public static void main(String... args) {try {File directoryToDelete = new File(&amp;#34;D:\\Data\\test&amp;#34;);FileUtils.deleteDirectory(directoryToDelete);}catch(IOException ex) {ex.printStackTrace();}}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Apache POI Excel Cell Background Foreground and Font Color with 17 Java Code Examples</title>
      <link>https://simplesolution.dev/java-code-examples/apache-poi-excel-cell-background-foreground-font-color/</link>
      <pubDate>Mon, 22 Apr 2019 01:01:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/apache-poi-excel-cell-background-foreground-font-color/</guid>
      <description>Java Code Examples for:
 org.apache.poi.ss.usermodel.FillPatternType org.apache.poi.ss.usermodel.IndexedColors org.apache.poi.ss.usermodel.CellStyle  17 Java code examples below to show how to use different fill patterns to set up Excel cell background and forground using Apache POI library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Example for background and foreground color with FillPatternType.ALT_BARS fill pattern package simplesolution.dev;import org.apache.poi.ss.usermodel.Row;import org.apache.poi.ss.usermodel.Sheet;import org.apache.poi.ss.usermodel.Workbook;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import org.apache.poi.ss.usermodel.Cell;import org.apache.poi.ss.usermodel.Font;import org.apache.poi.ss.usermodel.IndexedColors;import org.</description>
    </item>
    
    <item>
      <title>Apache POI Excel Cell Border and Border Color</title>
      <link>https://simplesolution.dev/java-code-examples/apache-poi-excel-cell-border-and-border-color/</link>
      <pubDate>Mon, 22 Apr 2019 01:01:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/apache-poi-excel-cell-border-and-border-color/</guid>
      <description>Java Code Examples for:
 org.apache.poi.ss.usermodel.CellStyle org.apache.poi.ss.usermodel.BorderStyle org.apache.poi.ss.usermodel.IndexedColors  Below 13 Java code examples to show how to use Apache POI to generate Excel files with different cell border formats such as thin, thick, medium, dashed, dot, slanted, hair, double. These examples also include code to set color for Excel cell border.
   (adsbygoogle = window.adsbygoogle || []).push({});  Example for thin border style and black border color package simplesolution.</description>
    </item>
    
    <item>
      <title>Apache POI Vertical and Horizontal Excel Cell Alignment</title>
      <link>https://simplesolution.dev/java-code-examples/apache-poi-vertical-horizontal-excel-cell-alignment/</link>
      <pubDate>Mon, 22 Apr 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/apache-poi-vertical-horizontal-excel-cell-alignment/</guid>
      <description>Java Code Examples for:
 org.apache.poi.ss.usermodel.HorizontalAlignment org.apache.poi.ss.usermodel.VerticalAlignment  There are nine examples below to show how to use Apache POI library to create Excel cells with different aligment.
   (adsbygoogle = window.adsbygoogle || []).push({});  Example Left Top Excel Cell Alignment package simplesolution.dev;import org.apache.poi.ss.usermodel.CellStyle;import org.apache.poi.ss.usermodel.Row;import org.apache.poi.ss.usermodel.Sheet;import org.apache.poi.ss.usermodel.Workbook;import org.apache.poi.ss.usermodel.Cell;import org.apache.poi.ss.usermodel.HorizontalAlignment;import org.apache.poi.ss.usermodel.VerticalAlignment;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import java.io.FileOutputStream;import java.io.IOException;import java.io.OutputStream;public class CellStyleAlignmentLeftTopExample {public static void main(String.</description>
    </item>
    
    <item>
      <title>Creating Spring Boot Application with Spring Tool Suite</title>
      <link>https://simplesolution.dev/spring-boot-application-spring-tool-suite/</link>
      <pubDate>Thu, 18 Apr 2019 01:02:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-application-spring-tool-suite/</guid>
      <description>In this article we will learn step by step guide to create a new Spring Boot web application using Spring Tool Suite.
   (adsbygoogle = window.adsbygoogle || []).push({});  You can download Spring Tool Suite from this link
First step, open Spring Tool Suite on your machine and choose menu File -&amp;gt; New -&amp;gt; Spring Starter Project
Then input new project information on New Spring Starter Project popup as below and click on Next button.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to read text file content as a list of Strings</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.readlines/</link>
      <pubDate>Wed, 17 Apr 2019 01:02:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.readlines/</guid>
      <description>Java Code Examples for org.apache.commons.io.IOUtils.readLines()
Example below using readLines() method to read file content from InputStream or Reader and return a list of Strings.
   (adsbygoogle = window.adsbygoogle || []).push({});  Example to use IOUtils.readLines() with InputStream package simplesolution.dev;import org.apache.commons.io.IOUtils;import java.io.FileInputStream;import java.io.IOException;import java.io.InputStream;import java.util.List;public class IOUtilsReadLinesWithInputStreamExample {public static void main(String... args) {String fileName = &amp;#34;D:\\data\\sample.txt&amp;#34;;try(InputStream inputStream = new FileInputStream(fileName)){List&amp;lt;String&amp;gt; fileContent = IOUtils.</description>
    </item>
    
    <item>
      <title>Apache Commons IO with LineIterator to read file content</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.lineiterator/</link>
      <pubDate>Wed, 17 Apr 2019 01:01:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.lineiterator/</guid>
      <description>Java Code Examples for org.apache.commons.io.IOUtils.lineIterator()
There are two examples to show you how to use Apache Commons IO with LineIterator to read file content from InputStream or Reader object.
   (adsbygoogle = window.adsbygoogle || []).push({});  Example to use IOUtils.lineIterator() with InputStream package simplesolution.dev;import org.apache.commons.io.IOUtils;import org.apache.commons.io.LineIterator;import java.io.FileInputStream;import java.io.IOException;import java.io.InputStream;public class IOUtilsLineIteratorWithInputStreamExample {public static void main(String... args) {String fileName = &amp;#34;D:\\data\\sample.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to copy file content from InputStream to OutputStream</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.copy/</link>
      <pubDate>Wed, 17 Apr 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.copy/</guid>
      <description>Java Code Examples for org.apache.commons.io.IOUtils.copy()
Example code below to show how to use IOUtils class of Apache Commons IO library to copy file content from an InputStream to an OutputStream.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.io.IOUtils;import java.io.File;import java.io.FileOutputStream;import java.io.InputStream;import java.io.OutputStream;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;public class IOUtilsCopyExample {public static void main(String... args) {try {String sourceFileName = &amp;#34;D:\\Data\\sample.</description>
    </item>
    
    <item>
      <title>Apache POI to Create Excel Date Time Cell in m/d/yy h:mm:ss Format</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.poi.ss.usermodel.cell.createcell-date-time/</link>
      <pubDate>Sat, 13 Apr 2019 17:55:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.poi.ss.usermodel.cell.createcell-date-time/</guid>
      <description>Java Code Examples for
 org.apache.poi.ss.usermodel.Cell.createCell()  The example below to create a new Excel file with one worksheet and a date time cell in m/d/yy h:mm:ss format using Apache POI library.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.poi.ss.usermodel.CreationHelper;import org.apache.poi.ss.usermodel.Row;import org.apache.poi.ss.usermodel.Sheet;import org.apache.poi.ss.usermodel.Workbook;import org.apache.poi.ss.usermodel.CellStyle;import org.apache.poi.ss.usermodel.Cell;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import java.io.FileOutputStream;import java.io.IOException;import java.io.OutputStream;import java.util.Date;public class CreateHelperCreateDataFormatDateTimeExample {public static void main(String.</description>
    </item>
    
    <item>
      <title>Apache POI to Create Excel Text Cell</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.poi.ss.usermodel.cell.createcell/</link>
      <pubDate>Sat, 13 Apr 2019 17:54:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.poi.ss.usermodel.cell.createcell/</guid>
      <description>Java Code Examples for
 org.apache.poi.ss.usermodel.Cell.createCell()  The example below to create a new Excel file with one worksheet and a text cell using Apache POI library.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.poi.ss.usermodel.Cell;import org.apache.poi.ss.usermodel.Row;import org.apache.poi.ss.usermodel.Sheet;import org.apache.poi.ss.usermodel.Workbook;import org.apache.poi.xssf.usermodel.XSSFWorkbook;import java.io.FileOutputStream;import java.io.IOException;import java.io.OutputStream;public class RowCreateCellExample {public static void main(String... args) {Workbook workbook = new XSSFWorkbook();Sheet sheet = workbook.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to Compare File Content of InputStream or Reader using IOUtils</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.contentequals/</link>
      <pubDate>Sat, 13 Apr 2019 17:53:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.contentequals/</guid>
      <description>Java Code Examples for org.apache.commons.io.IOUtils.contentEquals() and org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL()
Three examples below to show how to use Apache Commons IO IOUtils class to Compare File Content of InputStream objects or Reader objects.
   (adsbygoogle = window.adsbygoogle || []).push({});  Example IOUtils.contentEquals() method to compare 2 InputStream objects package simplesolution.dev;import org.apache.commons.io.IOUtils;import java.io.File;import java.io.IOException;import java.io.InputStream;import java.nio.file.Files;import java.nio.file.Path;public class IOUtilsContentEqualsInputStreamExample {public static void main(String... args) {try {File file1 = new File(&amp;#34;D:\\Data\\file1.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to download website content from URL using IOUtils</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-url/</link>
      <pubDate>Sat, 13 Apr 2019 17:52:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-url/</guid>
      <description>Java Code Examples for org.apache.commons.io.IOUtils.toString()
Below Java code example to show you how to use Apache Commons IO IOUtils class to download website content from java.net.URL.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.codec.Charsets;import org.apache.commons.io.IOUtils;import java.io.IOException;import java.net.URL;public class IOUtilToStringFromURLExample {public static void main(String... args) {try {URL uri = new URL(&amp;#34;https://simplesolution.dev/java-code-examples/&amp;#34;);String content = IOUtils.toString(uri, Charsets.UTF_8);System.out.println(content);} catch (IOException ex) {ex.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to download website content from URI using IOUtils</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-uri/</link>
      <pubDate>Sat, 13 Apr 2019 17:51:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-uri/</guid>
      <description>Java Code Examples for org.apache.commons.io.IOUtils.toString()
Below Java code example to show you how to use Apache Commons IO IOUtils class to download website content from java.net.URI.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.codec.Charsets;import org.apache.commons.io.IOUtils;import java.io.IOException;import java.net.URI;import java.net.URISyntaxException;public class IOUtilToStringFromURIExample {public static void main(String... args) {try {URI uri = new URI(&amp;#34;https://simplesolution.dev/&amp;#34;);String content = IOUtils.toString(uri, Charsets.UTF_8);System.out.println(content);} catch (URISyntaxException ex) {ex.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to read text content from Reader</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-reader/</link>
      <pubDate>Sat, 13 Apr 2019 17:50:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-reader/</guid>
      <description>Java Code Examples for org.apache.commons.io.IOUtils.toString()
The example below to show you how to use Apache Commons IO libary&amp;rsquo;s IOUtils class to read text content from Reader.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.io.IOUtils;import java.io.FileReader;import java.io.IOException;import java.io.Reader;public class IOUtilToStringFromReaderExample {public static void main(String... args) {String fileName = &amp;#34;D:\\data\\sample.txt&amp;#34;;try(Reader reader = new FileReader(fileName)) {String fileContent = IOUtils.toString(reader);System.out.println(fileContent);} catch (IOException ex) {ex.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to read text content from InputStream</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-input-stream/</link>
      <pubDate>Sat, 13 Apr 2019 17:49:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-input-stream/</guid>
      <description>Java Code Examples for org.apache.commons.io.IOUtils.toString()
The example below to show you how to use Apache Commons IO libary&amp;rsquo;s IOUtils class to read text content from InputStream.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.io.IOUtils;import java.io.FileInputStream;import java.io.IOException;import java.io.InputStream;public class IOUtilToStringFromInputStreamExample {public static void main(String... args) {String fileName = &amp;#34;D:\\data\\sample.txt&amp;#34;;try(InputStream inputStream = new FileInputStream(fileName)) {String value = IOUtils.toString(inputStream, &amp;#34;UTF-8&amp;#34;);System.</description>
    </item>
    
    <item>
      <title>Get First Date of Current Month using Calendar</title>
      <link>https://simplesolution.dev/java-code-examples/java.util.calendar.gettime.firstdateofmonth/</link>
      <pubDate>Sat, 13 Apr 2019 17:48:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.util.calendar.gettime.firstdateofmonth/</guid>
      <description>Java Code Examples for java.util.Calendar
Get First Date of Current Month using Calendar.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.util.Calendar;import java.util.Date;public class CalendarFirstDayOfMonthExamples {public static void main(String... args) {Calendar calendar = Calendar.getInstance();Date currentDate = new Date();calendar.setTime(currentDate);calendar.set(Calendar.DAY_OF_MONTH, 1);calendar.set(Calendar.HOUR_OF_DAY, 0);calendar.set(Calendar.MINUTE, 0);calendar.set(Calendar.SECOND, 0);calendar.set(Calendar.MILLISECOND, 0);Date firstDateOfMonth = calendar.getTime();System.out.println(firstDateOfMonth);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Get Last Date of Current Month using Calendar</title>
      <link>https://simplesolution.dev/java-code-examples/java.util.calendar-last-date-of-month/</link>
      <pubDate>Sat, 13 Apr 2019 17:48:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.util.calendar-last-date-of-month/</guid>
      <description>Java Code Examples for java.util.Calendar
Get Last Date of Current Month using Calendar
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.util.Calendar;import java.util.Date;public class CalendarLastDateOfMonthExamples {public static void main(String... args) {Calendar calendar = Calendar.getInstance();Date currentDate = new Date();calendar.setTime(currentDate);calendar.set(Calendar.DAY_OF_MONTH, 1);calendar.set(Calendar.HOUR_OF_DAY, 0);calendar.set(Calendar.MINUTE, 0);calendar.set(Calendar.SECOND, 0);calendar.set(Calendar.MILLISECOND, 0);calendar.add(Calendar.MONTH, 1);calendar.add(Calendar.MILLISECOND, -1);Date lastDateOfCurrentMonth = calendar.getTime();System.out.println(lastDateOfCurrentMonth);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Parses a String value to Date value with given format yyyy-MM-dd HH:mm:ss</title>
      <link>https://simplesolution.dev/java-code-examples/java.text.simpledateformat.parse/</link>
      <pubDate>Sat, 13 Apr 2019 17:47:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.text.simpledateformat.parse/</guid>
      <description>Java Code Examples for java.text.SimpleDateFormat.parse()
Parses a String value to Date value with given format yyyy-MM-dd HH:mm:ss.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Date;public class SimpleDateFormatParseExamples {public static void main(String... args) {try {SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;);String source = &amp;#34;2019-04-15 10:15:30&amp;#34;;Date date = simpleDateFormat.parse(source);System.out.println(date);} catch (ParseException ex) {ex.printStackTrace();}}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Formats a Date object into a string yyyy-MM-dd HH:mm:ss</title>
      <link>https://simplesolution.dev/java-code-examples/java.text.simpledateformat.format/</link>
      <pubDate>Sat, 13 Apr 2019 17:46:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.text.simpledateformat.format/</guid>
      <description>Java Code Examples for java.text.SimpleDateFormat.format()
Formats a Date into a string yyyy-MM-dd HH:mm:ss.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.text.SimpleDateFormat;import java.util.Date;public class SimpleDateFormatFormatExamples {public static void main(String... args) {SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;);Date dateToFormat = new Date();String formattedValue = simpleDateFormat.format(dateToFormat);System.out.println(formattedValue);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Java AES Advanced Encryption Standard Encryption and Decryption</title>
      <link>https://simplesolution.dev/java-code-examples/javax.crypto.cipher.dofinal/</link>
      <pubDate>Sat, 13 Apr 2019 17:45:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/javax.crypto.cipher.dofinal/</guid>
      <description>Java Code Examples for javax.crypto.Cipher.doFinal()
Java AES Advanced Encryption Standard Encryption and Decryption.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev.crypto;import javax.crypto.BadPaddingException;import javax.crypto.Cipher;import javax.crypto.IllegalBlockSizeException;import javax.crypto.NoSuchPaddingException;import javax.crypto.spec.SecretKeySpec;import java.io.UnsupportedEncodingException;import java.security.InvalidKeyException;import java.security.MessageDigest;import java.security.NoSuchAlgorithmException;import java.util.Arrays;import java.util.Base64;public class AESEncryption {public static void main(String... args) {try {String secretKey = &amp;#34;KeyToKeepSecret&amp;#34;;String dataToEncrypt = &amp;#34;https://simplesolution.dev&amp;#34;;String dataToDecrypt = &amp;#34;eLR6zVc8ycWr1xfixIkMQ8iL5asv9WyAhuRmz1Wf1u0=&amp;#34;;System.</description>
    </item>
    
    <item>
      <title>Encode a String into Base64 using Base64.encodeBase64String() with Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encodebase64string/</link>
      <pubDate>Sat, 13 Apr 2019 17:44:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encodebase64string/</guid>
      <description>Java Code Examples for org.apache.commons.codec.binary.Base64.encodeBase64String()
This static method to encode input String into a Base64 format String.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.codec.binary.Base64;public class Base64EncodeBase64StringExamples {public static void main(String... args) {String valueToEncode = &amp;#34;https://simplesolution.dev/&amp;#34;;String encodedString = Base64.encodeBase64String(valueToEncode.getBytes());System.out.println(&amp;#34;Encode output: &amp;#34;);System.out.println(encodedString);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Encode byte array into Base64 format using Base64.encodeBase64() with Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encodebase64/</link>
      <pubDate>Sat, 13 Apr 2019 17:43:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encodebase64/</guid>
      <description>Java Code Examples for org.apache.commons.codec.binary.Base64.encodeBase64()
This static method to encode input byte array into a Base64 format.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.codec.binary.Base64;public class Base64EncodeBase64Examples {public static void main(String... args) {String valueToEncode = &amp;#34;https://simplesolution.dev/&amp;#34;;byte[] encodedBytes = Base64.encodeBase64(valueToEncode.getBytes());String encodedString = new String(encodedBytes);System.out.println(&amp;#34;Encode output: &amp;#34;);System.out.println(encodedString);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Encode a String into Base64 format using Base64.encodeToString() with Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encodetostring/</link>
      <pubDate>Sat, 13 Apr 2019 17:42:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encodetostring/</guid>
      <description>Java Code Examples for org.apache.commons.codec.binary.Base64.encodeToString()
This method to encode input String into a Base64 format String.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.codec.binary.Base64;public class Base64EncodeToStringExamples {public static void main(String... args) {Base64 base64 = new Base64();String valueToEncode = &amp;#34;https://simplesolution.dev/&amp;#34;;String encodedString = base64.encodeToString(valueToEncode.getBytes());System.out.println(&amp;#34;Encode output: &amp;#34;);System.out.println(encodedString);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Encode byte array into Base64 format using Base64.encode() with Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encode/</link>
      <pubDate>Sat, 13 Apr 2019 17:41:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encode/</guid>
      <description>Java Code Examples for org.apache.commons.codec.binary.Base64.encode()
This method to encode input byte array to Base64 format.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.codec.binary.Base64;public class Base64EncodeExamples {public static void main(String... args) {Base64 base64 = new Base64();String valueToEncode = &amp;#34;https://simplesolution.dev/&amp;#34;;byte[] encodedBytes = base64.encode(valueToEncode.getBytes());String encodedString = new String(encodedBytes);System.out.println(&amp;#34;Encode output: &amp;#34;);System.out.println(encodedString);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Convert BigDecimal value to byte value</title>
      <link>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.bytevalue/</link>
      <pubDate>Sat, 13 Apr 2019 17:40:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.bytevalue/</guid>
      <description>Java Code Examples for java.math.BigDecimal.byteValue()
This method to convert a BigDecimal value to byte value.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.math.BigDecimal;public class BigDecimalByteValueExamples {public static void main(String... args) {BigDecimal bigDecimal = new BigDecimal(&amp;#34;9.01&amp;#34;);byte byteValue = bigDecimal.byteValue();System.out.println(bigDecimal);System.out.println(byteValue);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Convert BigDecimal value into short value</title>
      <link>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.shortvalue/</link>
      <pubDate>Sat, 13 Apr 2019 17:39:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.shortvalue/</guid>
      <description>Java Code Examples for java.math.BigDecimal.shortValue()
This method to convert a BigDecimal value to short value.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.math.BigDecimal;public class BigDecimalShortValueExamples {public static void main(String... args) {BigDecimal bigDecimal = new BigDecimal(&amp;#34;9.01&amp;#34;);short shortValue = bigDecimal.shortValue();System.out.println(bigDecimal);System.out.println(shortValue);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Convert BigDecimal value into long value</title>
      <link>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.longvalue/</link>
      <pubDate>Sat, 13 Apr 2019 17:38:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.longvalue/</guid>
      <description>Java Code Examples for java.math.BigDecimal.longValue()
This method to convert a BigDecimal value to long value.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.math.BigDecimal;public class BigDecimalLongValueExamples {public static void main(String... args) {BigDecimal bigDecimal = new BigDecimal(&amp;#34;999999999.01&amp;#34;);long longValue = bigDecimal.longValue();System.out.println(bigDecimal);System.out.println(longValue);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Convert BigDecimal value into int value</title>
      <link>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.intvalue/</link>
      <pubDate>Sat, 13 Apr 2019 17:37:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.intvalue/</guid>
      <description>Java Code Examples for java.math.BigDecimal.intValue()
This method to convert a BigDecimal value to int value.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.math.BigDecimal;public class BigDecimalIntValueExamples {public static void main(String... args) {BigDecimal bigDecimal = new BigDecimal(&amp;#34;10.01&amp;#34;);int intValue = bigDecimal.intValue();System.out.println(bigDecimal);System.out.println(intValue);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Convert BigDecimal value into float value</title>
      <link>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.floatvalue/</link>
      <pubDate>Sat, 13 Apr 2019 17:36:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.floatvalue/</guid>
      <description>Java Code Examples for java.math.BigDecimal.floatValue()
This method to convert a BigDecimal value to float value.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.math.BigDecimal;public class BigDecimalFloatValueExamples {public static void main(String... args) {BigDecimal bigDecimal = new BigDecimal(&amp;#34;10.01&amp;#34;);float floatValue = bigDecimal.floatValue();System.out.println(bigDecimal);System.out.println(floatValue);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Convert BigDecimal value into double value</title>
      <link>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.doublevalue/</link>
      <pubDate>Sat, 13 Apr 2019 17:35:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.doublevalue/</guid>
      <description>Java Code Examples for java.math.BigDecimal.doubleValue()
This method to convert a BigDecimal value to double value.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.math.BigDecimal;public class BigDecimalDoubleValueExamples {public static void main(String... args) {BigDecimal bigDecimal = new BigDecimal(&amp;#34;10.01&amp;#34;);double doubleValue = bigDecimal.doubleValue();System.out.println(bigDecimal);System.out.println(doubleValue);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Divide two BigDecimal values</title>
      <link>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.divide/</link>
      <pubDate>Sat, 13 Apr 2019 17:34:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.divide/</guid>
      <description>Java Code Examples for java.math.BigDecimal.divide()
This method to divide two BigDecimal values.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.math.BigDecimal;public class BigDecimalDivideExamples {public static void main(String... args) {BigDecimal bigDecimal1 = new BigDecimal(&amp;#34;40.04&amp;#34;);BigDecimal bigDecimal2 = new BigDecimal(&amp;#34;10.01&amp;#34;);BigDecimal result = bigDecimal1.divide(bigDecimal2);System.out.println(bigDecimal1);System.out.println(bigDecimal2);System.out.println(result);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Multiply two BigDecimal values</title>
      <link>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.multiply/</link>
      <pubDate>Sat, 13 Apr 2019 17:33:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.multiply/</guid>
      <description>Java Code Examples for java.math.BigDecimal.multiply()
This method to multiply two BigDecimal values.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.math.BigDecimal;public class BigDecimalMultiplyExamples {public static void main(String... args) {BigDecimal bigDecimal1 = new BigDecimal(&amp;#34;30.01&amp;#34;);BigDecimal bigDecimal2 = new BigDecimal(&amp;#34;10.2&amp;#34;);BigDecimal result = bigDecimal1.multiply(bigDecimal2);System.out.println(bigDecimal1);System.out.println(bigDecimal2);System.out.println(result);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Subtract two BigDecimal values</title>
      <link>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.subtract/</link>
      <pubDate>Sat, 13 Apr 2019 17:32:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.subtract/</guid>
      <description>Java Code Examples for java.math.BigDecimal.subtract()
This method to substact two BigDecimal values.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.math.BigDecimal;public class BigDecimalSubtractExamples {public static void main(String... args) {BigDecimal bigDecimal1 = new BigDecimal(&amp;#34;20.02&amp;#34;);BigDecimal bigDecimal2 = new BigDecimal(&amp;#34;10.01&amp;#34;);BigDecimal result = bigDecimal1.subtract(bigDecimal2);System.out.println(bigDecimal1);System.out.println(bigDecimal2);System.out.println(result);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Adding two BigDecimal values</title>
      <link>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.add/</link>
      <pubDate>Sat, 13 Apr 2019 17:31:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/java.math.bigdecimal.add/</guid>
      <description>Java Code Examples for java.math.BigDecimal.add()
This method to add two BigDecimal values.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import java.math.BigDecimal;public class BigDecimalAddExamples {public static void main(String... args) {BigDecimal bigDecimal1 = new BigDecimal(&amp;#34;10.001&amp;#34;);BigDecimal bigDecimal2 = new BigDecimal(&amp;#34;10.002&amp;#34;);BigDecimal result = bigDecimal1.add(bigDecimal2);System.out.println(bigDecimal1);System.out.println(bigDecimal2);System.out.println(result);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Deserializes JSON string into Java object using JsonIterator.deserialize() with Jsoniter</title>
      <link>https://simplesolution.dev/java-code-examples/com.jsoniter.jsoniterator.deserialize/</link>
      <pubDate>Sat, 13 Apr 2019 17:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.jsoniter.jsoniterator.deserialize/</guid>
      <description>Java Code Examples for com.jsoniter.JsonIterator.deserialize()
This method to deserializes a JSON string into a Java object of the specified class.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import com.jsoniter.JsonIterator;import java.util.List;import java.util.Map;public class JsonIteratorDeserializeExamples {public static void main(String... args) {String data = &amp;#34;[{\&amp;#34;name\&amp;#34;:\&amp;#34;Sample JSON Serialization\&amp;#34;,\&amp;#34;url\&amp;#34;:\&amp;#34;https://simplesolution.dev\&amp;#34;},{\&amp;#34;name\&amp;#34;:\&amp;#34;Java Tutorials\&amp;#34;,\&amp;#34;url\&amp;#34;:\&amp;#34;https://simplesolution.dev/java\&amp;#34;}]&amp;#34;;List&amp;lt;Map&amp;lt;String, String&amp;gt;&amp;gt; objectFromJsonString = JsonIterator.deserialize(data, List.class);System.out.println(&amp;#34;[Jsoniter] Object from String: &amp;#34; + objectFromJsonString);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Serializes Java object into JSON string using JsonStream.serialize() with Jsoniter</title>
      <link>https://simplesolution.dev/java-code-examples/com.jsoniter.output.jsonstream.serialize/</link>
      <pubDate>Sat, 13 Apr 2019 17:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.jsoniter.output.jsonstream.serialize/</guid>
      <description>Java Code Examples for com.jsoniter.output.JsonStream.serialize()
This method to serializes the Java object into JSON string.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import com.jsoniter.output.JsonStream;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;public class JsonStreamSerializeExamples {public static void main(String... args) {List&amp;lt;Map&amp;lt;String, String&amp;gt;&amp;gt; data = new ArrayList&amp;lt;&amp;gt;();Map&amp;lt;String, String&amp;gt; item1 = new HashMap&amp;lt;&amp;gt;();item1.put(&amp;#34;name&amp;#34;, &amp;#34;Sample JSON Serialization&amp;#34;);item1.put(&amp;#34;url&amp;#34;, &amp;#34;https://simplesolution.dev&amp;#34;);data.add(item1);Map&amp;lt;String, String&amp;gt; item2 = new HashMap&amp;lt;&amp;gt;();item2.</description>
    </item>
    
    <item>
      <title>Apache POI Create new Excel sheet</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.poi.hssf.usermodel.hssfworkbook.createsheet/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.poi.hssf.usermodel.hssfworkbook.createsheet/</guid>
      <description>Java Code Examples for
 org.apache.poi.hssf.usermodel.HSSFWorkbook.createSheet()  Create a new sheet for Workbook and return the high level representation of Sheet.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.poi.hssf.usermodel.HSSFWorkbook;import org.apache.poi.ss.usermodel.Sheet;import org.apache.poi.ss.usermodel.Workbook;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;import java.io.OutputStream;public class HSSFWorkbookCreateSheetExamples {public static void main(String... args) {Workbook workbook = new HSSFWorkbook();Sheet sheet = workbook.createSheet(&amp;#34;simplesolution.dev&amp;#34;);try (OutputStream outputStream = new FileOutputStream(&amp;#34;sample.</description>
    </item>
    
    <item>
      <title>Deserialize JSON string into Java object using ObjectMapper.readValue() with Jackson</title>
      <link>https://simplesolution.dev/java-code-examples/com.fasterxml.jackson.databind.objectmapper.readvalue/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.fasterxml.jackson.databind.objectmapper.readvalue/</guid>
      <description>Java Code Examples for com.fasterxml.jackson.databind.ObjectMapper.readValue()
This method to deserialize JSON string into a Java object.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import com.fasterxml.jackson.databind.ObjectMapper;import java.io.IOException;import java.util.List;import java.util.Map;public class ObjectMapperReadValueExamples {public static void main(String... args) {String data = &amp;#34;[{\&amp;#34;name\&amp;#34;:\&amp;#34;Sample JSON Serialization\&amp;#34;,\&amp;#34;url\&amp;#34;:\&amp;#34;https://simplesolution.dev\&amp;#34;},{\&amp;#34;name\&amp;#34;:\&amp;#34;Java Tutorials\&amp;#34;,\&amp;#34;url\&amp;#34;:\&amp;#34;https://simplesolution.dev/java\&amp;#34;}]&amp;#34;;ObjectMapper objectMapper = new ObjectMapper();try {List&amp;lt;Map&amp;lt;String, String&amp;gt;&amp;gt; objectFromJsonString = objectMapper.readValue(data, List.class);System.out.println(&amp;#34;Object from String: &amp;#34; + objectFromJsonString);} catch (IOException ex) {ex.</description>
    </item>
    
    <item>
      <title>Deserializes JSON String into Java object using JSON.parseObject() with Fastjson</title>
      <link>https://simplesolution.dev/java-code-examples/com.alibaba.fastjson.json.parseobject/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.alibaba.fastjson.json.parseobject/</guid>
      <description>Java Code Examples for com.alibaba.fastjson.JSON.parseObject()
This method to deserializes the JSON string into a Java object.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import com.alibaba.fastjson.JSON;import java.util.List;import java.util.Map;public class JSONParseObjectExamples {public static void main(String... args) {String data = &amp;#34;[{\&amp;#34;name\&amp;#34;:\&amp;#34;Sample JSON Serialization\&amp;#34;,\&amp;#34;url\&amp;#34;:\&amp;#34;https://simplesolution.dev\&amp;#34;},{\&amp;#34;name\&amp;#34;:\&amp;#34;Java Tutorials\&amp;#34;,\&amp;#34;url\&amp;#34;:\&amp;#34;https://simplesolution.dev/java\&amp;#34;}]&amp;#34;;List&amp;lt;Map&amp;lt;String, String&amp;gt;&amp;gt; objectFromJsonString = JSON.parseObject(data, List.class);System.out.println(&amp;#34;Object from String: &amp;#34; + objectFromJsonString);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Deserializes JSON string into Java object using Gson.fromJson() with Gson</title>
      <link>https://simplesolution.dev/java-code-examples/com.google.gson.gson.fromjson/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.google.gson.gson.fromjson/</guid>
      <description>Java Code Examples for com.google.gson.Gson.fromJson()
This method to deserializes a JSON string into a Java object of the specified class.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import com.google.gson.Gson;import java.util.List;import java.util.Map;public class GsonFromJsonExamples {public static void main(String... args) {String data = &amp;#34;[{\&amp;#34;name\&amp;#34;:\&amp;#34;Sample JSON Serialization\&amp;#34;,\&amp;#34;url\&amp;#34;:\&amp;#34;https://simplesolution.dev\&amp;#34;},{\&amp;#34;name\&amp;#34;:\&amp;#34;Java Tutorials\&amp;#34;,\&amp;#34;url\&amp;#34;:\&amp;#34;https://simplesolution.dev/java\&amp;#34;}]&amp;#34;;Gson gson = new Gson();List&amp;lt;Map&amp;lt;String, String&amp;gt;&amp;gt; objectFromJsonString = gson.fromJson(data, List.class);System.out.println(&amp;#34;Object from String: &amp;#34; + objectFromJsonString);}} Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Deserializes JSON string into Java object using JsonAdapter.fromJson() with Moshi</title>
      <link>https://simplesolution.dev/java-code-examples/com.squareup.moshi.jsonadapter.fromjson/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.squareup.moshi.jsonadapter.fromjson/</guid>
      <description>Java Code Examples for com.squareup.moshi.JsonAdapter.fromJson()
This method to deserializes a JSON string into a Java object of the specified class.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import com.squareup.moshi.JsonAdapter;import com.squareup.moshi.Moshi;import java.io.IOException;import java.util.List;public class JsonAdapterFromJsonExamples {public static void main(String... args){String data = &amp;#34;[{\&amp;#34;name\&amp;#34;:\&amp;#34;Sample JSON Serialization\&amp;#34;,\&amp;#34;url\&amp;#34;:\&amp;#34;https://simplesolution.dev\&amp;#34;},{\&amp;#34;name\&amp;#34;:\&amp;#34;Java Tutorials\&amp;#34;,\&amp;#34;url\&amp;#34;:\&amp;#34;https://simplesolution.dev/java\&amp;#34;}]&amp;#34;;Moshi moshi = new Moshi.Builder().build();JsonAdapter&amp;lt;List&amp;gt; jsonAdapter = moshi.adapter(List.class);try {List&amp;lt;Employee&amp;gt; objectFromJsonString = jsonAdapter.fromJson(data);System.</description>
    </item>
    
    <item>
      <title>Serializes Java object into JSON String using JsonAdapter.toJson() with Moshi</title>
      <link>https://simplesolution.dev/java-code-examples/com.squareup.moshi.jsonadapter.tojson/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.squareup.moshi.jsonadapter.tojson/</guid>
      <description>Java Code Examples for com.squareup.moshi.JsonAdapter.toJson()
This method to serializes the Java object into JSON string.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import com.squareup.moshi.JsonAdapter;import com.squareup.moshi.Moshi;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;public class JsonAdapterToJsonExamples {public static void main(String... args) {List&amp;lt;Map&amp;lt;String, String&amp;gt;&amp;gt; data = new ArrayList&amp;lt;&amp;gt;();Map&amp;lt;String, String&amp;gt; item1 = new HashMap&amp;lt;&amp;gt;();item1.put(&amp;#34;name&amp;#34;, &amp;#34;Sample JSON Serialization&amp;#34;);item1.put(&amp;#34;url&amp;#34;, &amp;#34;https://simplesolution.dev&amp;#34;);data.add(item1);Map&amp;lt;String, String&amp;gt; item2 = new HashMap&amp;lt;&amp;gt;();item2.</description>
    </item>
    
    <item>
      <title>Serializes Java object into JSON string using Gson.toJson() with Gson</title>
      <link>https://simplesolution.dev/java-code-examples/com.google.gson.gson.tojson/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.google.gson.gson.tojson/</guid>
      <description>Java Code Examples for com.google.gson.Gson.toJson()
This method to serializes the Java object into JSON string.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import com.google.gson.Gson;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;public class GsonToJsonExamples {public static void main(String... args) {List&amp;lt;Map&amp;lt;String, String&amp;gt;&amp;gt; data = new ArrayList&amp;lt;&amp;gt;();Map&amp;lt;String, String&amp;gt; item1 = new HashMap&amp;lt;&amp;gt;();item1.put(&amp;#34;name&amp;#34;, &amp;#34;Sample JSON Serialization&amp;#34;);item1.put(&amp;#34;url&amp;#34;, &amp;#34;https://simplesolution.dev&amp;#34;);data.add(item1);Map&amp;lt;String, String&amp;gt; item2 = new HashMap&amp;lt;&amp;gt;();item2.</description>
    </item>
    
    <item>
      <title>Serializes Java object into JSON string using JSON.toJSONString() with Fastjson</title>
      <link>https://simplesolution.dev/java-code-examples/com.alibaba.fastjson.json.tojsonstring/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.alibaba.fastjson.json.tojsonstring/</guid>
      <description>Java Code Examples for com.alibaba.fastjson.JSON.toJSONString()
This method to serializes the specified Java object into JSON string.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import com.alibaba.fastjson.JSON;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;public class JSONToJSONStringExamples {public static void main(String... args) {List&amp;lt;Map&amp;lt;String, String&amp;gt;&amp;gt; data = new ArrayList&amp;lt;&amp;gt;();Map&amp;lt;String, String&amp;gt; item1 = new HashMap&amp;lt;&amp;gt;();item1.put(&amp;#34;name&amp;#34;, &amp;#34;Sample JSON Serialization&amp;#34;);item1.put(&amp;#34;url&amp;#34;, &amp;#34;https://simplesolution.dev&amp;#34;);data.add(item1);Map&amp;lt;String, String&amp;gt; item2 = new HashMap&amp;lt;&amp;gt;();item2.</description>
    </item>
    
    <item>
      <title>Serializes Java object into JSON string using ObjectMapper.writeValueAsString() with Jackson</title>
      <link>https://simplesolution.dev/java-code-examples/com.fasterxml.jackson.databind.objectmapper.writevalueasstring/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.fasterxml.jackson.databind.objectmapper.writevalueasstring/</guid>
      <description>Java Code Examples for com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString()
This method can be used to serialize any Java object into a JSON String.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import com.fasterxml.jackson.databind.ObjectMapper;import java.io.IOException;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;public class ObjectMapperWriteValueAsStringExamples {public static void main(String... args) {List&amp;lt;Map&amp;lt;String, String&amp;gt;&amp;gt; data = new ArrayList&amp;lt;&amp;gt;();Map&amp;lt;String, String&amp;gt; item1 = new HashMap&amp;lt;&amp;gt;();item1.put(&amp;#34;name&amp;#34;, &amp;#34;Sample JSON Serialization&amp;#34;);item1.put(&amp;#34;url&amp;#34;, &amp;#34;https://simplesolution.dev&amp;#34;);data.</description>
    </item>
    
    <item>
      <title>Java Generate SHA-1 using DigestUtils in Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-generate-sha1-digestutils-apache-commons-codec/</link>
      <pubDate>Wed, 10 Apr 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-generate-sha1-digestutils-apache-commons-codec/</guid>
      <description>In below code example you will learn how to use org.apache.commons.codec.digest.DigestUtils class in Apache Commons Codec to generate SHA-1 string in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Apache Commons Codec Dependency Define below dependency in build.gradle if you are using gradle. compile group: &amp;#39;commons-codec&amp;#39;, name: &amp;#39;commons-codec&amp;#39;, version: &amp;#39;1.12&amp;#39;
Define this dependency in pom.xml if you are using maven. &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;commons-codec&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;commons-codec&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;1.12&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
Or you can download the release from Apache Commons Codec home page at: here</description>
    </item>
    
    <item>
      <title>Java Base64 Encoding and Decoding with Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-base64-encoding-decoding-apache-commons-codec/</link>
      <pubDate>Tue, 09 Apr 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-base64-encoding-decoding-apache-commons-codec/</guid>
      <description>In this tutorial you will learn how to encoding and decoding a String in Java using Apache Commons Codec library. The library provide org.apache.commons.codec.binary.Base64 class with different methods to encode and decode data.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Dependency Define below dependency in build.gradle if you are using gradle. compile group: &amp;#39;commons-codec&amp;#39;, name: &amp;#39;commons-codec&amp;#39;, version: &amp;#39;1.12&amp;#39;
Define this dependency in pom.xml if you are using maven.</description>
    </item>
    
    <item>
      <title>Creating File Server with Embedded Jetty Server in Java</title>
      <link>https://simplesolution.dev/creating-file-server-with-embedded-jetty-server-in-java/</link>
      <pubDate>Mon, 08 Apr 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/creating-file-server-with-embedded-jetty-server-in-java/</guid>
      <description>In this tutorial you will learn simple step by step to write an Java application which using Embedding Jetty API to creating a static file server.
   (adsbygoogle = window.adsbygoogle || []).push({});  The very first step you need to do is add Jetty Server dependency to your project.
Using Gradle compile group: &amp;#39;org.eclipse.jetty&amp;#39;, name: &amp;#39;jetty-server&amp;#39;, version: &amp;#39;9.4.15.v20190215&amp;#39;
Using Maven &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;org.eclipse.jetty&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;jetty-server&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;9.4.15.v20190215&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
To listen HTTP request at a specified port we need to create org.</description>
    </item>
    
    <item>
      <title>How to use Java ArrayList with Examples</title>
      <link>https://simplesolution.dev/how-to-use-java-arraylist-with-examples/</link>
      <pubDate>Sun, 07 Apr 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/how-to-use-java-arraylist-with-examples/</guid>
      <description>In this tutorial we will go through a list of examples to show you how use java.util.ArrayList in Java program. You will learn how to adding, updating, getting, sorting and other operations on elements of an ArrayList. ArrayList is an implementation of List interface with class diagram as below:
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add one element to an ArrayList There are two approaches to add an element to ArrayList which is append it to the end of the list or you can insert it to specified index position List&amp;lt;String&amp;gt; list = new ArrayList&amp;lt;&amp;gt;();list.</description>
    </item>
    
    <item>
      <title>How to use Java ArrayDeque with Examples</title>
      <link>https://simplesolution.dev/how-to-use-java-arraydeque-with-examples/</link>
      <pubDate>Thu, 04 Apr 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/how-to-use-java-arraydeque-with-examples/</guid>
      <description>In this tutorial we will learn how to use the java.util.ArrayDeque class, a member class of Java Collections Framework. We will go through different examples to see how this class suppport methods that allow you to insert and retrieves element in both front and end of the element list. ArrayDeque is an implementation of Deque interface with class diagram as below:
   (adsbygoogle = window.adsbygoogle || []).push({});  How to use ArrayDeque as a stack We can push an element onto the stack and pop it from stack using ArrayDeque as below Deque&amp;lt;Integer&amp;gt; deque = new ArrayDeque&amp;lt;&amp;gt;();deque.</description>
    </item>
    
    <item>
      <title>Gradle Configuration to generate Java classes from WSDL with JAXB</title>
      <link>https://simplesolution.dev/gradle-configuration-to-generate-java-classes-from-wsdl-with-jaxb/</link>
      <pubDate>Wed, 03 Apr 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/gradle-configuration-to-generate-java-classes-from-wsdl-with-jaxb/</guid>
      <description>In this blog post we will learn the step by step guide to configure gradle build file in order to generate Java classes from a WSDL file. This configure will be useful when you are working on project related to SOAP web service.
   (adsbygoogle = window.adsbygoogle || []).push({});  Let start with an empty Java project with build.gradle file as below group &amp;#39;simplesolution.dev&amp;#39;version &amp;#39;1.0.0&amp;#39;apply plugin: &amp;#39;java&amp;#39;sourceCompatibility = 1.</description>
    </item>
    
    <item>
      <title>How to use BigDecimal in Java by Examples</title>
      <link>https://simplesolution.dev/how-to-use-bigdecimal-in-java-by-examples/</link>
      <pubDate>Sat, 30 Mar 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/how-to-use-bigdecimal-in-java-by-examples/</guid>
      <description>As a Java developer if you are working with financial systems or developing systems that need granularity in your calculation then you should thinking about BigDecimal. BigDecimal is an immutable class, provides in java.math package. It consists of operations for arithmetic, scale manipulation, rounding, comparison, hashing, and format conversion. In this blog post we will learn how to use BigDecimal through a list of examples.
   (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>Top 5 Libraries for Serialization and Deserialization JSON in Java</title>
      <link>https://simplesolution.dev/top-5-libraries-for-serialization-and-deserialization-json-in-java/</link>
      <pubDate>Sat, 30 Mar 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/top-5-libraries-for-serialization-and-deserialization-json-in-java/</guid>
      <description>In this blog post we will go through 5 useful open source libraries to serialization and deserialize JSON data in Java application. For each library we will write a simple code sample to show you how to use the library to convert Java object to a JSON string and vice-versa.
   (adsbygoogle = window.adsbygoogle || []).push({});  Gson Github repository: github.com/google/gson
Adding Gson dependency into your project Using Gradle compile group: &amp;#39;com.</description>
    </item>
    
    <item>
      <title>Writing Excel File Using Apache POI Library in Java</title>
      <link>https://simplesolution.dev/writing-excel-file-using-apache-poi-library-in-java/</link>
      <pubDate>Tue, 26 Mar 2019 20:34:25 +0700</pubDate>
      
      <guid>https://simplesolution.dev/writing-excel-file-using-apache-poi-library-in-java/</guid>
      <description>Apache POI is and open source Java library allow you to read and write Microsoft Documents such as Excel workbook, Word document, Powerpoint presentation.
In this blog post I will show you how to use Apache POI library to writing an Excel file. Throughout this blog post we will implement an Java application to generate the Excel file as the figure below:
   (adsbygoogle = window.adsbygoogle || []).</description>
    </item>
    
  </channel>
</rss>