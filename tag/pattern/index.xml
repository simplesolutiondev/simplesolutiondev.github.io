<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pattern on Simple Solution</title>
    <link>https://simplesolution.dev/tag/pattern/</link>
    <description>Recent content in Pattern on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Jan 2021 11:14:18 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/tag/pattern/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Validate Email Address in Java</title>
      <link>https://simplesolution.dev/java-validate-email-address/</link>
      <pubDate>Sat, 09 Jan 2021 11:14:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-validate-email-address/</guid>
      <description>In this Java core tutorial, we learn how to use the regular expression in Java to check whether an email address is valid or not.
   (adsbygoogle = window.adsbygoogle || []).push({});  Implement EmailUtils class At this step we implement a new class named EmailUtils with a static method isValidEmail() to validate email address String. The method expects an email address String as augment and returns boolean value whether the email address is valid or not.</description>
    </item>
    
    <item>
      <title>Check if a String contains another String in Java</title>
      <link>https://simplesolution.dev/java-check-if-a-string-contains-a-substring/</link>
      <pubDate>Sun, 04 Oct 2020 15:57:35 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-if-a-string-contains-a-substring/</guid>
      <description>Core Java classes provide different solutions that developers can use to check if a String contains another String inside it. In this article we will show you different Java code examples how to check if a String is inside another String using core Java methods such as String.contains(), String.indexOf(), String.lastIndexOf(), String.matches() and java.util.regex.Pattern class.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java code how to use String.contains() In this code example we use String.</description>
    </item>
    
    <item>
      <title>Replace or Remove All Digits of a String in Java using regular expression</title>
      <link>https://simplesolution.dev/java-replace-or-remove-all-digits-of-a-string-in-using-regular-expression/</link>
      <pubDate>Sun, 04 Oct 2020 13:47:34 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-replace-or-remove-all-digits-of-a-string-in-using-regular-expression/</guid>
      <description>In this article we are going to learn how to use core Java classes to remove all numeric characters from a String or replace numeric characters with other characters. We will show you different Java code examples how to use String.replaceAll() method and java.util.regex.Pattern class.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java code example using regex &amp;ldquo;[0-9]&amp;rdquo; with String.replaceAll() method
public class RemoveReplaceDigitsExample1 { public static void main(String[] args) { String testString = &amp;#34;Your OTP (one time password) is 112233&amp;#34;; // Remove all numeric characters  String removedDigitsString = testString.</description>
    </item>
    
    <item>
      <title>Extract Digits from a String in Java using regular expression</title>
      <link>https://simplesolution.dev/java-extract-digits-from-a-string-using-regular-expression/</link>
      <pubDate>Sat, 03 Oct 2020 22:17:59 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-extract-digits-from-a-string-using-regular-expression/</guid>
      <description>In this post we show you how to use regular expressions to remove all non-digits characters of a String and return the number only String in Java application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Following Java example code use String.replaceAll() method with regex &amp;ldquo;[^0-9]&amp;rdquo; to replace non-digits characters in a String with empty String.
public class ExtractDigitsFromStringExample1 { public static void main(String[] args) { String testString = &amp;#34;Java was released in 1995&amp;#34;; String numberOnlyString = testString.</description>
    </item>
    
  </channel>
</rss>