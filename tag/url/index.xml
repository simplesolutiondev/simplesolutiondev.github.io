<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Url on Simple Solution</title>
    <link>https://simplesolution.dev/tag/url/</link>
    <description>Recent content in Url on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 May 2021 23:54:01 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/tag/url/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Copy Content from URL to File in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-copy-content-from-url-to-file-using-apache-commons-io/</link>
      <pubDate>Tue, 25 May 2021 23:54:01 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-copy-content-from-url-to-file-using-apache-commons-io/</guid>
      <description>In this Java tutorial we show you how to download and copy contents from a given URL into a File using the FileUtils class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.</description>
    </item>
    
    <item>
      <title>Read Content from URL into String in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-read-content-from-url-into-string-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 23:05:44 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-content-from-url-into-string-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to get the content of an URL into a String object using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Read Content from URL into Byte Array in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-read-content-from-url-into-byte-array-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 22:59:02 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-content-from-url-into-byte-array-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to get the content of an URL into a byte array using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Get the URL of Classpath Resource using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-get-the-url-of-classpath-resource-using-apache-commons-io/</link>
      <pubDate>Sun, 23 May 2021 22:57:34 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-the-url-of-classpath-resource-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to get the URL of a classpath resource using the IOUtils class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Read and Parse CSV Content from an URL in Java using Apache Commons CSV</title>
      <link>https://simplesolution.dev/java-read-and-parse-csv-file-from-url-using-apache-commons-csv/</link>
      <pubDate>Wed, 16 Dec 2020 22:41:39 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-and-parse-csv-file-from-url-using-apache-commons-csv/</guid>
      <description>In this tutorial, we are going to show how to read and parse CSV content from an URL using Apache Commons CSV library.
Add Apache Commons CSV library to your Java project To use Apache Commons CSV Java library in the Gradle build project, add the following dependency into the build.gradle file. compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-csv&amp;#39;, version: &amp;#39;1.8&amp;#39;
To use Apache Commons CSV Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
  </channel>
</rss>