<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gsonbuilder on Simple Solution</title>
    <link>https://simplesolution.dev/tag/gsonbuilder/</link>
    <description>Recent content in Gsonbuilder on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Jun 2021 21:11:18 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/tag/gsonbuilder/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generate Pretty Print JSON String in Java using Gson</title>
      <link>https://simplesolution.dev/java-generate-pretty-print-json-string-using-gson/</link>
      <pubDate>Fri, 25 Jun 2021 21:11:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-generate-pretty-print-json-string-using-gson/</guid>
      <description>In this Java Gson tutorial we learn how to use the Gson library to generate a readable pretty print JSON String from a Java object. Via Java detail Java example we will show you how to use the GsonBuilder.setPrettyPrinting() method to configure Gson to output JSON String that fits in a page for pretty printing.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Gson to the Java project To use the Gson library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
  </channel>
</rss>