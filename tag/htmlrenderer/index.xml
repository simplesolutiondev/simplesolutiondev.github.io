<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Htmlrenderer on Simple Solution</title>
    <link>https://simplesolution.dev/tag/htmlrenderer/</link>
    <description>Recent content in Htmlrenderer on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Jun 2021 22:23:22 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/tag/htmlrenderer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Parse Markdown to HTML with Image Attributes in Java using CommonMark Image Attributes Extension</title>
      <link>https://simplesolution.dev/java-parse-markdown-to-html-with-image-attributes-using-commonmark-image-attributes-extension/</link>
      <pubDate>Tue, 15 Jun 2021 22:23:22 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-parse-markdown-to-html-with-image-attributes-using-commonmark-image-attributes-extension/</guid>
      <description>In this Java tutorial we learn how to convert a given markdown string including images attributes into HTML string using the CommonMark library and the CommonMark Image Attributes Extension library.
How to add CommonMark and CommonMark Image Attributes Extension libraries to the Java project To use the Java CommonMark and CommonMark Image Attributes Extension libraries in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Parse Markdown to HTML with YAML metadata in Java using CommonMark YAML Front Matter Extension</title>
      <link>https://simplesolution.dev/java-parse-markdown-to-html-with-yaml-metadata-using-commonmark-yaml-front-matter-extension/</link>
      <pubDate>Tue, 15 Jun 2021 22:03:38 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-parse-markdown-to-html-with-yaml-metadata-using-commonmark-yaml-front-matter-extension/</guid>
      <description>In this Java tutorial we learn how to convert a markdown string which includes a YAML metadata header to HTML string using the CommonMark library and the CommonMark YAML Front Matter Extension library.
How to add CommonMark and CommonMark YAML Front Matter Extension libraries to the Java project To use the Java CommonMark and CommonMark YAML Front Matter Extension libraries in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Parse Markdown to HTML with Underlining text in Java using CommonMark Ins Extension</title>
      <link>https://simplesolution.dev/java-parse-markdown-to-html-with-underlining-text-using-commonmark-ins-extension/</link>
      <pubDate>Tue, 15 Jun 2021 20:01:53 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-parse-markdown-to-html-with-underlining-text-using-commonmark-ins-extension/</guid>
      <description>In this Java tutorial we learn how to convert markdown string into HTML string which enables underlining of text by enclosing it in ++ syntax using the CommonMark library and the CommonMark Ins Extension library.
How to add CommonMark and CommonMark Ins Extension libraries to the Java project To use the Java CommonMark and CommonMark Ins Extension libraries in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Parse Markdown to HTML with Auto Generate IDs for Headings in Java with CommonMark Heading Anchor Extension</title>
      <link>https://simplesolution.dev/java-parse-markdown-to-html-with-auto-generate-ids-for-headings-with-commonmark-heading-anchor-extension/</link>
      <pubDate>Tue, 15 Jun 2021 19:42:37 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-parse-markdown-to-html-with-auto-generate-ids-for-headings-with-commonmark-heading-anchor-extension/</guid>
      <description>In this Java tutorial we learn how to convert Markdown string into HTML string with ability to auto generate the ID for headings HTML tabs by using the CommonMark Java library and the CommonMark Heading Anchor Extension library.
How to add CommonMark and Heading Anchor Extension libraries to the Java project To use the Java CommonMark and CommonMark Heading Anchor Extension libraries in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Parse Markdown Strikethrough to HTML in Java with CommonMark Strikethrough Extension</title>
      <link>https://simplesolution.dev/java-parse-markdown-strikethrough-to-html-with-commonmark-strikethrough-extension/</link>
      <pubDate>Tue, 15 Jun 2021 08:18:44 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-parse-markdown-strikethrough-to-html-with-commonmark-strikethrough-extension/</guid>
      <description>In this Java tutorial we learn how to convert a markdown string with GFM strikethrough using ~~ (GitHub Flavored Markdown) into HTML string using the CommonMark library and CommonMark Strikethrough Extension library.
How to add CommonMark and CommonMark Strikethrough Extension libraries to the Java project To use the Java CommonMark and CommonMark Strikethrough Extension libraries in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Parse Markdown URLs and email addresses to HTML links in Java with CommonMark Autolink Extension</title>
      <link>https://simplesolution.dev/java-parse-markdown-urls-and-email-addresses-to-html-links-with-commonmark-autolink-extension/</link>
      <pubDate>Mon, 14 Jun 2021 23:29:50 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-parse-markdown-urls-and-email-addresses-to-html-links-with-commonmark-autolink-extension/</guid>
      <description>In this Java tutorial we learn how to convert a markdown string into HTML string with automatically turning plain URLs and email addresses into HTML links using the CommonMark Java library and CommonMark Autolink Extensions library.
How to add CommonMark and CommonMark Autolink Extension libraries to the Java project To use the Java CommonMark and CommonMark Autolink Extension libraries in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Parse Markdown Tables to HTML in Java with CommonMark GFM Tables Extension</title>
      <link>https://simplesolution.dev/java-parse-markdown-tables-to-html-in-java-with-commonmark-gfm-tables-extension/</link>
      <pubDate>Mon, 14 Jun 2021 22:45:30 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-parse-markdown-tables-to-html-in-java-with-commonmark-gfm-tables-extension/</guid>
      <description>In this Java tutorial we learn how to parse markdown string with GFM tables using &amp;ldquo;|&amp;rdquo; pipes (GitHub Flavored Markdown) to HTML string using the CommonMark and CommonMark GFM Tables Extension libraries.
How to add CommonMark and CommonMark GFM Tables Extension libraries to the Java project To use the Java CommonMark and CommonMark GFM Tables Extension libraries in the Gradle build project, add the following dependency into the build.gradle file.</description>
    </item>
    
    <item>
      <title>Java Parse Markdown to HTML using CommonMark</title>
      <link>https://simplesolution.dev/java-parse-markdown-to-html-using-commonmark/</link>
      <pubDate>Sun, 13 Jun 2021 15:26:06 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-parse-markdown-to-html-using-commonmark/</guid>
      <description>In this Java tutorial we learn how to convert a markdown string into HTML string using the CommonMark Java library.
How to add CommonMark library to the Java project To use the CommonMark Java library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.commonmark:commonmark:0.17.2&amp;#39; To use the CommonMark Java library in the Maven build project, add the following dependency into the pom.xml file.</description>
    </item>
    
    <item>
      <title>Spring Boot Convert Markdown to HTML using CommonMark</title>
      <link>https://simplesolution.dev/java-spring-boot-convert-markdown-to-html-using-commonmark/</link>
      <pubDate>Wed, 09 Jun 2021 00:52:11 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-spring-boot-convert-markdown-to-html-using-commonmark/</guid>
      <description>Introduction In this Spring Boot tutorial we learn step by step how to implement a Spring Boot web application to receive input markdown value from the user and convert it to HTML by using Spring Boot Web, Thymeleaf and commonmark-java library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot Web Project Open Spring Tool Suite IDE, select menu File &amp;gt; New &amp;gt; Spring Starter Project.</description>
    </item>
    
  </channel>
</rss>