<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>String on Simple Solution</title>
    <link>https://simplesolution.dev/tag/string/</link>
    <description>Recent content in String on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Oct 2020 23:26:48 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/tag/string/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Escape or Unescape String for CSV column data in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-escape-unescape-string-for-csv-column-data/</link>
      <pubDate>Thu, 08 Oct 2020 23:26:48 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-escape-unescape-string-for-csv-column-data/</guid>
      <description>Introduction In this post we are going to learn how to use StringEscapeUtils class in Apache Commons Text library to escape a String for CSV file format. If the input String value contains a comma, newline or double quote, then the output String value is returned enclosed in double quotes.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Convert words in a String into camelCase in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-convert-words-in-a-string-into-camel-case/</link>
      <pubDate>Thu, 08 Oct 2020 22:31:54 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-words-in-a-string-into-camel-case/</guid>
      <description>Introduction In this article we are going to explore Apache Commons Text library by using CaseUtils utility class to convert a String of separated words into a camelCase String.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-text&amp;#39;, version: &amp;#39;1.9&amp;#39; Or add the following dependency XML tag to pom.</description>
    </item>
    
    <item>
      <title>Substitute a String in Java by replace variables map to Template String using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-substitute-a-string-in-java-by-replace-variables-map-to-template-string/</link>
      <pubDate>Wed, 07 Oct 2020 23:38:07 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-substitute-a-string-in-java-by-replace-variables-map-to-template-string/</guid>
      <description>Introduction In this post we are going to learn how to substitute a String in Java which replaces variables into placeholders in a template String. To do this task we will use the Apache Commons Text library with support of StringSubstitutor class. Via different Java example code we will learn how to apply StringSubstitutor in different scenarios in your Java applications.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Uncapitalize first character of all words in a String in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-uncapitalize-first-character-of-all-words-in-a-string/</link>
      <pubDate>Wed, 07 Oct 2020 20:04:14 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-uncapitalize-first-character-of-all-words-in-a-string/</guid>
      <description>Introduction In this article we will explore the WordUtils.uncapitalize() method of Apache Commons Text library to uncapitalize a String. With Java code example we will learn how to use the WordUtils.uncapitalize() method to convert the first character of all words in a String to lowercase character.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Swap Lowercase and Uppercase of a String in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-swap-lowercase-and-uppercase-of-a-string/</link>
      <pubDate>Tue, 06 Oct 2020 23:56:16 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-swap-lowercase-and-uppercase-of-a-string/</guid>
      <description>Introduction In this article we are going to learn how to swap the case of a String in Java application. We provide a Java code example to show how to use WordUtils.swapCase() method of Apache Commons Text library to swap the case of each character of a given String.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Java extracts initial characters from each word in a String using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-extracts-initial-characters-from-each-word-in-a-string/</link>
      <pubDate>Tue, 06 Oct 2020 23:20:52 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-extracts-initial-characters-from-each-word-in-a-string/</guid>
      <description>Introduction In this post we learn how to use WordUtils class of Apache Commons Text library to extract initial characters from all words of a String in Java. We will show the Java code example that uses WordUtils.initials() method to extract initial letters of people names.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Java Checks if a String contains all words in array using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-checks-if-a-string-contains-all-words-in-array/</link>
      <pubDate>Tue, 06 Oct 2020 22:41:54 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-checks-if-a-string-contains-all-words-in-array/</guid>
      <description>Introduction In this article we show how to check if a String contains all words in an array in Java. By using WordUtils utility class of Apache Commons Text library you can check if the String contains all words in the given array using containsAllWords() method.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Wrap a line of text into multiple lines in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-wrap-a-line-of-text-into-multiple-lines/</link>
      <pubDate>Tue, 06 Oct 2020 20:34:43 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-wrap-a-line-of-text-into-multiple-lines/</guid>
      <description>Introduction In this post we learn how to wrap a String in Java using WordUtils utility class of Apache Commons Text library. By using WordUtils.wrap() method we can break a long line of text into multiple lines with a given input text and the length. The output String will be wrapped words and separated by system line separator character or by your custom provided separator.
   (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>Generate Random String in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-generate-random-string-with-random-string-generator/</link>
      <pubDate>Tue, 06 Oct 2020 00:04:09 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-generate-random-string-with-random-string-generator/</guid>
      <description>Introduction In this article we show how to generate random String values in Java using the RandomStringGenerator class of Apache Commons Text library. We provide multiple Java code examples with different settings to generate different kinds of data that may be useful for your daily programming scenarios.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Capitalize First Letter of each Word of String in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-capitalize-first-letter-of-each-word-of-string/</link>
      <pubDate>Mon, 05 Oct 2020 22:03:37 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-capitalize-first-letter-of-each-word-of-string/</guid>
      <description>Introduction In this article we show how to use WordUtils utility class of Apache Commons Text library to capitalize the first character of each word in a Java String. We will provide Java code examples to show how to use capitalize() and capitalizeFully() methods of the libraryâ€™s WordUtils utility class.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Capitalize First Letter of a String in Java using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-capitalize-first-letter-of-string/</link>
      <pubDate>Mon, 05 Oct 2020 21:09:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-capitalize-first-letter-of-string/</guid>
      <description>Introduction In this article we show how to use StringUtils of Apache Commons Lang library to capitalize the first character of a Java String by using StringUtils.capitalize() utility method.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-lang3&amp;#39;, version: &amp;#39;3.11&amp;#39; Or add the following dependency XML tag to pom.</description>
    </item>
    
    <item>
      <title>Abbreviates a String using ellipses in Java using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-abbreviates-string-using-ellipses/</link>
      <pubDate>Sun, 04 Oct 2020 23:50:42 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-abbreviates-string-using-ellipses/</guid>
      <description>Introduction In this post we show how to use Apache Commons Lang library to abbreviate a String using ellipses. We provide multiple Java code examples on how to use StringUtils.abbreviate() utility method to achieve our goal.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Check if a String is a valid numeric value in Java using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-check-if-string-is-valid-numeric-value/</link>
      <pubDate>Sun, 04 Oct 2020 23:07:43 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-if-string-is-valid-numeric-value/</guid>
      <description>Introduction In this article we show you how to use different utility classes in Apache Commons Lang library to check if a String is a valid number in Java. We provide different working code examples how to use methods such as NumberUtils.isCreatable(), NumberUtils.isDigits() or StringUtils.isNumeric().
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Check if a String contains another String in Java</title>
      <link>https://simplesolution.dev/java-check-if-a-string-contains-a-substring/</link>
      <pubDate>Sun, 04 Oct 2020 15:57:35 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-if-a-string-contains-a-substring/</guid>
      <description>Core Java classes provide different solutions that developers can use to check if a String contains another String inside it. In this article we will show you different Java code examples how to check if a String is inside another String using core Java methods such as String.contains(), String.indexOf(), String.lastIndexOf(), String.matches() and java.util.regex.Pattern class.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java code how to use String.contains() In this code example we use String.</description>
    </item>
    
    <item>
      <title>Replace or Remove All Digits of a String in Java using regular expression</title>
      <link>https://simplesolution.dev/java-replace-or-remove-all-digits-of-a-string-in-using-regular-expression/</link>
      <pubDate>Sun, 04 Oct 2020 13:47:34 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-replace-or-remove-all-digits-of-a-string-in-using-regular-expression/</guid>
      <description>In this article we are going to learn how to use core Java classes to remove all numeric characters from a String or replace numeric characters with other characters. We will show you different Java code examples how to use String.replaceAll() method and java.util.regex.Pattern class.
   (adsbygoogle = window.adsbygoogle || []).push({});  Java code example using regex &amp;ldquo;[0-9]&amp;rdquo; with String.replaceAll() method
public class RemoveReplaceDigitsExample1 { public static void main(String[] args) { String testString = &amp;#34;Your OTP (one time password) is 112233&amp;#34;; // Remove all numeric characters  String removedDigitsString = testString.</description>
    </item>
    
    <item>
      <title>Extract Digits from a String in Java using regular expression</title>
      <link>https://simplesolution.dev/java-extract-digits-from-a-string-using-regular-expression/</link>
      <pubDate>Sat, 03 Oct 2020 22:17:59 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-extract-digits-from-a-string-using-regular-expression/</guid>
      <description>In this post we show you how to use regular expressions to remove all non-digits characters of a String and return the number only String in Java application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Following Java example code use String.replaceAll() method with regex &amp;ldquo;[^0-9]&amp;rdquo; to replace non-digits characters in a String with empty String.
public class ExtractDigitsFromStringExample1 { public static void main(String[] args) { String testString = &amp;#34;Java was released in 1995&amp;#34;; String numberOnlyString = testString.</description>
    </item>
    
    <item>
      <title>Java Find Difference between two Strings using StringUtils Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-find-difference-between-two-strings-using-stringutils-apache-commons-lang/</link>
      <pubDate>Fri, 02 Oct 2020 22:57:11 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-find-difference-between-two-strings-using-stringutils-apache-commons-lang/</guid>
      <description>Introduction In this post we will show you Java example code how to find the difference between two Strings using StringUtils utility class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-lang3&amp;#39;, version: &amp;#39;3.11&amp;#39; Or add the following dependency XML tag to pom.</description>
    </item>
    
    <item>
      <title>Java check String is empty or blank or contains text using StringUtils Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-check-string-is-empty-blank-contains-text-stringutils-apache-commons-lang/</link>
      <pubDate>Fri, 02 Oct 2020 00:32:50 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-string-is-empty-blank-contains-text-stringutils-apache-commons-lang/</guid>
      <description>Introduction In this post we are going to learn how to use StringUtils utility class of Apache Commons Lang library in Java application to check if a string contains text, an empty string or a blank string.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Google Guava in Java to join String with Joiner</title>
      <link>https://simplesolution.dev/java-code-examples/guava-java-join-string-with-joiner/</link>
      <pubDate>Fri, 03 May 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/guava-java-join-string-with-joiner/</guid>
      <description>Java Code Examples for using com.google.common.base.Joiner class
   (adsbygoogle = window.adsbygoogle || []).push({});  Example for using Joiner that skip joining null values package simplesolution.dev;import com.google.common.base.Joiner;public class GuavaJoinerExample1 {public static void main(String... args) {final Joiner joiner = Joiner.on(&amp;#34; and &amp;#34;).skipNulls();String result = joiner.join(&amp;#34;Java&amp;#34;, &amp;#34;Python&amp;#34;, null, &amp;#34;Go&amp;#34;);System.out.println(result);}} Output
Java and Python and Go     (adsbygoogle = window.adsbygoogle || []).</description>
    </item>
    
  </channel>
</rss>