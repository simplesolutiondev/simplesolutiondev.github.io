<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apache Commons Lang on Simple Solution</title>
    <link>https://simplesolution.dev/tag/apache-commons-lang/</link>
    <description>Recent content in Apache Commons Lang on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 31 May 2021 01:17:00 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/tag/apache-commons-lang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java Squeeze Repetition Characters in a String using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-squeeze-repetition-characters-in-string-using-apache-commons-lang/</link>
      <pubDate>Mon, 31 May 2021 01:17:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-squeeze-repetition-characters-in-string-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to squeeze any repetition characters in a given String using the CharSetUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.apache.commons:commons-lang3:3.12.0&amp;#39; To use the Apache Commons Lang 3 library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Keep Only Characters Present in a String using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-keep-only-characters-present-in-string-using-apache-commons-lang/</link>
      <pubDate>Mon, 31 May 2021 01:14:51 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-keep-only-characters-present-in-string-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to populate a String which keeps only given characters present in the String using the CharSetUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Java Delete Characters in a String using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-delete-characters-in-string-using-apache-commons-lang/</link>
      <pubDate>Mon, 31 May 2021 01:13:01 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-delete-characters-in-string-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to delete any of the characters present in a given String using CharSetUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Java Count Characters present in a String using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-count-characters-present-in-string-using-apache-commons-lang/</link>
      <pubDate>Mon, 31 May 2021 01:10:35 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-count-characters-present-in-string-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to count the number of characters present in a given String using the CharSetUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.</description>
    </item>
    
    <item>
      <title>Java Check a String Contains Any Characters using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-check-string-contains-any-characters-using-apache-commons-lang/</link>
      <pubDate>Mon, 31 May 2021 01:08:09 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-string-contains-any-characters-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to check a String to identify whether it contains any of given characters using CharSetUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.</description>
    </item>
    
    <item>
      <title>Java Get Fully Qualified Name or Path of Classpath Resource using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-get-fully-qualified-name-or-path-of-classpath-resource-using-apache-commons-lang/</link>
      <pubDate>Mon, 31 May 2021 01:04:35 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-fully-qualified-name-or-path-of-classpath-resource-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to populate the fully qualified name or path of classpath resources using the ClassPathUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.</description>
    </item>
    
    <item>
      <title>Java Insert Element into an Array at Index using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-insert-element-into-an-array-at-index-using-apache-commons-lang/</link>
      <pubDate>Sun, 30 May 2021 17:38:50 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-insert-element-into-an-array-at-index-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to insert an element into an array at a given index using ArrayUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Java Convert Wrapper Class Array to Primitive Array using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-convert-wrapper-class-array-to-primitive-array-using-apache-commons-lang/</link>
      <pubDate>Sun, 30 May 2021 17:30:46 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-wrapper-class-array-to-primitive-array-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to convert an array of wrapper type objects into an array of primitive values using the ArrayUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Java Convert Primitive Array to Wrapper Class Array using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-convert-primitive-array-to-wrapper-class-array-using-apache-commons-lang/</link>
      <pubDate>Sun, 30 May 2021 17:25:59 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-primitive-array-to-wrapper-class-array-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to convert an array of primitive values into an array of wrapper objects using the ArrayUtils of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.</description>
    </item>
    
    <item>
      <title>Java Convert Array to Map using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-convert-array-to-map-using-apache-commons-lang/</link>
      <pubDate>Sun, 30 May 2021 17:23:53 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-array-to-map-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to convert a given array into a Map object using ArrayUtils of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.apache.commons:commons-lang3:3.12.0&amp;#39; To use the Apache Commons Lang 3 library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Check an Array Index is valid using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-check-array-index-is-valid-using-apache-commons-lang/</link>
      <pubDate>Sun, 30 May 2021 17:21:36 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-array-index-is-valid-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to check if a given index value is valid or not to access a given array using ArrayUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Java Convert Array of Objects to Array of Strings using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-convert-array-of-objects-to-array-of-strings-using-apache-commons-lang/</link>
      <pubDate>Sat, 29 May 2021 23:07:33 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-array-of-objects-to-array-of-strings-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to convert an array of object values into an array of String values using the ArrayUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Java Check Array contains a Value using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-check-array-contains-value-using-apache-commons-lang/</link>
      <pubDate>Sat, 29 May 2021 22:13:53 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-array-contains-value-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to check if an array contains a given value using the ArrayUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.apache.commons:commons-lang3:3.12.0&amp;#39; To use the Apache Commons Lang 3 library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Add Element at the beginning of Array using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-add-element-at-the-beginning-of-array-using-apache-commons-lang/</link>
      <pubDate>Sat, 29 May 2021 13:59:17 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-add-element-at-the-beginning-of-array-using-apache-commons-lang/</guid>
      <description>This Java tutorial shows you how to add an element at the beginning of an array by returning a new array using the ArrayUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Java Add Element at the end of Array using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-add-element-at-the-end-of-array-using-apache-commons-lang/</link>
      <pubDate>Sat, 29 May 2021 13:52:46 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-add-element-at-the-end-of-array-using-apache-commons-lang/</guid>
      <description>This Java tutorial shows you how at the end of the new array and returning new array using the ArrayUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Java Add Two Arrays using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-add-two-arrays-using-apache-commons-lang/</link>
      <pubDate>Sat, 29 May 2021 13:46:30 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-add-two-arrays-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to add two arrays to return a new array using the ArrayUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.apache.commons:commons-lang3:3.12.0&amp;#39; To use the Apache Commons Lang 3 library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Get Languages by Country Code using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-get-languages-by-country-code-using-apache-commons-lang/</link>
      <pubDate>Sat, 29 May 2021 00:48:07 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-languages-by-country-code-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to get the list of languages supported for a specific country using the LocaleUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.</description>
    </item>
    
    <item>
      <title>Java Convert String to Locale using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-convert-string-to-locale-using-apache-commons-lang/</link>
      <pubDate>Sat, 29 May 2021 00:45:42 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-string-to-locale-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we show you how to convert a String value into a Locale object using the LocaleUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Java Check Locale is available using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-check-locale-is-available-using-apache-commons-lang/</link>
      <pubDate>Sat, 29 May 2021 00:43:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-locale-is-available-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to use the LocaleUtils class of Apache Commons Lang library to check if a given Locale object is existing on available installed locales.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Java Get Countries by Language Code using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-get-countries-by-language-code-using-apache-commons-lang/</link>
      <pubDate>Sat, 29 May 2021 00:40:52 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-countries-by-language-code-using-apache-commons-lang/</guid>
      <description>In this Java tutorial we learn how to use the LocaleUtils class of the Apache Commons Lang library to get a list of countries that support a given language.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Java Get All Locales using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-get-all-locales-using-apache-commons-lang/</link>
      <pubDate>Sat, 29 May 2021 00:35:40 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-all-locales-using-apache-commons-lang/</guid>
      <description>This Java tutorial shows you how to use the LocaleUtils class in Apache Commons Lang library to get the list of all installed locales.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.apache.commons:commons-lang3:3.12.0&amp;#39; To use the Apache Commons Lang 3 library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Get All Superclasses of a Class using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-get-all-superclasses-of-class-using-apache-commons-lang/</link>
      <pubDate>Fri, 28 May 2021 01:38:01 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-all-superclasses-of-class-using-apache-commons-lang/</guid>
      <description>This Java tutorial shows you how to get a list of all superclasses of a given Class object in Java using Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.apache.commons:commons-lang3:3.12.0&amp;#39; To use the Apache Commons Lang 3 library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Get All Interfaces of a Class using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-get-all-interfaces-of-class-using-apache-commons-lang/</link>
      <pubDate>Fri, 28 May 2021 01:35:47 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-all-interfaces-of-class-using-apache-commons-lang/</guid>
      <description>This Java tutorial shows you how to get a list of all interfaces that are implemented by a given class and its superclasses using the ClassUtils of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Java Convert Class Names to Class Objects using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-convert-class-names-to-class-objects-using-apache-commons-lang/</link>
      <pubDate>Fri, 28 May 2021 01:33:28 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-class-names-to-class-objects-using-apache-commons-lang/</guid>
      <description>This Java tutorial shows you how to use the ClassUtils utility class of Apache Commons Lang library to convert a list of class names into a list of Class objects.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Java Convert Class Objects to Class Names using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-convert-class-objects-to-class-names-using-apache-commons-lang/</link>
      <pubDate>Fri, 28 May 2021 01:30:54 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-class-objects-to-class-names-using-apache-commons-lang/</guid>
      <description>This Java tutorial shows you how to use the ClassUtils utility class of Apache Commons Lang library to convert a list of Class objects into a list of class names.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Java Get Simple Name of Class in Null-safe using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-get-simple-name-of-class-in-null-safe-using-apache-commons-lang/</link>
      <pubDate>Fri, 28 May 2021 01:27:57 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-simple-name-of-class-in-null-safe-using-apache-commons-lang/</guid>
      <description>This Java tutorial shows you how to use the ClassUtils class of Apache Commons Lang library to get the simple name of a Java class in a null-safe way.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Java Get Short Class Name of a Class using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-get-short-class-name-of-class-using-apache-commons-lang/</link>
      <pubDate>Fri, 28 May 2021 01:24:38 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-short-class-name-of-class-using-apache-commons-lang/</guid>
      <description>This Java tutorial shows you how to get the short class name of a Java class which returns the class name without package name using the ClassUtils class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Java Get Package Name of a Class using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-get-package-name-of-class-using-apache-commons-lang/</link>
      <pubDate>Fri, 28 May 2021 01:21:13 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-package-name-of-class-using-apache-commons-lang/</guid>
      <description>This Java tutorial shows you how to get the package name of a Java class using the ClassUtils utility class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.apache.commons:commons-lang3:3.12.0&amp;#39; To use the Apache Commons Lang 3 library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Get Name of Class in Null-safe using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-get-name-of-class-in-null-safe-using-apache-commons-lang/</link>
      <pubDate>Fri, 28 May 2021 01:17:45 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-name-of-class-in-null-safe-using-apache-commons-lang/</guid>
      <description>This Java tutorial shows you how to use the ClassUtils class of Apache Commons Lang library to get the name of a Java class in a null-safe way.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.</description>
    </item>
    
    <item>
      <title>Java Get Abbreviated Name of a Class using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-get-abbreviated-name-of-class-using-apache-commons-lang/</link>
      <pubDate>Fri, 28 May 2021 01:11:19 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-abbreviated-name-of-class-using-apache-commons-lang/</guid>
      <description>This Java tutorial shows you how to use the ClassUtils class of Apache Commons Lang library to get the abbreviated name of a Java class.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Lang 3 library to your Java project To use the Apache Commons Lang 3 library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;org.apache.commons:commons-lang3:3.12.0&amp;#39; To use the Apache Commons Lang 3 library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Capitalize First Letter of a String in Java using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-capitalize-first-letter-of-string/</link>
      <pubDate>Mon, 05 Oct 2020 21:09:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-capitalize-first-letter-of-string/</guid>
      <description>Introduction In this article we show how to use StringUtils of Apache Commons Lang library to capitalize the first character of a Java String by using StringUtils.capitalize() utility method.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-lang3&amp;#39;, version: &amp;#39;3.11&amp;#39; Or add the following dependency XML tag to pom.</description>
    </item>
    
    <item>
      <title>Abbreviates a String using ellipses in Java using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-abbreviates-string-using-ellipses/</link>
      <pubDate>Sun, 04 Oct 2020 23:50:42 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-abbreviates-string-using-ellipses/</guid>
      <description>Introduction In this post we show how to use Apache Commons Lang library to abbreviate a String using ellipses. We provide multiple Java code examples on how to use StringUtils.abbreviate() utility method to achieve our goal.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Check if a String is a valid numeric value in Java using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-check-if-string-is-valid-numeric-value/</link>
      <pubDate>Sun, 04 Oct 2020 23:07:43 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-if-string-is-valid-numeric-value/</guid>
      <description>Introduction In this article we show you how to use different utility classes in Apache Commons Lang library to check if a String is a valid number in Java. We provide different working code examples how to use methods such as NumberUtils.isCreatable(), NumberUtils.isDigits() or StringUtils.isNumeric().
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Java Find Difference between two Strings using StringUtils Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-find-difference-between-two-strings-using-stringutils-apache-commons-lang/</link>
      <pubDate>Fri, 02 Oct 2020 22:57:11 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-find-difference-between-two-strings-using-stringutils-apache-commons-lang/</guid>
      <description>Introduction In this post we will show you Java example code how to find the difference between two Strings using StringUtils utility class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-lang3&amp;#39;, version: &amp;#39;3.11&amp;#39; Or add the following dependency XML tag to pom.</description>
    </item>
    
    <item>
      <title>Java check String is empty or blank or contains text using StringUtils Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-check-string-is-empty-blank-contains-text-stringutils-apache-commons-lang/</link>
      <pubDate>Fri, 02 Oct 2020 00:32:50 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-string-is-empty-blank-contains-text-stringutils-apache-commons-lang/</guid>
      <description>Introduction In this post we are going to learn how to use StringUtils utility class of Apache Commons Lang library in Java application to check if a string contains text, an empty string or a blank string.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.</description>
    </item>
    
  </channel>
</rss>