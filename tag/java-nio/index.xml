<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java Nio on Simple Solution</title>
    <link>https://simplesolution.dev/tag/java-nio/</link>
    <description>Recent content in Java Nio on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Oct 2020 22:59:16 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/tag/java-nio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Write Text to a File in Java</title>
      <link>https://simplesolution.dev/java-write-text-file/</link>
      <pubDate>Wed, 21 Oct 2020 22:59:16 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-write-text-file/</guid>
      <description>Introduction In this tutorial we are going to learn how to write text to a text file in a Java application. By different Java example programs we will explore different approaches to write a String into a text file using Java core classes.
   (adsbygoogle = window.adsbygoogle || []).push({});  Using Java NIO Files.write() static method Following program to create a new file named test.txt and write text using Files.</description>
    </item>
    
    <item>
      <title>Get Absolute File Path of a File in Java</title>
      <link>https://simplesolution.dev/java-get-absolute-file-path/</link>
      <pubDate>Wed, 21 Oct 2020 01:26:45 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-absolute-file-path/</guid>
      <description>Introduction In this post we will explore how to get an absolute path of a file in a Java application and return it as a String value.
   (adsbygoogle = window.adsbygoogle || []).push({});  Using Java NIO Path.toAbsolutePath() method import java.nio.file.Path; import java.nio.file.Paths; public class PathToAbsolutePathExample { public static void main(String... args) { String fileName = &amp;#34;simple-solution-logo.png&amp;#34;; Path path = Paths.get(fileName); Path absolutePath = path.toAbsolutePath(); String absoluteFilePath = absolutePath.</description>
    </item>
    
    <item>
      <title>Get File Size in Java</title>
      <link>https://simplesolution.dev/java-get-file-size/</link>
      <pubDate>Sun, 18 Oct 2020 22:55:19 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-file-size/</guid>
      <description>Introduction In this post we are going to explore how to get file size in bytes, kilobytes, megabytes or gigabytes in different Java versions.
For example we have a file located at D:\SimpleSolution\logo.png as following screenshot.
   (adsbygoogle = window.adsbygoogle || []).push({});  Using NIO Files.size() method with Java version 7 and above import java.io.IOException; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; public class GetFileSizeExample1 { public static void main(String[] args) { try { String fileLocation = &amp;#34;D:\\SimpleSolution\\logo.</description>
    </item>
    
  </channel>
</rss>