<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gradle on Simple Solution, Java, Spring Boot Tutorials</title>
    <link>https://simplesolution.dev/tag/gradle/</link>
    <description>Recent content in Gradle on Simple Solution, Java, Spring Boot Tutorials</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 May 2019 01:00:10 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/tag/gradle/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gradle Creating Executable JAR File</title>
      <link>https://simplesolution.dev/gradle-creating-executable-jar-file/</link>
      <pubDate>Wed, 01 May 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/gradle-creating-executable-jar-file/</guid>
      <description>In this toturial we will show you how to configure Gradle build script to build the JAR file that can be executed by java command. In this article we just build the simple application without dependencies.
   (adsbygoogle = window.adsbygoogle || []).push({});  For example you have created a standard Gradle project as below structure. With the main class GradleCreatingExecutableJarExample as below.
package simplesolution.dev;public class GradleCreatingExecutableJarExample {public static void main(String.</description>
    </item>
    
    <item>
      <title>Gradle Configuration to generate Java classes from WSDL with JAXB</title>
      <link>https://simplesolution.dev/gradle-configuration-to-generate-java-classes-from-wsdl-with-jaxb/</link>
      <pubDate>Wed, 03 Apr 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/gradle-configuration-to-generate-java-classes-from-wsdl-with-jaxb/</guid>
      <description>In this blog post we will learn the step by step guide to configure gradle build file in order to generate Java classes from a WSDL file. This configure will be useful when you are working on project related to SOAP web service.
   (adsbygoogle = window.adsbygoogle || []).push({});  Let start with an empty Java project with build.gradle file as below group &amp;#39;simplesolution.dev&amp;#39;version &amp;#39;1.0.0&amp;#39;apply plugin: &amp;#39;java&amp;#39;sourceCompatibility = 1.</description>
    </item>
    
  </channel>
</rss>