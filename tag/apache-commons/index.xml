<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Apache Commons on Simple Solution</title>
    <link>https://simplesolution.dev/tag/apache-commons/</link>
    <description>Recent content in Apache Commons on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 May 2021 23:56:41 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/tag/apache-commons/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Get Readable File Size from Number of Bytes in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-get-readable-file-size-from-number-of-bytes-using-apache-commons-io/</link>
      <pubDate>Tue, 25 May 2021 23:56:41 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-readable-file-size-from-number-of-bytes-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to use the FileUtils class of Apache Commons IO library to get the human readable file size of a given file size in number of bytes value.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Copy Content from URL to File in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-copy-content-from-url-to-file-using-apache-commons-io/</link>
      <pubDate>Tue, 25 May 2021 23:54:01 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-copy-content-from-url-to-file-using-apache-commons-io/</guid>
      <description>In this Java tutorial we show you how to download and copy contents from a given URL into a File using the FileUtils class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.</description>
    </item>
    
    <item>
      <title>Copy List of Files to Directory in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-copy-list-of-files-to-directory-using-apache-commons-io/</link>
      <pubDate>Tue, 25 May 2021 23:51:48 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-copy-list-of-files-to-directory-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to use the FileUtils class of Apache Commons IO library to copy multiple files to a given directory.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Copy InputStream to File in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-copy-inputstream-to-file-using-apache-commons-io/</link>
      <pubDate>Tue, 25 May 2021 23:48:30 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-copy-inputstream-to-file-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to use the FileUtils utility class of Apache Commons IO library to copy bytes of an InputStream into a destination File.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.</description>
    </item>
    
    <item>
      <title>Copy a File to Directory in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-copy-file-to-directory-using-apache-commons-io/</link>
      <pubDate>Tue, 25 May 2021 23:45:13 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-copy-file-to-directory-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to copy a file to a specified directory using the FileUtils class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Copy a File in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-copy-a-file-using-apache-commons-io/</link>
      <pubDate>Tue, 25 May 2021 23:42:09 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-copy-a-file-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to copy a file to a new location using FileUtils class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Copy Directory to Directory in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-copy-directory-to-directory-using-apache-commons-io/</link>
      <pubDate>Tue, 25 May 2021 23:39:24 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-copy-directory-to-directory-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to copy a whole directory to another directory using the FileUtils class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Compare Contents of Files in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-compare-contents-of-files-using-apache-commons-io/</link>
      <pubDate>Tue, 25 May 2021 23:36:29 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-compare-contents-of-files-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to use the FileUtils class of Apache Commons IO library to compare the contents of two files to determine if they are equal or not equal.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Java Delete All Files and Directories Inside a Directory using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-delete-files-and-directories-inside-directory-using-apache-commons-io/</link>
      <pubDate>Tue, 25 May 2021 23:33:30 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-delete-files-and-directories-inside-directory-using-apache-commons-io/</guid>
      <description>In this Java tutorial we show you how to use the FileUtils class of Apache Commons IO library to delete all files and directories in a given directory.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.</description>
    </item>
    
    <item>
      <title>Compute Checksum of File in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-compute-checksum-of-file-using-apache-commons-io/</link>
      <pubDate>Tue, 25 May 2021 23:27:08 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-compute-checksum-of-file-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to compute the Adler-32 or CRC-32 checksum value of a file using FileUtils class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Convert CharSequence to InputStream in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-convert-charsequence-to-inputstream-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 23:08:21 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-charsequence-to-inputstream-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to use the IOUtils utility class in Apache Commons IO library to convert a CharSequence object to an InputStream object.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Read Content from URL into String in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-read-content-from-url-into-string-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 23:05:44 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-content-from-url-into-string-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to get the content of an URL into a String object using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Read Content from URI into String in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-read-content-from-uri-into-string-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 23:02:45 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-content-from-uri-into-string-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to get the content of an URI into a String object using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Read Content from URL into Byte Array in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-read-content-from-url-into-byte-array-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 22:59:02 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-content-from-url-into-byte-array-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to get the content of an URL into a byte array using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Read Content from URI into Byte Array in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-read-content-from-uri-into-byte-array-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 22:55:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-content-from-uri-into-byte-array-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to get the content of an URI into a byte array using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Convert String to InputStream in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-convert-string-to-inputstream-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 22:52:07 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-string-to-inputstream-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to use the IOUtils utility class in Apache Commons IO library to convert a String object to an InputStream object.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Convert Reader to Char Array in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-convert-reader-to-char-array-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 22:49:28 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-reader-to-char-array-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to read the Reader object as a char array using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Convert Reader to Byte Array in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-convert-reader-to-byte-array-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 22:45:04 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-reader-to-byte-array-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to read the Reader object as a byte array using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Convert Reader to String in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-convert-reader-to-string-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 22:41:43 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-reader-to-string-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to read the Reader object as a String using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Convert InputStream to Char Array in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-convert-inputstream-to-char-array-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 22:38:27 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-inputstream-to-char-array-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to read the InputStream object as a char array using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Convert InputStream to String in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-convert-inputstream-to-string-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 22:34:53 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-inputstream-to-string-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to read the InputStream object as a String using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Convert InputStream to Byte Array in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-convert-inputstream-to-byte-array-using-apache-commons-io/</link>
      <pubDate>Mon, 24 May 2021 22:29:59 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-inputstream-to-byte-array-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to read the InputStream object as a byte array using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Get the URL of Classpath Resource using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-get-the-url-of-classpath-resource-using-apache-commons-io/</link>
      <pubDate>Sun, 23 May 2021 22:57:34 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-the-url-of-classpath-resource-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to get the URL of a classpath resource using the IOUtils class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Read Classpath Resource as String using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-read-classpath-resource-as-string-using-apache-commons-io/</link>
      <pubDate>Sun, 23 May 2021 22:54:13 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-classpath-resource-as-string-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to read a classpath resource into a String using the IOUtils class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Read Classpath Resource as Byte Array using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-read-classpath-resource-as-byte-array-using-apache-commons-io/</link>
      <pubDate>Sun, 23 May 2021 22:50:19 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-classpath-resource-as-byte-array-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to read a classpath resource into a byte array using the IOUtils class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Read List of Strings of Reader using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-read-list-of-strings-reader-using-apache-commons-io/</link>
      <pubDate>Sun, 23 May 2021 22:44:44 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-list-of-strings-reader-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to read a list of Strings of a Reader object by using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Read List of Strings of InputStream using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-read-list-of-strings-inputstream-using-apache-commons-io/</link>
      <pubDate>Sun, 23 May 2021 22:41:36 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-list-of-strings-inputstream-using-apache-commons-io/</guid>
      <description>In this Java tutorial, we learn how to read a list of Strings of an InputStream object by using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Java Read Reader Line by Line with LineIterator using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-read-reader-with-lineiterator-using-apache-commons-io/</link>
      <pubDate>Sun, 23 May 2021 22:38:06 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-reader-with-lineiterator-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to use the IOUtils class in Apache Commons IO library to read an Reader object line by line via LineIterator class.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.</description>
    </item>
    
    <item>
      <title>Java Read InputStream Line by Line with LineIterator using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-read-inputstream-with-lineiterator-using-apache-commons-io/</link>
      <pubDate>Sun, 23 May 2021 22:33:44 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-inputstream-with-lineiterator-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to use the IOUtils class in Apache Commons IO library to read an InputStream object line by line via LineIterator class.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.</description>
    </item>
    
    <item>
      <title>Copy Large File Contents in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-copy-large-file-contents-using-apache-commons-io/</link>
      <pubDate>Sat, 22 May 2021 15:19:30 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-copy-large-file-contents-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to copy large files using the IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Copy Reader to Writer in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-copy-reader-to-writer-using-apache-commons-io/</link>
      <pubDate>Sat, 22 May 2021 15:15:40 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-copy-reader-to-writer-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to copy bytes from a Reader object into Writer object using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Copy Reader to OutputStream in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-copy-reader-to-outputstream-using-apache-commons-io/</link>
      <pubDate>Sat, 22 May 2021 15:12:11 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-copy-reader-to-outputstream-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to copy bytes from a Reader object into OutputStream object using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Copy InputStream to Writer in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-copy-inputstream-to-writer-using-apache-commons-io/</link>
      <pubDate>Sat, 22 May 2021 15:08:13 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-copy-inputstream-to-writer-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to copy bytes from an InputStream object into Writer object using IOUtils utility class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Compare Contents of two Reader in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-compare-reader-using-apache-commons-io/</link>
      <pubDate>Sat, 22 May 2021 15:03:29 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-compare-reader-using-apache-commons-io/</guid>
      <description>In this Java tutorial we show you how to compare the contents of two Reader in Java using the IOUtils class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Compare Contents of two InputStream in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-compare-inputstream-using-apache-commons-io/</link>
      <pubDate>Sat, 22 May 2021 14:57:55 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-compare-inputstream-using-apache-commons-io/</guid>
      <description>In this Java tutorial we show you how to compare the contents of two InputStream in Java using the IOUtils class of Apache Commons IO library.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.8.0&amp;#39; To use the Apache Commons IO library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Convert Writer into BufferedWriter in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-convert-writer-into-bufferedwriter-using-apache-commons-io/</link>
      <pubDate>Fri, 21 May 2021 21:49:23 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-writer-into-bufferedwriter-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to use the IOUtils utility class in Apache Commons IO to convert an Writer object into a BufferedWriter object in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.</description>
    </item>
    
    <item>
      <title>Convert Reader into BufferedReader in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-convert-reader-into-bufferedreader-using-apache-commons-io/</link>
      <pubDate>Fri, 21 May 2021 21:48:23 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-reader-into-bufferedreader-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to use the IOUtils utility class in Apache Commons IO to convert a Reader object into a BufferedReader object in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.</description>
    </item>
    
    <item>
      <title>Convert OutputStream into BufferedOutputStream in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-convert-outputstream-into-bufferedoutputstream-using-apache-commons-io/</link>
      <pubDate>Fri, 21 May 2021 21:47:23 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-outputstream-into-bufferedoutputstream-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to use the IOUtils utility class in Apache Commons IO to convert an OutputStream object into a BufferedOutputStream object in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.</description>
    </item>
    
    <item>
      <title>Convert InputStream into BufferedInputStream in Java using Apache Commons IO</title>
      <link>https://simplesolution.dev/java-convert-inputstream-into-bufferedinputstream-using-apache-commons-io/</link>
      <pubDate>Fri, 21 May 2021 21:46:23 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-inputstream-into-bufferedinputstream-using-apache-commons-io/</guid>
      <description>In this Java tutorial we learn how to use the IOUtils utility class in Apache Commons IO to convert an InputStream object into a BufferedInputStream object in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons IO library to your Java project To use the Apache Commons IO library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-io:commons-io:2.</description>
    </item>
    
    <item>
      <title>Encode and Decode String to Binary Format in Java using Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-encode-decode-binary-string-using-apache-commons-codec/</link>
      <pubDate>Wed, 24 Mar 2021 23:47:03 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-encode-decode-binary-string-using-apache-commons-codec/</guid>
      <description>In this Java tutorial, we learn how to use the BinaryCodec class of Apache Commons Codec library to convert a String into a String of ‘0’ and ‘1’ and decode it in Java programs.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Codec library to your Java project To use the Apache Commons Codec library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Base32 Encoding and Decoding in Java using Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-base32-encoding-decoding-using-apache-commons-codec/</link>
      <pubDate>Wed, 24 Mar 2021 22:47:06 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-base32-encoding-decoding-using-apache-commons-codec/</guid>
      <description>In this Java tutorial, We learn how to use the Base32 class of Apache Commons Codec library to do Base32 encoding and decoding in Java programs.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Apache Commons Codec library to your Java project To use the Apache Commons Codec library in the Gradle build project, add the following dependency into the build.gradle file.
implementation &amp;#39;commons-codec:commons-codec:1.15&amp;#39; To use the Apache Commons Codec library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Extract .zip File in Java using Apache Commons Compress</title>
      <link>https://simplesolution.dev/java-extract-zip-file-using-apache-commons-compress/</link>
      <pubDate>Mon, 11 Jan 2021 01:16:12 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-extract-zip-file-using-apache-commons-compress/</guid>
      <description>In this Java tutorial, we learn how to use the Apache Commons Compress library to extract a .zip file into a directory in the Java program.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Apache Commons Compress library to your Java project To use Apache Commons Compress Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-compress&amp;#39;, version: &amp;#39;1.</description>
    </item>
    
    <item>
      <title>Create .zip File in Java using Apache Commons Compress</title>
      <link>https://simplesolution.dev/java-create-zip-file-using-apache-commons-compress/</link>
      <pubDate>Mon, 11 Jan 2021 01:15:48 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-create-zip-file-using-apache-commons-compress/</guid>
      <description>In this Java tutorial, we learn how to use the Apache Commons Compress library to create a .zip file in the Java program.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Apache Commons Compress library to your Java project To use Apache Commons Compress Java library in the Gradle build project, add the following dependency into the build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-compress&amp;#39;, version: &amp;#39;1.20&amp;#39; To use Apache Commons Compress Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Read and Parse CSV File in Java using Apache Commons CSV</title>
      <link>https://simplesolution.dev/java-read-and-parse-csv-file-using-apache-commons-csv/</link>
      <pubDate>Thu, 17 Dec 2020 00:06:32 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-and-parse-csv-file-using-apache-commons-csv/</guid>
      <description>In this tutorial, we learn how to parse CSV files in a Java application using Apache Commons CSV library. Via different Java code examples we learn how to create the CSV parser from File, InputStream, Path or Reader objects.
Add Apache Commons CSV library to your Java project To use Apache Commons CSV Java library in the Gradle build project, add the following dependency into the build.gradle file. compile group: &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Read and Parse CSV Content from an URL in Java using Apache Commons CSV</title>
      <link>https://simplesolution.dev/java-read-and-parse-csv-file-from-url-using-apache-commons-csv/</link>
      <pubDate>Wed, 16 Dec 2020 22:41:39 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-and-parse-csv-file-from-url-using-apache-commons-csv/</guid>
      <description>In this tutorial, we are going to show how to read and parse CSV content from an URL using Apache Commons CSV library.
Add Apache Commons CSV library to your Java project To use Apache Commons CSV Java library in the Gradle build project, add the following dependency into the build.gradle file. compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-csv&amp;#39;, version: &amp;#39;1.8&amp;#39;
To use Apache Commons CSV Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Read and Parse CSV Content from a String in Java using Apache Commons CSV</title>
      <link>https://simplesolution.dev/java-read-and-parse-csv-string-using-apache-commons-csv/</link>
      <pubDate>Wed, 16 Dec 2020 21:01:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-read-and-parse-csv-string-using-apache-commons-csv/</guid>
      <description>In this tutorial, we are going to learn how to read and parse CSV content from a Java String using Apache Commons CSV library.
Add Apache Commons CSV library to your Java project To use Apache Commons CSV Java library in the Gradle build project, add the following dependency into the build.gradle file. compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-csv&amp;#39;, version: &amp;#39;1.8&amp;#39;
To use Apache Commons CSV Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Write and Read CSV File in Java using Apache Commons CSV</title>
      <link>https://simplesolution.dev/java-write-read-csv-file-using-apache-commons-csv/</link>
      <pubDate>Wed, 16 Dec 2020 00:06:40 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-write-read-csv-file-using-apache-commons-csv/</guid>
      <description>In this tutorial, we are going to learn how to write and read CSV files in Java applications using Apache Commons CSV library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add Apache Commons CSV library to your Java project To use Apache Commons CSV Java library in the Gradle build project, add the following dependency into the build.gradle file. compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-csv&amp;#39;, version: &amp;#39;1.8&amp;#39;
To use Apache Commons CSV Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Escape or Unescape String for CSV column data in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-escape-unescape-string-for-csv-column-data/</link>
      <pubDate>Thu, 08 Oct 2020 23:26:48 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-escape-unescape-string-for-csv-column-data/</guid>
      <description>Introduction In this post we are going to learn how to use StringEscapeUtils class in Apache Commons Text library to escape a String for CSV file format. If the input String value contains a comma, newline or double quote, then the output String value is returned enclosed in double quotes.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Convert words in a String into camelCase in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-convert-words-in-a-string-into-camel-case/</link>
      <pubDate>Thu, 08 Oct 2020 22:31:54 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-words-in-a-string-into-camel-case/</guid>
      <description>Introduction In this article we are going to explore Apache Commons Text library by using CaseUtils utility class to convert a String of separated words into a camelCase String.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-text&amp;#39;, version: &amp;#39;1.9&amp;#39; Or add the following dependency XML tag to pom.</description>
    </item>
    
    <item>
      <title>Substitute a String in Java by replace variables map to Template String using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-substitute-a-string-in-java-by-replace-variables-map-to-template-string/</link>
      <pubDate>Wed, 07 Oct 2020 23:38:07 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-substitute-a-string-in-java-by-replace-variables-map-to-template-string/</guid>
      <description>Introduction In this post we are going to learn how to substitute a String in Java which replaces variables into placeholders in a template String. To do this task we will use the Apache Commons Text library with support of StringSubstitutor class. Via different Java example code we will learn how to apply StringSubstitutor in different scenarios in your Java applications.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Uncapitalize first character of all words in a String in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-uncapitalize-first-character-of-all-words-in-a-string/</link>
      <pubDate>Wed, 07 Oct 2020 20:04:14 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-uncapitalize-first-character-of-all-words-in-a-string/</guid>
      <description>Introduction In this article we will explore the WordUtils.uncapitalize() method of Apache Commons Text library to uncapitalize a String. With Java code example we will learn how to use the WordUtils.uncapitalize() method to convert the first character of all words in a String to lowercase character.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Swap Lowercase and Uppercase of a String in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-swap-lowercase-and-uppercase-of-a-string/</link>
      <pubDate>Tue, 06 Oct 2020 23:56:16 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-swap-lowercase-and-uppercase-of-a-string/</guid>
      <description>Introduction In this article we are going to learn how to swap the case of a String in Java application. We provide a Java code example to show how to use WordUtils.swapCase() method of Apache Commons Text library to swap the case of each character of a given String.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Java extracts initial characters from each word in a String using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-extracts-initial-characters-from-each-word-in-a-string/</link>
      <pubDate>Tue, 06 Oct 2020 23:20:52 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-extracts-initial-characters-from-each-word-in-a-string/</guid>
      <description>Introduction In this post we learn how to use WordUtils class of Apache Commons Text library to extract initial characters from all words of a String in Java. We will show the Java code example that uses WordUtils.initials() method to extract initial letters of people names.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Java Checks if a String contains all words in array using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-checks-if-a-string-contains-all-words-in-array/</link>
      <pubDate>Tue, 06 Oct 2020 22:41:54 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-checks-if-a-string-contains-all-words-in-array/</guid>
      <description>Introduction In this article we show how to check if a String contains all words in an array in Java. By using WordUtils utility class of Apache Commons Text library you can check if the String contains all words in the given array using containsAllWords() method.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Wrap a line of text into multiple lines in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-wrap-a-line-of-text-into-multiple-lines/</link>
      <pubDate>Tue, 06 Oct 2020 20:34:43 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-wrap-a-line-of-text-into-multiple-lines/</guid>
      <description>Introduction In this post we learn how to wrap a String in Java using WordUtils utility class of Apache Commons Text library. By using WordUtils.wrap() method we can break a long line of text into multiple lines with a given input text and the length. The output String will be wrapped words and separated by system line separator character or by your custom provided separator.
   (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>Generate Random String in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-generate-random-string-with-random-string-generator/</link>
      <pubDate>Tue, 06 Oct 2020 00:04:09 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-generate-random-string-with-random-string-generator/</guid>
      <description>Introduction In this article we show how to generate random String values in Java using the RandomStringGenerator class of Apache Commons Text library. We provide multiple Java code examples with different settings to generate different kinds of data that may be useful for your daily programming scenarios.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Capitalize First Letter of each Word of String in Java using Apache Commons Text</title>
      <link>https://simplesolution.dev/java-capitalize-first-letter-of-each-word-of-string/</link>
      <pubDate>Mon, 05 Oct 2020 22:03:37 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-capitalize-first-letter-of-each-word-of-string/</guid>
      <description>Introduction In this article we show how to use WordUtils utility class of Apache Commons Text library to capitalize the first character of each word in a Java String. We will provide Java code examples to show how to use capitalize() and capitalizeFully() methods of the library’s WordUtils utility class.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Text in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Capitalize First Letter of a String in Java using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-capitalize-first-letter-of-string/</link>
      <pubDate>Mon, 05 Oct 2020 21:09:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-capitalize-first-letter-of-string/</guid>
      <description>Introduction In this article we show how to use StringUtils of Apache Commons Lang library to capitalize the first character of a Java String by using StringUtils.capitalize() utility method.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-lang3&amp;#39;, version: &amp;#39;3.11&amp;#39; Or add the following dependency XML tag to pom.</description>
    </item>
    
    <item>
      <title>Abbreviates a String using ellipses in Java using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-abbreviates-string-using-ellipses/</link>
      <pubDate>Sun, 04 Oct 2020 23:50:42 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-abbreviates-string-using-ellipses/</guid>
      <description>Introduction In this post we show how to use Apache Commons Lang library to abbreviate a String using ellipses. We provide multiple Java code examples on how to use StringUtils.abbreviate() utility method to achieve our goal.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Check if a String is a valid numeric value in Java using Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-check-if-string-is-valid-numeric-value/</link>
      <pubDate>Sun, 04 Oct 2020 23:07:43 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-if-string-is-valid-numeric-value/</guid>
      <description>Introduction In this article we show you how to use different utility classes in Apache Commons Lang library to check if a String is a valid number in Java. We provide different working code examples how to use methods such as NumberUtils.isCreatable(), NumberUtils.isDigits() or StringUtils.isNumeric().
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.</description>
    </item>
    
    <item>
      <title>Java Find Difference between two Strings using StringUtils Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-find-difference-between-two-strings-using-stringutils-apache-commons-lang/</link>
      <pubDate>Fri, 02 Oct 2020 22:57:11 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-find-difference-between-two-strings-using-stringutils-apache-commons-lang/</guid>
      <description>Introduction In this post we will show you Java example code how to find the difference between two Strings using StringUtils utility class of Apache Commons Lang library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.apache.commons&amp;#39;, name: &amp;#39;commons-lang3&amp;#39;, version: &amp;#39;3.11&amp;#39; Or add the following dependency XML tag to pom.</description>
    </item>
    
    <item>
      <title>Java check String is empty or blank or contains text using StringUtils Apache Commons Lang</title>
      <link>https://simplesolution.dev/java-check-string-is-empty-blank-contains-text-stringutils-apache-commons-lang/</link>
      <pubDate>Fri, 02 Oct 2020 00:32:50 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-check-string-is-empty-blank-contains-text-stringutils-apache-commons-lang/</guid>
      <description>Introduction In this post we are going to learn how to use StringUtils utility class of Apache Commons Lang library in Java application to check if a string contains text, an empty string or a blank string.
   (adsbygoogle = window.adsbygoogle || []).push({});  Setup Apache Commons Lang in Java project If you are using Gradle build then add the following dependency configuration into build.gradle file.
compile group: &amp;#39;org.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to Compare File Content of InputStream or Reader using IOUtils</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.contentequals/</link>
      <pubDate>Sat, 13 Apr 2019 17:53:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.contentequals/</guid>
      <description>Java Code Examples for org.apache.commons.io.IOUtils.contentEquals() and org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL()
Three examples below to show how to use Apache Commons IO IOUtils class to Compare File Content of InputStream objects or Reader objects.
   (adsbygoogle = window.adsbygoogle || []).push({});  Example IOUtils.contentEquals() method to compare 2 InputStream objects package simplesolution.dev;import org.apache.commons.io.IOUtils;import java.io.File;import java.io.IOException;import java.io.InputStream;import java.nio.file.Files;import java.nio.file.Path;public class IOUtilsContentEqualsInputStreamExample {public static void main(String... args) {try {File file1 = new File(&amp;#34;D:\\Data\\file1.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to download website content from URL using IOUtils</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-url/</link>
      <pubDate>Sat, 13 Apr 2019 17:52:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-url/</guid>
      <description>Java Code Examples for org.apache.commons.io.IOUtils.toString()
Below Java code example to show you how to use Apache Commons IO IOUtils class to download website content from java.net.URL.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.codec.Charsets;import org.apache.commons.io.IOUtils;import java.io.IOException;import java.net.URL;public class IOUtilToStringFromURLExample {public static void main(String... args) {try {URL uri = new URL(&amp;#34;https://simplesolution.dev/java-code-examples/&amp;#34;);String content = IOUtils.toString(uri, Charsets.UTF_8);System.out.println(content);} catch (IOException ex) {ex.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to download website content from URI using IOUtils</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-uri/</link>
      <pubDate>Sat, 13 Apr 2019 17:51:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-uri/</guid>
      <description>Java Code Examples for org.apache.commons.io.IOUtils.toString()
Below Java code example to show you how to use Apache Commons IO IOUtils class to download website content from java.net.URI.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.codec.Charsets;import org.apache.commons.io.IOUtils;import java.io.IOException;import java.net.URI;import java.net.URISyntaxException;public class IOUtilToStringFromURIExample {public static void main(String... args) {try {URI uri = new URI(&amp;#34;https://simplesolution.dev/&amp;#34;);String content = IOUtils.toString(uri, Charsets.UTF_8);System.out.println(content);} catch (URISyntaxException ex) {ex.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to read text content from Reader</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-reader/</link>
      <pubDate>Sat, 13 Apr 2019 17:50:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-reader/</guid>
      <description>Java Code Examples for org.apache.commons.io.IOUtils.toString()
The example below to show you how to use Apache Commons IO libary&amp;rsquo;s IOUtils class to read text content from Reader.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.io.IOUtils;import java.io.FileReader;import java.io.IOException;import java.io.Reader;public class IOUtilToStringFromReaderExample {public static void main(String... args) {String fileName = &amp;#34;D:\\data\\sample.txt&amp;#34;;try(Reader reader = new FileReader(fileName)) {String fileContent = IOUtils.toString(reader);System.out.println(fileContent);} catch (IOException ex) {ex.</description>
    </item>
    
    <item>
      <title>Apache Commons IO to read text content from InputStream</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-input-stream/</link>
      <pubDate>Sat, 13 Apr 2019 17:49:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.io.ioutils.tostring-from-input-stream/</guid>
      <description>Java Code Examples for org.apache.commons.io.IOUtils.toString()
The example below to show you how to use Apache Commons IO libary&amp;rsquo;s IOUtils class to read text content from InputStream.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.io.IOUtils;import java.io.FileInputStream;import java.io.IOException;import java.io.InputStream;public class IOUtilToStringFromInputStreamExample {public static void main(String... args) {String fileName = &amp;#34;D:\\data\\sample.txt&amp;#34;;try(InputStream inputStream = new FileInputStream(fileName)) {String value = IOUtils.toString(inputStream, &amp;#34;UTF-8&amp;#34;);System.</description>
    </item>
    
    <item>
      <title>Encode a String into Base64 using Base64.encodeBase64String() with Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encodebase64string/</link>
      <pubDate>Sat, 13 Apr 2019 17:44:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encodebase64string/</guid>
      <description>Java Code Examples for org.apache.commons.codec.binary.Base64.encodeBase64String()
This static method to encode input String into a Base64 format String.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.codec.binary.Base64;public class Base64EncodeBase64StringExamples {public static void main(String... args) {String valueToEncode = &amp;#34;https://simplesolution.dev/&amp;#34;;String encodedString = Base64.encodeBase64String(valueToEncode.getBytes());System.out.println(&amp;#34;Encode output: &amp;#34;);System.out.println(encodedString);}} Happy Coding 😊</description>
    </item>
    
    <item>
      <title>Encode byte array into Base64 format using Base64.encodeBase64() with Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encodebase64/</link>
      <pubDate>Sat, 13 Apr 2019 17:43:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encodebase64/</guid>
      <description>Java Code Examples for org.apache.commons.codec.binary.Base64.encodeBase64()
This static method to encode input byte array into a Base64 format.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.codec.binary.Base64;public class Base64EncodeBase64Examples {public static void main(String... args) {String valueToEncode = &amp;#34;https://simplesolution.dev/&amp;#34;;byte[] encodedBytes = Base64.encodeBase64(valueToEncode.getBytes());String encodedString = new String(encodedBytes);System.out.println(&amp;#34;Encode output: &amp;#34;);System.out.println(encodedString);}} Happy Coding 😊</description>
    </item>
    
    <item>
      <title>Encode a String into Base64 format using Base64.encodeToString() with Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encodetostring/</link>
      <pubDate>Sat, 13 Apr 2019 17:42:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encodetostring/</guid>
      <description>Java Code Examples for org.apache.commons.codec.binary.Base64.encodeToString()
This method to encode input String into a Base64 format String.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.codec.binary.Base64;public class Base64EncodeToStringExamples {public static void main(String... args) {Base64 base64 = new Base64();String valueToEncode = &amp;#34;https://simplesolution.dev/&amp;#34;;String encodedString = base64.encodeToString(valueToEncode.getBytes());System.out.println(&amp;#34;Encode output: &amp;#34;);System.out.println(encodedString);}} Happy Coding 😊</description>
    </item>
    
    <item>
      <title>Encode byte array into Base64 format using Base64.encode() with Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encode/</link>
      <pubDate>Sat, 13 Apr 2019 17:41:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/org.apache.commons.codec.binary.base64.encode/</guid>
      <description>Java Code Examples for org.apache.commons.codec.binary.Base64.encode()
This method to encode input byte array to Base64 format.
   (adsbygoogle = window.adsbygoogle || []).push({});  package simplesolution.dev;import org.apache.commons.codec.binary.Base64;public class Base64EncodeExamples {public static void main(String... args) {Base64 base64 = new Base64();String valueToEncode = &amp;#34;https://simplesolution.dev/&amp;#34;;byte[] encodedBytes = base64.encode(valueToEncode.getBytes());String encodedString = new String(encodedBytes);System.out.println(&amp;#34;Encode output: &amp;#34;);System.out.println(encodedString);}} Happy Coding 😊</description>
    </item>
    
    <item>
      <title>Java Generate SHA-1 using DigestUtils in Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-generate-sha1-digestutils-apache-commons-codec/</link>
      <pubDate>Wed, 10 Apr 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-generate-sha1-digestutils-apache-commons-codec/</guid>
      <description>In below code example you will learn how to use org.apache.commons.codec.digest.DigestUtils class in Apache Commons Codec to generate SHA-1 string in Java.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Apache Commons Codec Dependency Define below dependency in build.gradle if you are using gradle. compile group: &amp;#39;commons-codec&amp;#39;, name: &amp;#39;commons-codec&amp;#39;, version: &amp;#39;1.12&amp;#39;
Define this dependency in pom.xml if you are using maven. &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;commons-codec&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;commons-codec&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;1.12&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
Or you can download the release from Apache Commons Codec home page at: here</description>
    </item>
    
    <item>
      <title>Java Base64 Encoding and Decoding with Apache Commons Codec</title>
      <link>https://simplesolution.dev/java-base64-encoding-decoding-apache-commons-codec/</link>
      <pubDate>Tue, 09 Apr 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-base64-encoding-decoding-apache-commons-codec/</guid>
      <description>In this tutorial you will learn how to encoding and decoding a String in Java using Apache Commons Codec library. The library provide org.apache.commons.codec.binary.Base64 class with different methods to encode and decode data.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Dependency Define below dependency in build.gradle if you are using gradle. compile group: &amp;#39;commons-codec&amp;#39;, name: &amp;#39;commons-codec&amp;#39;, version: &amp;#39;1.12&amp;#39;
Define this dependency in pom.xml if you are using maven.</description>
    </item>
    
  </channel>
</rss>