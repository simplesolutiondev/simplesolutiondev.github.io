<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>File on Simple Solution</title>
    <link>https://simplesolution.dev/tag/file/</link>
    <description>Recent content in File on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Oct 2020 22:55:19 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/tag/file/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Get File Size in Java</title>
      <link>https://simplesolution.dev/java-get-file-size/</link>
      <pubDate>Sun, 18 Oct 2020 22:55:19 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-file-size/</guid>
      <description>Introduction In this post we are going to explore how to get file size in bytes, kilobytes, megabytes or gigabytes in different Java versions.
For example we have a file located at D:\SimpleSolution\logo.png as following screenshot.
   (adsbygoogle = window.adsbygoogle || []).push({});  Using NIO Files.size() method with Java version 7 and above import java.io.IOException; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; public class GetFileSizeExample1 { public static void main(String[] args) { try { String fileLocation = &amp;#34;D:\\SimpleSolution\\logo.</description>
    </item>
    
    <item>
      <title>Writing Excel File Using Apache POI Library in Java</title>
      <link>https://simplesolution.dev/writing-excel-file-using-apache-poi-library-in-java/</link>
      <pubDate>Tue, 26 Mar 2019 20:34:25 +0700</pubDate>
      
      <guid>https://simplesolution.dev/writing-excel-file-using-apache-poi-library-in-java/</guid>
      <description>Apache POI is and open source Java library allow you to read and write Microsoft Documents such as Excel workbook, Word document, Powerpoint presentation.
In this blog post I will show you how to use Apache POI library to writing an Excel file. Throughout this blog post we will implement an Java application to generate the Excel file as the figure below:
   (adsbygoogle = window.adsbygoogle || []).</description>
    </item>
    
  </channel>
</rss>