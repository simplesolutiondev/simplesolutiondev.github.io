<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Json on Simple Solution</title>
    <link>https://simplesolution.dev/tag/json/</link>
    <description>Recent content in Json on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Jun 2021 21:11:18 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/tag/json/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generate Pretty Print JSON String in Java using Gson</title>
      <link>https://simplesolution.dev/java-generate-pretty-print-json-string-using-gson/</link>
      <pubDate>Fri, 25 Jun 2021 21:11:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-generate-pretty-print-json-string-using-gson/</guid>
      <description>In this Java Gson tutorial we learn how to use the Gson library to generate a readable pretty print JSON String from a Java object. Via Java detail Java example we will show you how to use the GsonBuilder.setPrettyPrinting() method to configure Gson to output JSON String that fits in a page for pretty printing.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Gson to the Java project To use the Gson library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Convert Java Object to JSON String in Java using Gson</title>
      <link>https://simplesolution.dev/java-convert-java-object-to-json-string-using-gson/</link>
      <pubDate>Thu, 24 Jun 2021 21:14:58 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-java-object-to-json-string-using-gson/</guid>
      <description>In this Java Gson tutorial we learn how to use the Gson library to convert a Java object to a JSON String using the Gson.toJson() method. Via step by step Java example we show you how to convert to a JSON String from a HashMap, a List of HashMap, a Java object or List of Java objects.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Gson to the Java project To use the Gson library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Convert JSON String to Java Object in Java using Gson</title>
      <link>https://simplesolution.dev/java-convert-json-string-to-java-object-using-gson/</link>
      <pubDate>Wed, 23 Jun 2021 22:52:39 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-convert-json-string-to-java-object-using-gson/</guid>
      <description>In this Java Gson tutorial we learn how to use the Gson library to convert a JSON String into a Java object by using Gson class. Via different Java code examples we show you how to convert a JSON String into Java HashMap, an object of a custom defined class or a List of objects.
   (adsbygoogle = window.adsbygoogle || []).push({});  How to add Gson to the Java project To use the Gson library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Spring Boot Web Application Export and Download JSON File</title>
      <link>https://simplesolution.dev/spring-boot-export-download-json-file/</link>
      <pubDate>Sat, 24 Oct 2020 12:50:59 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-export-download-json-file/</guid>
      <description>Introduction In this tutorial we are going to learn how to implement a Spring Boot web application to export JSON and allow users to download as a JSON file via web browser. Via step by step guide we show you how to implement an example web application to export a list of customers to a JSON file.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot Web Project From Spring Tool Suite IDE select menu File &amp;gt; New &amp;gt; Spring Starter Project.</description>
    </item>
    
    <item>
      <title>Deserializes JSON string into Java object using JsonIterator.deserialize() with Jsoniter</title>
      <link>https://simplesolution.dev/java-code-examples/com.jsoniter.jsoniterator.deserialize/</link>
      <pubDate>Sat, 13 Apr 2019 17:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.jsoniter.jsoniterator.deserialize/</guid>
      <description>Java Code Examples for com.jsoniter.JsonIterator.deserialize()
This method to deserializes a JSON string into a Java object of the specified class.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Jsoniter dependency into your project Using Gradle compile group: &amp;#39;com.jsoniter&amp;#39;, name: &amp;#39;jsoniter&amp;#39;, version: &amp;#39;0.9.23&amp;#39;
Using Maven &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;com.jsoniter&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;jsoniter&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;0.9.23&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
How to use com.jsoniter.JsonIterator.deserialize() package simplesolution.dev;import com.jsoniter.JsonIterator;import java.util.List;import java.util.Map;public class JsonIteratorDeserializeExamples {public static void main(String.</description>
    </item>
    
    <item>
      <title>Serializes Java object into JSON string using JsonStream.serialize() with Jsoniter</title>
      <link>https://simplesolution.dev/java-code-examples/com.jsoniter.output.jsonstream.serialize/</link>
      <pubDate>Sat, 13 Apr 2019 17:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.jsoniter.output.jsonstream.serialize/</guid>
      <description>Java Code Examples for com.jsoniter.output.JsonStream.serialize()
This method to serializes the Java object into JSON string.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Jsoniter dependency into your project Using Gradle compile group: &amp;#39;com.jsoniter&amp;#39;, name: &amp;#39;jsoniter&amp;#39;, version: &amp;#39;0.9.23&amp;#39;
Using Maven &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;com.jsoniter&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;jsoniter&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;0.9.23&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
How to use com.jsoniter.output.JsonStream.serialize() package simplesolution.dev;import com.jsoniter.output.JsonStream;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;public class JsonStreamSerializeExamples {public static void main(String.</description>
    </item>
    
    <item>
      <title>Deserialize JSON string into Java object using ObjectMapper.readValue() with Jackson</title>
      <link>https://simplesolution.dev/java-code-examples/com.fasterxml.jackson.databind.objectmapper.readvalue/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.fasterxml.jackson.databind.objectmapper.readvalue/</guid>
      <description>Java Code Examples for com.fasterxml.jackson.databind.ObjectMapper.readValue()
This method to deserialize JSON string into a Java object.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Jackson dependency into your project Using Gradle compile group: &amp;#39;com.fasterxml.jackson.core&amp;#39;, name: &amp;#39;jackson-databind&amp;#39;, version: &amp;#39;2.9.8&amp;#39;
Using Maven &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;com.fasterxml.jackson.core&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;jackson-databind&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;2.9.8&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
How to use com.fasterxml.jackson.databind.ObjectMapper.readValue() package simplesolution.dev;import com.fasterxml.jackson.databind.ObjectMapper;import java.io.IOException;import java.util.List;import java.util.Map;public class ObjectMapperReadValueExamples {public static void main(String... args) {String data = &amp;#34;[{\&amp;#34;name\&amp;#34;:\&amp;#34;Sample JSON Serialization\&amp;#34;,\&amp;#34;url\&amp;#34;:\&amp;#34;https://simplesolution.</description>
    </item>
    
    <item>
      <title>Deserializes JSON String into Java object using JSON.parseObject() with Fastjson</title>
      <link>https://simplesolution.dev/java-code-examples/com.alibaba.fastjson.json.parseobject/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.alibaba.fastjson.json.parseobject/</guid>
      <description>Java Code Examples for com.alibaba.fastjson.JSON.parseObject()
This method to deserializes the JSON string into a Java object.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Fastjson dependency into your project Using Gradle compile group: &amp;#39;com.alibaba&amp;#39;, name: &amp;#39;fastjson&amp;#39;, version: &amp;#39;1.2.56&amp;#39;
Using Maven &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;com.alibaba&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;fastjson&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;1.2.56&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
How to use com.alibaba.fastjson.JSON.parseObject() package simplesolution.dev;import com.alibaba.fastjson.JSON;import java.util.List;import java.util.Map;public class JSONParseObjectExamples {public static void main(String... args) {String data = &amp;#34;[{\&amp;#34;name\&amp;#34;:\&amp;#34;Sample JSON Serialization\&amp;#34;,\&amp;#34;url\&amp;#34;:\&amp;#34;https://simplesolution.</description>
    </item>
    
    <item>
      <title>Deserializes JSON string into Java object using Gson.fromJson() with Gson</title>
      <link>https://simplesolution.dev/java-code-examples/com.google.gson.gson.fromjson/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.google.gson.gson.fromjson/</guid>
      <description>Java Code Examples for com.google.gson.Gson.fromJson()
This method to deserializes a JSON string into a Java object of the specified class.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Gson dependency into your project Using Gradle compile group: &amp;#39;com.google.code.gson&amp;#39;, name: &amp;#39;gson&amp;#39;, version: &amp;#39;2.8.5&amp;#39;
Using Maven &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;com.google.code.gson&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;gson&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;2.8.5&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
How to use com.google.gson.Gson.fromJson() package simplesolution.dev;import com.google.gson.Gson;import java.util.List;import java.util.Map;public class GsonFromJsonExamples {public static void main(String.</description>
    </item>
    
    <item>
      <title>Deserializes JSON string into Java object using JsonAdapter.fromJson() with Moshi</title>
      <link>https://simplesolution.dev/java-code-examples/com.squareup.moshi.jsonadapter.fromjson/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.squareup.moshi.jsonadapter.fromjson/</guid>
      <description>Java Code Examples for com.squareup.moshi.JsonAdapter.fromJson()
This method to deserializes a JSON string into a Java object of the specified class.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Moshi dependency into your project Using Gradle compile group: &amp;#39;com.squareup.moshi&amp;#39;, name: &amp;#39;moshi&amp;#39;, version: &amp;#39;1.8.0&amp;#39;
Using Maven &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;com.squareup.moshi&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;moshi&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;1.8.0&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
How to use com.squareup.moshi.JsonAdapter.fromJson() package simplesolution.dev;import com.squareup.moshi.JsonAdapter;import com.squareup.moshi.Moshi;import java.io.IOException;import java.util.List;public class JsonAdapterFromJsonExamples {public static void main(String.</description>
    </item>
    
    <item>
      <title>Serializes Java object into JSON String using JsonAdapter.toJson() with Moshi</title>
      <link>https://simplesolution.dev/java-code-examples/com.squareup.moshi.jsonadapter.tojson/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.squareup.moshi.jsonadapter.tojson/</guid>
      <description>Java Code Examples for com.squareup.moshi.JsonAdapter.toJson()
This method to serializes the Java object into JSON string.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Moshi dependency into your project Using Gradle compile group: &amp;#39;com.squareup.moshi&amp;#39;, name: &amp;#39;moshi&amp;#39;, version: &amp;#39;1.8.0&amp;#39;
Using Maven &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;com.squareup.moshi&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;moshi&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;1.8.0&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
How to use com.squareup.moshi.JsonAdapter.toJson() package simplesolution.dev;import com.squareup.moshi.JsonAdapter;import com.squareup.moshi.Moshi;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;public class JsonAdapterToJsonExamples {public static void main(String.</description>
    </item>
    
    <item>
      <title>Serializes Java object into JSON string using Gson.toJson() with Gson</title>
      <link>https://simplesolution.dev/java-code-examples/com.google.gson.gson.tojson/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.google.gson.gson.tojson/</guid>
      <description>Java Code Examples for com.google.gson.Gson.toJson()
This method to serializes the Java object into JSON string.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Gson dependency into your project Using Gradle compile group: &amp;#39;com.google.code.gson&amp;#39;, name: &amp;#39;gson&amp;#39;, version: &amp;#39;2.8.5&amp;#39;
Using Maven &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;com.google.code.gson&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;gson&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;2.8.5&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
How to use com.google.gson.Gson.toJson() package simplesolution.dev;import com.google.gson.Gson;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;public class GsonToJsonExamples {public static void main(String.</description>
    </item>
    
    <item>
      <title>Serializes Java object into JSON string using JSON.toJSONString() with Fastjson</title>
      <link>https://simplesolution.dev/java-code-examples/com.alibaba.fastjson.json.tojsonstring/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.alibaba.fastjson.json.tojsonstring/</guid>
      <description>Java Code Examples for com.alibaba.fastjson.JSON.toJSONString()
This method to serializes the specified Java object into JSON string.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Fastjson dependency into your project Using Gradle compile group: &amp;#39;com.alibaba&amp;#39;, name: &amp;#39;fastjson&amp;#39;, version: &amp;#39;1.2.56&amp;#39;
Using Maven &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;com.alibaba&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;fastjson&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;1.2.56&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
How to use com.alibaba.fastjson.JSON.toJSONString() package simplesolution.dev;import com.alibaba.fastjson.JSON;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;public class JSONToJSONStringExamples {public static void main(String.</description>
    </item>
    
    <item>
      <title>Serializes Java object into JSON string using ObjectMapper.writeValueAsString() with Jackson</title>
      <link>https://simplesolution.dev/java-code-examples/com.fasterxml.jackson.databind.objectmapper.writevalueasstring/</link>
      <pubDate>Sat, 13 Apr 2019 16:30:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-code-examples/com.fasterxml.jackson.databind.objectmapper.writevalueasstring/</guid>
      <description>Java Code Examples for com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString()
This method can be used to serialize any Java object into a JSON String.
   (adsbygoogle = window.adsbygoogle || []).push({});  Adding Jackson dependency into your project Using Gradle compile group: &amp;#39;com.fasterxml.jackson.core&amp;#39;, name: &amp;#39;jackson-databind&amp;#39;, version: &amp;#39;2.9.8&amp;#39;
Using Maven &amp;lt;dependency&amp;gt;&amp;lt;groupId&amp;gt;com.fasterxml.jackson.core&amp;lt;/groupId&amp;gt;&amp;lt;artifactId&amp;gt;jackson-databind&amp;lt;/artifactId&amp;gt;&amp;lt;version&amp;gt;2.9.8&amp;lt;/version&amp;gt;&amp;lt;/dependency&amp;gt;
How to use com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString() package simplesolution.dev;import com.fasterxml.jackson.databind.ObjectMapper;import java.io.IOException;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;public class ObjectMapperWriteValueAsStringExamples {public static void main(String.</description>
    </item>
    
    <item>
      <title>Top 5 Libraries for Serialization and Deserialization JSON in Java</title>
      <link>https://simplesolution.dev/top-5-libraries-for-serialization-and-deserialization-json-in-java/</link>
      <pubDate>Sat, 30 Mar 2019 14:00:00 +0700</pubDate>
      
      <guid>https://simplesolution.dev/top-5-libraries-for-serialization-and-deserialization-json-in-java/</guid>
      <description>In this blog post we will go through 5 useful open source libraries to serialization and deserialize JSON data in Java application. For each library we will write a simple code sample to show you how to use the library to convert Java object to a JSON string and vice-versa.
   (adsbygoogle = window.adsbygoogle || []).push({});  Gson Github repository: github.com/google/gson
Adding Gson dependency into your project Using Gradle compile group: &amp;#39;com.</description>
    </item>
    
  </channel>
</rss>