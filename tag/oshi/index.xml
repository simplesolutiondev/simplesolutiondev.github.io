<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oshi on Simple Solution</title>
    <link>https://simplesolution.dev/tag/oshi/</link>
    <description>Recent content in Oshi on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Jun 2021 22:28:40 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/tag/oshi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java OSHI Tutorial</title>
      <link>https://simplesolution.dev/java-oshi-tutorial/</link>
      <pubDate>Sun, 20 Jun 2021 22:28:40 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-oshi-tutorial/</guid>
      <description>In this Java OSHI tutorial, we learn how to use the OSHI library.
 How to get file system information
 How to get virtual memory information
 How to get physical memory or RAM information
 How to get CPU information
 How to get operating system information
  Happy Coding ðŸ˜Š</description>
    </item>
    
    <item>
      <title>Get File System Information in Java using OSHI library</title>
      <link>https://simplesolution.dev/java-get-file-system-information-oshi-library/</link>
      <pubDate>Thu, 05 Nov 2020 21:43:31 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-file-system-information-oshi-library/</guid>
      <description>Introduction In this tutorial, we learn how to access file system information in Java applications with OSHI library. By different Java examples we show how to get information on file storage of a computer system.
Add OSHI library to the Java project To use OSHI Java library in the Gradle build project, add the following dependency into the build.gradle file. compile group: &amp;#39;com.github.oshi&amp;#39;, name: &amp;#39;oshi-core&amp;#39;, version: &amp;#39;5.3.4&amp;#39;
To use OSHI Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Get Virtual Memory Information in Java using OSHI library</title>
      <link>https://simplesolution.dev/java-virtual-memory-information-oshi-library/</link>
      <pubDate>Wed, 04 Nov 2020 23:32:58 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-virtual-memory-information-oshi-library/</guid>
      <description>Introduction In this tutorial, we show how to get virtual memory information of the computer in Java application with OSHI library.
Add OSHI library to the Java project To use OSHI Java library in the Gradle build project, add the following dependency into the build.gradle file. compile group: &amp;#39;com.github.oshi&amp;#39;, name: &amp;#39;oshi-core&amp;#39;, version: &amp;#39;5.3.4&amp;#39;
To use OSHI Java library in the Maven build project, add the following dependency into the pom.</description>
    </item>
    
    <item>
      <title>Get Physical Memory or RAM Information in Java using OSHI library</title>
      <link>https://simplesolution.dev/java-get-physical-memory-ram-information-oshi-library/</link>
      <pubDate>Wed, 04 Nov 2020 22:31:48 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-physical-memory-ram-information-oshi-library/</guid>
      <description>Introduction In this tutorial, we are going to explore how to use the OSHI library to get information about the physical memory (RAM) information of the computer in a Java application. By using the API provided by OSHI Java library we will write programs to show memory of the computer and information of all physical devices located on the computer.
   (adsbygoogle = window.adsbygoogle || []).push({});  Add OSHI library to the Java project To use OSHI Java library in the Gradle build project, add the following dependency into the build.</description>
    </item>
    
    <item>
      <title>Get CPU Information in Java using OSHI library</title>
      <link>https://simplesolution.dev/java-get-cpu-information-oshi-library/</link>
      <pubDate>Tue, 03 Nov 2020 22:44:31 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-cpu-information-oshi-library/</guid>
      <description>Introduction In this tutorial, we explore how to use the OSHI library in Java program to get CPU details information. Via the OSHI APIs we show how to get all information of a Central Processing Unit (CPU) such as name, number of cores, vendor, model, family, etc.
   (adsbygoogle = window.adsbygoogle || []).push({});  What is OSHI? OSHI is a free JNA-based (native) Operating System and Hardware Information library for Java.</description>
    </item>
    
    <item>
      <title>Get Operating System Information in Java using OSHI library</title>
      <link>https://simplesolution.dev/java-get-operating-system-information-oshi-library/</link>
      <pubDate>Tue, 03 Nov 2020 01:43:18 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-get-operating-system-information-oshi-library/</guid>
      <description>Introduction In this tutorial, we show you how to use OSHI library in a Java program to get operating system information. By different example Java programs we learn how to get information of operating system name, version, manufacturer, etc.
   (adsbygoogle = window.adsbygoogle || []).push({});  What is OSHI? OSHI is a free JNA-based (native) Operating System and Hardware Information library for Java. It does not require the installation of any additional native libraries and aims to provide a cross-platform implementation to retrieve system information, such as OS version, processes, memory and CPU usage, disks and partitions, devices, sensors, etc.</description>
    </item>
    
  </channel>
</rss>