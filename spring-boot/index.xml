<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring Boot on Simple Solution</title>
    <link>https://simplesolution.dev/spring-boot/</link>
    <description>Recent content in Spring Boot on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Mar 2021 00:14:16 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/spring-boot/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring Boot Read File from resources using ClassPathResource</title>
      <link>https://simplesolution.dev/java-spring-boot-classpathresource/</link>
      <pubDate>Wed, 03 Mar 2021 00:14:16 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-spring-boot-classpathresource/</guid>
      <description>Introduction In this Spring Boot tutorial, we learn how to read files located in the resources folder in a Spring Boot application using ClassPathResource class.
Create New Spring Boot Project Open Spring Tool Suite IDE, select menu File &amp;gt; New &amp;gt; Spring Starter Project.
On the New Spring Starter Project popup input new project information as below and click Next.
 Name: spring-boot-classpathresource Group: dev.simplesolution Artifact: spring-boot-classpathresource Version: 1.0.0 Description: Spring Boot Read File from resources Package: dev.</description>
    </item>
    
    <item>
      <title>Spring Boot Web using Undertow Embedded Servlet Container</title>
      <link>https://simplesolution.dev/spring-boot-web-undertow-embedded-servlet-container/</link>
      <pubDate>Mon, 01 Mar 2021 23:59:56 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-web-undertow-embedded-servlet-container/</guid>
      <description>Introduction In this Spring Boot tutorial, we learn how to use Undertow as an embedded servlet container in Spring Boot Web application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot Web Project Open Spring Tool Suite IDE, select menu File &amp;gt; New &amp;gt; Spring Starter Project.
On the New Spring Starter Project popup input new project information as below and click Next.
 Name: spring-boot-undertow Group: dev.</description>
    </item>
    
    <item>
      <title>Spring Boot RESTful API Documentation with OpenAPI 3.0 and Swagger-UI using springdoc-openapi</title>
      <link>https://simplesolution.dev/spring-boot-rest-api-openapi-swagger-ui-springdoc-openapi/</link>
      <pubDate>Thu, 04 Feb 2021 00:12:12 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-rest-api-openapi-swagger-ui-springdoc-openapi/</guid>
      <description>Introduction In this Spring Boot RESTful API tutorial, we learn how to use the springdoc-openapi Java library in the Spring Boot project to generate the documentation for the Restful API. Step by step we learn how to generate the document in OpenAPI 3.0 standard and then showing the document in Swagger-UI.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot RESTful API Project Open Spring Tool Suite IDE, select menu File &amp;gt; New &amp;gt; Spring Starter Project.</description>
    </item>
    
    <item>
      <title>Spring Boot Console Application using CommandLineRunner</title>
      <link>https://simplesolution.dev/spring-boot-console-application-commandlinerunner/</link>
      <pubDate>Wed, 06 Jan 2021 22:57:36 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-console-application-commandlinerunner/</guid>
      <description>In this Spring Boot tutorial, we are going to learn how to create a console application with Spring Boot using CommandLineRunner interface.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot Project Open Spring Tool Suite IDE, select menu File &amp;gt; New &amp;gt; Spring Starter Project.
On the New Spring Starter Project popup input new project information as below and click Next.
 Name: spring-boot-console-application Group: dev.</description>
    </item>
    
    <item>
      <title>Spring Boot Download Excel File Export from MySQL Database</title>
      <link>https://simplesolution.dev/spring-boot-download-excel-file-export-from-mysql/</link>
      <pubDate>Thu, 10 Dec 2020 00:29:48 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-download-excel-file-export-from-mysql/</guid>
      <description>Introduction In this tutorial, we are going to learn how to implement a download function for a Spring Boot web application to allow users download excel files, which the Excel file content export from a MySQL database table. Via step by step tutorial we learn how to implement the feature using different Java libraries such as Apache POI, Spring Data JPA, Spring Web, etc.
   (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>Spring Boot Web Application Export and Download JSON File</title>
      <link>https://simplesolution.dev/spring-boot-export-download-json-file/</link>
      <pubDate>Sat, 24 Oct 2020 12:50:59 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-export-download-json-file/</guid>
      <description>Introduction In this tutorial we are going to learn how to implement a Spring Boot web application to export JSON and allow users to download as a JSON file via web browser. Via step by step guide we show you how to implement an example web application to export a list of customers to a JSON file.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot Web Project From Spring Tool Suite IDE select menu File &amp;gt; New &amp;gt; Spring Starter Project.</description>
    </item>
    
    <item>
      <title>Spring Boot Web Application Export and Download Text File</title>
      <link>https://simplesolution.dev/spring-boot-export-download-text-file/</link>
      <pubDate>Sat, 24 Oct 2020 00:33:28 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-export-download-text-file/</guid>
      <description>Introduction In this tutorial we learn how to create a new text file and provide the user the web interface to download the text file in a Spring Boot web application. We will learn how to download a text file in Spring Boot with 5 different approaches to implement the feature.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot Web Project From Spring Tool Suite IDE select menu File &amp;gt; New &amp;gt; Spring Starter Project.</description>
    </item>
    
    <item>
      <title>Spring Boot Access MySQL Database with Spring Data JPA</title>
      <link>https://simplesolution.dev/spring-boot-access-mysql-database-spring-data-jpa/</link>
      <pubDate>Tue, 20 Oct 2020 00:38:25 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-access-mysql-database-spring-data-jpa/</guid>
      <description>Introduction In this tutorial we walk you through step by step to create a Spring Boot application to access MySQL database using Spring Data JPA and MySQL Driver. Via step by step example we will create a Spring Boot project to save Customer entity into customer data table in MySQL database.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot Project From Spring Tool Suite IDE select menu File &amp;gt; New &amp;gt; Spring Starter Project.</description>
    </item>
    
    <item>
      <title>Spring Boot Starter Data Redis for Data Storage on Redis Server</title>
      <link>https://simplesolution.dev/spring-boot-starter-data-redis-jedis-client/</link>
      <pubDate>Sun, 18 Oct 2020 14:35:26 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-starter-data-redis-jedis-client/</guid>
      <description>Introduction In this post, we are going to learn how to use Redis as data persistence for our Spring Boot Application by using Spring Boot Starter Data Redis and Jedis Client.
   (adsbygoogle = window.adsbygoogle || []).push({});  What is Redis? Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker. For more information you can visit Redis home page at redis.</description>
    </item>
    
    <item>
      <title>Spring Boot Implement AOP with Spring Boot Starter AOP</title>
      <link>https://simplesolution.dev/spring-boot-implement-aop-with-spring-boot-starter-aop/</link>
      <pubDate>Sat, 17 Oct 2020 20:10:24 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-implement-aop-with-spring-boot-starter-aop/</guid>
      <description>Introduction In this article, we learn how to implement AOP (Aspect-Oriented Programming) in a Spring Boot Web application. Via step by step to creating the sample Spring Boot web application, we are going to explore how to use Spring Boot Starter AOP library which is the combination of Spring AOP and AspectJ libraries to easily implement AOP in Spring Boot application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Create New Spring Boot Web project From Spring Tool Suite IDE select menu File &amp;gt; New &amp;gt; Spring Starter Project.</description>
    </item>
    
    <item>
      <title>Spring Boot Web Get Client IP Address</title>
      <link>https://simplesolution.dev/spring-boot-web-get-client-ip-address/</link>
      <pubDate>Wed, 14 Oct 2020 23:08:54 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-web-get-client-ip-address/</guid>
      <description>Introduction In this article we are going to learn how to obtain the clientâ€™s browser IP address when a user visits our Spring Boot web application. The example Java source code also shows how to get the client IP address even when the application deployed behind the proxy server. We also get the IP address of the local network if the client visits the Spring Boot website via local network.</description>
    </item>
    
    <item>
      <title>Spring Boot SFTP File Transfer using JSch Java Library</title>
      <link>https://simplesolution.dev/spring-boot-sftp-file-transfer-using-jsch-java-library/</link>
      <pubDate>Mon, 28 Sep 2020 22:37:34 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-sftp-file-transfer-using-jsch-java-library/</guid>
      <description>Overview In this post we will show you how to transfer files from a local host to a remote server and download files from a remote server to local host via SFTP in Spring Boot applications. In order to transfer files via SFTP in Java applications we also explore the JSch library.
   (adsbygoogle = window.adsbygoogle || []).push({});  Creating Spring Boot Project with Spring Tool Suite on Eclipse From Spring Tool Suite IDE select menu File -&amp;gt; New -&amp;gt; Spring Starter Project.</description>
    </item>
    
    <item>
      <title>Spring Boot Web Application Upload File</title>
      <link>https://simplesolution.dev/spring-boot-web-application-upload-file/</link>
      <pubDate>Fri, 28 Feb 2020 00:37:35 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-web-application-upload-file/</guid>
      <description>In this tutorial weâ€™re going to learn how to implement file uploading function in a Spring Boot web application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Creating Spring Boot Project with Spring Tool Suite on Eclipse Open Spring Tool Suite and go to menu File -&amp;gt; New -&amp;gt; Spring Starter Project.
On the New Spring Starter Project window, input your project information as below screenshot and click Next button.</description>
    </item>
    
    <item>
      <title>Using Dozer Spring Boot Starter</title>
      <link>https://simplesolution.dev/using-dozer-spring-boot-starter/</link>
      <pubDate>Wed, 18 Dec 2019 00:20:41 +0700</pubDate>
      
      <guid>https://simplesolution.dev/using-dozer-spring-boot-starter/</guid>
      <description>In this Spring Boot tutorial we will go through step by step guide to creating a Spring Boot console application and configure Dozer Spring Boot Starter library to using Dozer mapping in Spring Boot application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Creating Spring Boot Console Application Project Open your Spring Tool Suite IDE and choose menu File -&amp;gt; New -&amp;gt; Spring Starter Project
In New Spring Starter Project window input below informations for your project and click Next.</description>
    </item>
    
    <item>
      <title>Video Spring Boot Web Application Download Excel File</title>
      <link>https://simplesolution.dev/video-spring-boot-web-application-download-excel-file/</link>
      <pubDate>Tue, 17 Dec 2019 23:22:50 +0700</pubDate>
      
      <guid>https://simplesolution.dev/video-spring-boot-web-application-download-excel-file/</guid>
      <description>Step by step video how to implement Spring Boot web application with download Excel file using Apache POI libary.
   (adsbygoogle = window.adsbygoogle || []).push({});    
   (adsbygoogle = window.adsbygoogle || []).push({});  Download Source Code The source code in this article can be found at: github.com/simplesolutiondev/DownloadExcelFile
or download at:
 Download Source Code
Happy Coding ðŸ˜Š
Related Articles Spring Boot Web Application Download Excel File</description>
    </item>
    
    <item>
      <title>Spring Boot Web Application Download Excel File</title>
      <link>https://simplesolution.dev/spring-boot-web-application-download-excel-file/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:29 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-web-application-download-excel-file/</guid>
      <description>In this article we will go through step by step guide to create Spring Boot web application and implement downloading Excel file feature. We will use Spring Tool Suite 4 for creating the application and code editor for demo application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Creating Spring Boot web project using Spring Tool Suite Open Spring Tool Suite on your machine and click on &amp;ldquo;Create a project&amp;hellip;&amp;rdquo; or choose menu File -&amp;gt; New -&amp;gt; Project</description>
    </item>
    
    <item>
      <title>Spring Boot Web Application Download CSV File</title>
      <link>https://simplesolution.dev/spring-boot-application-download-csv/</link>
      <pubDate>Tue, 14 May 2019 01:00:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-application-download-csv/</guid>
      <description>In this article we show you how to implement dowloading CSV file in Spring Boot Web Application.
   (adsbygoogle = window.adsbygoogle || []).push({});  Overview Project Structure Throughout this article we implement the Spring Boot project as below structure Gradle Build Dependencies Define below dependencies in build.gradle if you are using gradle. implementation &amp;#39;org.springframework.boot:spring-boot-starter-thymeleaf&amp;#39;implementation &amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;
Maven Build Dependencies Define this dependencies in pom.xml if you are using maven.</description>
    </item>
    
    <item>
      <title>Creating Spring Boot Application with Spring Tool Suite</title>
      <link>https://simplesolution.dev/spring-boot-application-spring-tool-suite/</link>
      <pubDate>Thu, 18 Apr 2019 01:02:10 +0700</pubDate>
      
      <guid>https://simplesolution.dev/spring-boot-application-spring-tool-suite/</guid>
      <description>In this article we will learn step by step guide to create a new Spring Boot web application using Spring Tool Suite.
   (adsbygoogle = window.adsbygoogle || []).push({});  You can download Spring Tool Suite from this link
First step, open Spring Tool Suite on your machine and choose menu File -&amp;gt; New -&amp;gt; Spring Starter Project
Then input new project information on New Spring Starter Project popup as below and click on Next button.</description>
    </item>
    
  </channel>
</rss>