<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java Spring Framework on Simple Solution</title>
    <link>https://simplesolution.dev/java-spring-framework/</link>
    <description>Recent content in Java Spring Framework on Simple Solution</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Mar 2021 22:15:52 +0700</lastBuildDate>
    
	<atom:link href="https://simplesolution.dev/java-spring-framework/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring Read Classpath Resource using ResourceLoader</title>
      <link>https://simplesolution.dev/java-spring-read-classpath-resource-using-resourceloader/</link>
      <pubDate>Thu, 04 Mar 2021 22:15:52 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-spring-read-classpath-resource-using-resourceloader/</guid>
      <description>In this Java Spring Framework tutorial, we learn how to use the ResourceLoader class from Spring Core module to read Resource files from classpath and convert the file to Java String object.
   (adsbygoogle = window.adsbygoogle || []).push({});  For example, we have a text file located at /src/main/resources/data.json in the Spring application project.
Next step, we implement a new class named ResourceService and implement two methods to read the data.</description>
    </item>
    
    <item>
      <title>Spring Read Properties File using ResourceUtils</title>
      <link>https://simplesolution.dev/java-spring-read-properties-file-using-resourceutils/</link>
      <pubDate>Wed, 03 Mar 2021 23:06:17 +0700</pubDate>
      
      <guid>https://simplesolution.dev/java-spring-read-properties-file-using-resourceutils/</guid>
      <description>In this Java Spring Framework tutorial, we learn how to use the ResourceUtils class of Spring Core module to read a properties file and convert it to Properties object in Spring application.
   (adsbygoogle = window.adsbygoogle || []).push({});  For example, we have the properties file located in \src\main\resources\application.properties
In the following PropertiesService class, we implement a method to read properties from classpath and convert it to Properties object.</description>
    </item>
    
  </channel>
</rss>